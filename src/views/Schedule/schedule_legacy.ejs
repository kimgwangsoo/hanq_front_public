<!DOCTYPE html>
<html>
<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
<link rel="stylesheet" type="text/css" href="/css/schedule.css">
<link rel="stylesheet" type="text/css" href="/css/guide.css">
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="//code.jquery.com/jquery-latest.min.js"></script>
<script src="https://code.jquery.com/ui/1.13.1/jquery-ui.js"></script>
<script src="/socket.io/socket.io.js"></script>
<link rel="stylesheet" href="//code.jquery.com/ui/1.13.1/themes/base/jquery-ui.css">
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
<link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
<script src="https://fastly.jsdelivr.net/npm/sweetalert2@10"></script>
<script src="//cdn.rawgit.com/rainabba/jquery-table2excel/1.1.0/dist/jquery.table2excel.min.js"></script>
<!-- <script src="https://fastly.jsdelivr.net/npm/axios/dist/axios.min.js"></script> -->
<!-- <script src="https://unpkg.com/axios/dist/axios.min.js"></script> -->
<script src="/axios/dist/axios.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.js"></script>
<script src="/js/ajax_before_send.js"></script>
<head>
    <title>한방에 큐</title>
</head>
<style>
   

    .rent_add_iframe{
        position:absolute;
        top:-2500px;
        width: 50%;
        /* height: 297mm; */
        height:97%;
        border: 1px solid black;
    }

    .swal2-deny{
        width: 150px;
        /* height:55px; */
    }
    .swal2-actions{
        font-size:2em;
    }
    .rentadd_checkbox{
        width:30px;
        height:30px;
    }
    .rentadd_txt{
        font-weight:bold;
        font-size:18px;
        width:300px;
    }
    .print_chk_box{
        width:23px;
        height:23px;
    }
    .print_option_chk_box{
        width:23px;
        height:23px;
    }
    .flex_space{
        display:flex;
        justify-content: space-around;
        align-items: center;
    }
    .tr_warning{
        background:#ff9a72;
    }
</style>
<%- include('alert2') %>
<%- include('popbillModal') %>
<script>
    var guide_chk = 0;
    var guide_interval = '';

    function ymdformat(x){
        var tval = x.replace(/(\d{4})(\d{2})(\d{2})/g, '$1-$2-$3');
        return tval;
    }

    async function rent_add_history_get(){
        return axios({
            method:'post',
            url:'/rentaddhistoryget',
            data:{
                company:company
            }
        }).then(res=>{
            const data = res.data;
            if(data.code==200){
                console.log(data.companymember);
                console.log(data.data_sign,'data_sign')
                return data
            }else{
                console.log(data.code)
            }
        })
    }

    async function product_get_money(){
        let product_money_obj = {};
        return axios({
            method:'post',
            url:'/productGetMoney',
            data:{},
        }).then(function(res){
            const data = res.data.result;
            // 같은 코드에 대해 날짜가 다른 경우 모두 저장하도록 처리
            data.forEach(function(obj, index) {
                if (!product_money_obj[obj.code]) {
                    // 해당 코드가 처음 나오는 경우 배열로 초기화
                    product_money_obj[obj.code] = [];
                }
                // 각 코드별로 가격 정보를 배열에 추가
                product_money_obj[obj.code].push({
                    rentprice: parseInt(obj.rentprice),
                    date: obj.date
                });
            });
            console.log('product_money_obj',product_money_obj)
            return product_money_obj
        });
    }

    function getTodayLabel() {
        var week = new Array('(일)', '(월)', '(화)', '(수)', '(목)', '(금)', '(토)');
        var today = new Date().getDay();
        var todayLabel = week[today];
        return todayLabel;
    }

    var productlist = '<%=function(){ var mresult = []; for(m of productlist){mresult.push(m.name2+"|"+m.code);} return mresult;}()%>';
    var productlistarr = [];
    for(m of productlist.split(',')){
        productlistarr.push(m);
    }

    async function img_load_complate(x){
        console.log(x);
        var images = x.getElementsByTagName('img');
        var loadedImages = 0;
        console.log('length',images.length)
        
        images[0].onload = function() {
            return 200
        // loadedImages++;
        // console.log('loadedImages',loadedImages)
        // if (loadedImages === images.length) {
        //     console.log("img load ok");
        //     return 200
        // }
        };
        
    }

    async function getBase64Image(name, number, obj, type) {
        console.log(name.length);
        $('.rent_add_iframe').contents().find('body').html('')
        //const base64Images = [];
        //const popbillDom = document.querySelector('.rent_add_dom');
        //popbillDom.innerHTML = "<html></html>";
        var iframe = document.querySelector('.rent_add_iframe');
        for (let i = 0; i < name.length; i++) {
            var iframeDocument = iframe.contentDocument || iframe.contentWindow.document;
            var bodyElement = iframeDocument.querySelector('body');

            // obj[i]를 새로운 div로 감싸고 추가합니다.
            var divElement = document.createElement('div');
            if(type == 'zero'){
                // divElement.style.marginBottom = '20mm';
                bodyElement.style.padding = '0';
                divElement.classList.add('mbody');
            }
            divElement.innerHTML = obj[i];
            bodyElement.appendChild(divElement);
            

        }
        
        let img_load_cnt = 0;
        $('.rent_add_iframe').contents().find('img').load(async function(){
            img_load_cnt++;
            if(img_load_cnt>name.length-1){
                
                //await window.frames['rent_add_iframe'].print();
                return 0
            }
            
        });
    }

    function GetSenderNumberList(){
        let companynum = "<%=bankinfo[0].companynum%>";
        axios({
            method:'post',
            url:'/GetSenderNumberList',
            data:{
                companynum:companynum.replace(/[^0-9]/g,'')
            }
        }).then(function(res){
            const data = res.data.data.result;
            let str = '';
            if(data!=undefined){
                $('.sms_send_number').children('option').remove();
                data.forEach((obj,index)=>{
                    console.log("number:",obj.number);
                    str += '<option value="'+obj.number+'">'+obj.number+'</option>';
                });
                
            }
            $('.sms_send_number').append(str);

            
        });
    }

    var kakao_channel_name = '';
    function ListPlusFriendID(){
        let companynum = "<%=bankinfo[0].companynum%>";
        axios({
            method:'post',
            url:'/ListPlusFriendID',
            data:{
                companynum:companynum.replace(/[^0-9]/g,'')
            }
        }).then(res=>{
            const data = res.data.data;
            console.log(data.result[0].plusFriendID);
            kakao_channel_name = data.result[0].plusFriendID;

        });
    }

    function ListATSTemplate(){
        let companynum = "<%=bankinfo[0].companynum%>";
        axios({
            method:"post",
            url:"/ListATSTemplate",
            data:{
                companynum:companynum.replace(/[^0-9]/g,'')
            }
        }).then(res=>{
            const data = res.data.data.result;
            console.log('kakao',data);
            let str = '';
            if(data!=undefined){
                $('.sms_alert_tab').remove();
                data.forEach((obj,index)=>{
                    str +=`<button class="button sms_alert_tab" onclick="openTemplate(event, 'template1', this)">${obj.templateName}</button><textarea style="display:none;">${obj.template.replace('#{company}','<%=company%>').replace('#{사업소명}','<%=company%>').replace('#{성함}','').replace('#{인정번호}','')}</textarea><input class="tcode" type="hidden" value="${obj.templateCode}">`;
                    // str +='<div class="popbill_msg_type kakao_template" onclick="popbill_msg_type_on(this)">(알림톡 템플릿)<br/>'+obj.templateName+'<textarea style="display:none;">'+obj.template.replace('#{company}','<%=company%>')+'</textarea><input class="tcode" type="hidden" value="'+obj.templateCode+'"></div>'
                });
            }
            if(str!=''){
                $('.sms_alert_area').append(str);
            }
        })
    }

    function openTemplate(evt, tabName, obj) {
        $('.sms_textarea').val('');
        $(obj).addClass('sms_alert_tab_on');
        $('.sms_alert_tab').not($(obj)).removeClass('sms_alert_tab_on');
        $('.swal2-confirm').show();
        $('.sms_textarea').val($(obj).next('textarea').val());
        if($(obj).text()=="계약서 발송"){
            $('.doc_input_area').show();
            $('.doc_date_area').show();
        }else{
            $('.doc_input_area').hide();
            $('.doc_date_area').hide();
        }
        // $('.sms_textarea').prop('readonly', true);
        
    }

    function rent_add_doc_msg(){
        
        $('#popbillModal').show();
        
        GetSenderNumberList();
        ListATSTemplate();
        ListPlusFriendID();
        let html_obj = $('.rent_add_iframe').contents().find('.mbody');
        let tr_data = $('.rent_add_table_tbody').children('tr');
        console.log("html_obj.length",html_obj[0])
        let doc_cnt = -1;
        let name = [];
        let number = [];
        let num = [];
        let phone = [];
        let client_cnt = 0;
        let client_str = '';
        $('.client_tr').remove();
        $.each(tr_data,async function(i){
            if([...new Set(name)].length>1){
                Swal.showValidationMessage(`
                        <div style="font-weight:bold; font-size:18px;">시범 서비스: 1명씩만 보낼수있습니다</div>
                    `);
                // Swal.fire('현재는 1명씩만 보낼수있습니다.','','warning');
                $('#popbillModal').hide();
                return 0;
            }
            
            if($(tr_data[i]).children('td').eq(0).children('input').is(":checked")){
                if(number.indexOf(rent_add_obj[i].number)== -1){
                    client_cnt++;
                    name.push(rent_add_obj[i].name);
                    number.push(rent_add_obj[i].number);
                    num.push(rent_add_obj[i].num);
                    phone.push(rent_add_obj[i].phone);
                    client_str += `<tr class="client_tr"><td><input type="checkbox" style="width:30px; height:30px;" checked></td><td>${rent_add_obj[i].name}</td><td>${rent_add_obj[i].number}</td><td>${rent_add_obj[i].phone}</td></tr>`;
                    $('.print_chk_box').each(async function(index){
                        if($('.print_chk_box').eq(index).is(':checked')){
                            let data_id = $('.print_chk_box').eq(index).data('id');
                            $('.sms_send_label').filter(function() {
                                return $(this).children('input').data('id') == data_id;
                            }).css('display', 'block');
                            doc_cnt++;
                            console.log(rent_add_obj,i,data_id)
                            
                            await html2canvas(html_obj[doc_cnt]).then(canvas => {
                                console.log(doc_cnt,i,name)
                                let dataUrl = canvas.toDataURL('image/png');
                                let data = {
                                    data: dataUrl,
                                    id:name[0]+number[0]+data_id,
                                    type:'jpg',
                                    name:"<%=company%>",
                                    orderkey:num[0],
                                }
                                console.log(data)
                                sendMessage2(data);
                                
                                //$('.sendmsg_make_doc_cnt').text(i+1);
                            });
                            
                            console.log(doc_cnt);
                        }
                        
                    })
                }else{
                    name.push(rent_add_obj[i].name);
                    number.push(rent_add_obj[i].number);
                    num.push(rent_add_obj[i].num);
                }
                
                
            }

        });
        $('.popbill_res_cnt').html(client_cnt);
        $('.popbill_res_tbody').append(client_str);
        $('.confirm_btn').off('click');
        $('.confirm_btn').click(function(){
            if($('.sms_send_number').val()=='none'){
                $('.swal2-content').css({'display':'block'});
                Swal.showValidationMessage(`
                    <div>발송실패: 발신번호를 선택해주세요.</div>
                `);
                return false
            }else if($('.sms_receive_number').val()==''){
                $('.swal2-content').css({'display':'block'});
                Swal.showValidationMessage(`
                    <div>발송실패: 수신번호를 입력해주세요.</div>
                `);
                return false
            }else{
                let name_arr = name;
                let number_arr = number;
                let phone_arr = phone;
                let num_arr = num;
                let tcode = '';
                let content = '';
                let popbill_id = "<%=bankinfo[0].popbillid%>";
                let send_number = '';
                let type = '';
                // name_arr.push('');
                // number_arr.push('');
                // phone_arr.push($('.sms_receive_number').val());
                content = '';
                send_number = $('.sms_send_number').val();
                if($('.sms_tab_on').hasClass('doc')){
                    if($('.sms_textarea').eq(2).val()==''){
                        $('.swal2-content').css({'display':'block'});
                        Swal.showValidationMessage(`
                            <div>발송실패: 발신 내용이 없습니다.</div>
                        `);
                        return false
                    }else{
                        let input_chk = 0;
                        let doc_num_arr = [];
                        content = $('.sms_textarea').eq(2).val();
                        $('.sms_send_input').each(function(index){
                            if($(this).is(":checked")){
                                input_chk = 1;
                                // getBase64Image2(name_arr, number_arr, $('.iprint').eq(index).contents().find('html'),$(this).attr('data-id'),key,$( "#doc_date" ).val())
                                doc_num_arr.push(index);
                            }
                        });
                        if(input_chk==0){
                            console.log("???")
                            Swal.showValidationMessage(`
                                <div>발송실패: 계약서 미선택</div>
                            `);
                            return false
                        }else{
                            sms_insert(name_arr,number_arr,"<%=company%>",send_number,phone_arr,doc_num_arr,'basic',num_arr).then(res=>{
                                if(res.code==200){
                                    axios({
                                        method:'post',
                                        url:'/SendFTS_multi',
                                        data:{
                                            name:name_arr,
                                            number:number_arr,
                                            phone:phone_arr,
                                            tcode:tcode,
                                            sendnumber:send_number,
                                            content:content,
                                            companynum:"<%=bankinfo[0].companynum.replace(/[^0-9]/g,'')%>",
                                            kakaochannelname:kakao_channel_name,
                                            popbillid:popbill_id,
                                            type:'orderDoc',
                                            company:"<%=company%>",
                                            docarr:doc_num_arr,
                                            signkey:res.signkey,
                                            orderkey:num_arr[0],
                                            root:1
                                        }
                                    }).then(res2=>{
                                        console.log('??',res2.data.data.code);
                                        console.log(res2)
                                        console.log(
                                        {
                                            name:name_arr,
                                            number:number_arr,
                                            phone:phone_arr,
                                            tcode:tcode,
                                            sendnumber:send_number,
                                            content:content,
                                            companynum:"<%=bankinfo[0].companynum.replace(/[^0-9]/g,'')%>",
                                            kakaochannelname:kakao_channel_name,
                                            popbillid:popbill_id,
                                            type:'orderDoc',
                                            company:"<%=company%>",
                                            docarr:doc_num_arr,
                                            signkey:res.signkey,
                                            orderkey:num_arr[0]
                                        })
                                        if(res2.data.data.code){
                                            Swal.fire(
                                                '전송 실패',
                                                res2.data.data.message,
                                                'error'
                                            )
                                        }else{
                                            Swal.fire(
                                                '전송 완료',
                                                '',
                                                'success'
                                            )
                                        }
                                    });
                                }else{
                                    Swal.fire(
                                        '전송 실패',
                                        '',
                                        'warning'
                                    )
                                }
                            })
                        }
                    }
                }else if($('.sms_tab_on').hasClass('custum')){
                    if($('.sms_textarea').eq(0).val()==''){
                        $('.swal2-content').css({'display':'block'});
                        Swal.showValidationMessage(`
                            <div>발송실패: 발신 내용이 없습니다.</div>
                        `);
                        return false
                    }else{
                        content = $('.sms_textarea').eq(0).val();
                        sms_insert(name_arr,number_arr,"<%=company%>",send_number,phone_arr,'','custum',num_arr).then(res2=>{
                            axios({
                                method:'post',
                                url:'/SendFTS_multi',
                                data:{
                                    name:name_arr,
                                    number:number_arr,
                                    phone:phone_arr,
                                    tcode:tcode,
                                    sendnumber:send_number,
                                    content:content,
                                    companynum:"<%=bankinfo[0].companynum.replace(/[^0-9]/g,'')%>",
                                    kakaochannelname:kakao_channel_name,
                                    popbillid:popbill_id,
                                    type:'',
                                    company:"<%=company%>",
                                    orderkey:num_arr[0]
                                }
                            }).then(res=>{
                                console.log('??',res.data.data.code);
                                console.log(res)
                                if(res.data.data.code){
                                    Swal.fire(
                                        '전송 실패',
                                        res.data.data.message,
                                        'error'
                                    )
                                }else{
                                    Swal.fire(
                                        '전송 완료',
                                        '',
                                        'success'
                                    )
                                }
                            });
                        });
                    }
                }else if($('.sms_tab_on').hasClass('alert')&&$('.sms_alert_tab_on').text()=='계약서 발송'){
                    if($('.sms_textarea').eq(1).val()==''){
                        $('.swal2-content').css({'display':'block'});
                        Swal.showValidationMessage(`
                            <div>발송실패: 발신 내용이 없습니다.</div>
                        `);
                        return false
                    }else{
                        let input_chk = 0;
                        let doc_num_arr = [];
                        tcode = $('.sms_alert_tab_on').next().next('input').val();
                        content = $('.sms_textarea').eq(2).val();
                        $('.sms_send_input2').each(function(index){
                            if($(this).is(":checked")){
                                input_chk = 1;
                                // getBase64Image2(name_arr, number_arr, $('.iprint').eq(index).contents().find('html'),$(this).attr('data-id'),key,$('#doc_date2').val())
                                doc_num_arr.push(index);
                            }
                        });
                        if(input_chk==0){
                            console.log("???")
                            Swal.showValidationMessage(`
                                <div>발송실패: 계약서 미선택</div>
                            `);
                            return false
                        }else{
                            sms_insert(name_arr,number_arr,"<%=company%>",send_number,phone_arr,doc_num_arr,'alert',num_arr).then(res=>{
                                if(res.code==200){
                                    axios({
                                        method:'post',
                                        url:'/SendATS_multi',
                                        data:{
                                            name:name_arr,
                                            number:number_arr,
                                            phone:phone_arr,
                                            tcode:tcode,
                                            sendnumber:send_number,
                                            content:content,
                                            companynum:"<%=bankinfo[0].companynum.replace(/[^0-9]/g,'')%>",
                                            kakaochannelname:kakao_channel_name,
                                            popbillid:popbill_id,
                                            type:'orderDoc',
                                            company:"<%=company%>",
                                            docarr:doc_num_arr,
                                            signkey:[res.signkey],
                                            orderkey:[num_arr[0]],
                                            root:1
                                        }
                                    }).then(res2=>{
                                        console.log('??',res2.data.data.code);
                                        console.log(res2)
                                        console.log(
                                        {
                                            name:name_arr,
                                            number:number_arr,
                                            phone:phone_arr,
                                            tcode:tcode,
                                            sendnumber:send_number,
                                            content:content,
                                            companynum:"<%=bankinfo[0].companynum.replace(/[^0-9]/g,'')%>",
                                            kakaochannelname:kakao_channel_name,
                                            popbillid:popbill_id,
                                            type:'orderDoc',
                                            company:"<%=company%>",
                                            docarr:doc_num_arr,
                                            signkey:res.signkey,
                                            orderkey:num_arr[0],
                                            root:1
                                        })
                                        if(res2.data.data.code){
                                            Swal.fire(
                                                '전송 실패',
                                                res2.data.data.message,
                                                'error'
                                            )
                                        }else{
                                            Swal.fire(
                                                '전송 완료',
                                                '',
                                                'success'
                                            )
                                        }
                                    });
                                }else{
                                    Swal.fire(
                                        '전송 실패',
                                        '',
                                        'warning'
                                    )
                                }
                                $('#popbillModal').hide();
                            })
                        }
                    }
                }else if($('.sms_tab_on').hasClass('alert')){
                    if($('.sms_textarea').eq(1).val()==''){
                        $('.swal2-content').css({'display':'block'});
                        Swal.showValidationMessage(`
                            <div>발송실패: 발신 내용이 없습니다.</div>
                        `);
                        return false
                    }else{
                        tcode = $('.sms_alert_tab_on').next().next('input').val();
                        content = $('.sms_textarea').eq(1).val();
                        sms_insert(name_arr,number_arr,"<%=company%>",send_number,phone_arr,'','alert',num_arr).then(res2=>{
                            axios({
                                method:'post',
                                url:'/SendATS_multi',
                                data:{
                                    name:name_arr,
                                    number:number_arr,
                                    phone:phone_arr,
                                    tcode:tcode,
                                    sendnumber:send_number,
                                    content:content,
                                    companynum:"<%=bankinfo[0].companynum.replace(/[^0-9]/g,'')%>",
                                    popbillid:popbill_id,
                                    orderkey:num_arr[0]
                                }
                            }).then(res=>{
                                console.log(res);
                                if(res.data.data.code){
                                    Swal.fire(
                                        '전송 실패',
                                        res.data.data.message,
                                        'error'
                                    )
                                }else{
                                    Swal.fire(
                                        '전송 완료',
                                        '',
                                        'success'
                                    )
                                }
                            });
                        });
                    }
                }else{
                    Swal.showValidationMessage(`
                        <div>발송실패: 발신 종류를 선택해주세요</div>
                    `);
                    return false
                }
                
                
                
            }
        })


        
    }

    function sendMessage2(data){
        var msg = JSON.stringify(data);
        var xhr = new XMLHttpRequest();

        xhr.onreadystatechange = () => {
            if (xhr.readyState === 4) {
                console.log(xhr.response);
            }
        };
        xhr.open('POST', '/popbill_send_msg_doc_rentadd');
        xhr.send(msg);
    }

    async function sms_insert(name,number,company,phonereq,phoneres,doc,type,key){
        return axios({
            method:'post',
            url:'/smsinsertrentadd',
            data:{
                name:name[0],
                number:number[0],
                company:company,
                phonereq:phonereq,
                phoneres:phoneres[0],
                doc:doc,
                orderkey:key[0],
                type:type
            }
        }).then(res=>{
            const data = res.data;
            return data;
        })
    }

    function rent_add_doc_print(){
        const mbody = $('.rent_add_iframe').contents().find('.mbody').length;
        console.log("mbody",mbody);
        if(mbody>0){
            window.frames['rent_add_iframe'].print();
        }
        
    }

    function roundToOneDecimalPlace(number) {
        // return Math.round(number * 10) / 10;
        return number;
    }

    function roundUpToNearest50(value) {
        let number = value;
        // 숫자를 문자열로 변환하여 십의 자리 숫자를 가져옵니다.
        let tensDigit = Math.floor(value / 10) % 10;
        console.log("tensDigit",tensDigit,value % 10, Math.ceil(value / 100) * 100)
        // 십의 자리가 5이고, 일의 자리가 0일 때만 올림 처리합니다.
        if (tensDigit === 5 && value % 10 === 0) {
            number = Math.ceil(value / 100) * 100;
        }
        
        return number;
    }


    function roundUpToNearestUnit(number) {
        console.log(number, Math.ceil(number))
        // 숫자를 무조건 올림하고 반환
        return Math.ceil(number / 10) * 10;
    }

    function monthsBetweenDates(date1, date2) {
        // 입력된 날짜 문자열을 Date 객체로 변환
        var d1 = new Date(date1);
        var d2 = new Date(date2);
        // 두 날짜의 연도와 월을 가져옴
        var year1 = d1.getFullYear();
        var year2 = d2.getFullYear();
        var month1 = d1.getMonth();
        var month2 = d2.getMonth();
        
        // 두 날짜 간의 연도 차이와 월 차이 계산
        var monthsDifference = (year2 - year1) * 12 + (month2 - month1);
        
        // 일자가 같은 경우에는 1달을 추가하지 않음
        if (d2.getDate() < d1.getDate()) {
            monthsDifference--;
        }
        
        return monthsDifference+1;
    }

    var zerotable_data = [];

    async function rent_add_make_doc_zero(x,p_obj){
        let now = new Date();
        let year = now.getFullYear();
        let mon = (now.getMonth() + 1) > 9 ? '' + (now.getMonth() + 1) : '0' + (now.getMonth() + 1);
        let day = now.getDate() > 9 ? '' + now.getDate() : '0' + now.getDate();
        let chan_val = year + '-' + mon + '-' + day;
        const lastdate = new Date(year, mon, 0).getDate();
        let last_chan_val = year + '-' + mon + '-' +lastdate;
        let tr_data = $(x).children('tbody').children('tr');
        let name_arr = [];
        let number_arr = [];
        let el_arr = [];
        // console.log(tr_data);
        const ionContents = document.getElementsByClassName('iprint_zero');
        const ionContentsContentDocument = ionContents.contentDocument;
        let same_arr = [];
        $.each(tr_data,async function(i){
            if($(tr_data[i]).children('td').eq(0).children('input').is(":checked")){
                let otr_data = zerotable_data.data[i];
                let name = otr_data.name;
                let number = otr_data.number;
                let constartdate = otr_data.constartdate;
                same_arr.push(name+"|"+number);
            }else{
                same_arr.push('');
            }
        });
        console.log('salme_arr:',same_arr)
        const duplicateIndexes = {};
        same_arr.forEach((value, index) => {
            if (!(value in duplicateIndexes)) {
                duplicateIndexes[value] = [index];
            } else {
                duplicateIndexes[value].push(index);
            }
        });

        for (const [value, indexes] of Object.entries(duplicateIndexes)) {
            if (indexes.length > 1) {
                console.log(`값 ${value}의 중복된 인덱스: ${indexes.join(', ')}`);
            }
        }
        let continue_arr = [];
        let continue_chk = 0;
        let doc_create_cnt = 0;
        $.each(tr_data,async function(i){
            for(var j=0; j<ionContents.length; j++){
                console.log(zerotable_data)
                if($(tr_data[i]).children('td').eq(0).children('input').is(":checked")){
                    console.log("coninue:",i,continue_arr)
                    for(var c=0; c<continue_arr.length; c++){
                        if((i)==continue_arr[c]){
                            console.log("continue:",c)
                            continue_chk = 1;
                        }
                    }
                    if(continue_chk==1)return true;
                    doc_create_cnt++;
                    $('.doc_create_cnt').html(doc_create_cnt);
                    let otr_data = zerotable_data.data;
                    let name = otr_data[i].name;
                    let number = otr_data[i].number;
                    let order_date = '';
                    let otr_pcode = [$(tr_data[i]).children('td').eq(4).data('pcode')];
                    let otr_bcode = [$(tr_data[i]).children('td').eq(4).data('bcode')];
                    let otr_product = [$(tr_data[i]).children('td').eq(4).text()];
                    let otr_buybcode = [$(tr_data[i]).children('td').eq(4).text()];
                    let otr_rentstart = [$(tr_data[i]).children('td').eq(6).children('input').val()];
                    let otr_rentend = [$(tr_data[i]).children('td').eq(7).children('input').val()];
                    let otr_bcodesale = [$(tr_data[i]).children('td').eq(8).text()];
                    let di_arr = [1];
                    let bcode_sale_cnt = [];
                    let sign = '';
                    if(duplicateIndexes[name+"|"+number].length>1){
                        duplicateIndexes[name+"|"+number].forEach(function(obj,index){
                            if(index!=0){
                                console.log([duplicateIndexes[name+"|"+number]])
                                otr_product.push($(tr_data[obj]).children('td').eq(4).text());
                                otr_buybcode.push($(tr_data[obj]).children('td').eq(4).text());
                                otr_pcode.push($(tr_data[obj]).children('td').eq(4).data('pcode'));
                                otr_rentstart.push($(tr_data[obj]).children('td').eq(6).children('input').val());
                                otr_rentend.push($(tr_data[obj]).children('td').eq(7).children('input').val());
                                otr_bcodesale.push($(tr_data[obj]).children('td').eq(8).text());
                                di_arr.push(1);
                            }    
                            // page_otr_data.splice(duplicateIndexes[order_date+"|"+name+"|"+number][1]);
                            continue_arr.push(obj)
                        });
                        
                    }
                    // let di = 1;
                    // let rentendResult = [];
                    // let rentstartResult = [];
                    let rentendResult = {};
                    let rentstartResult = {};
                    let pdfstr1 = '';
                    let pdfstr1_2 = '';
                    let alldm = 0;
                    let alldm2 = 0;
                    let pdfdantotal = 0;
                    let pdfbuytotal = 0;
                    let pdfgongtotal = 0;
                    // let name = $(tr_data[i]).children('td').eq(1).text();
                    // let number = $(tr_data[i]).children('td').eq(2).text();
                    // let pname = $(tr_data[i]).children('td').eq(3).text();
                    // let pcode = $(tr_data[i]).children('td').eq(4).text();
                    // let bcode = $(tr_data[i]).children('td').eq(5).text();
                    // let rentstart = $(tr_data[i]).children('td').eq(6).text().replace(/(\d{4})(\d{2})(\d{2})/g, '$1-$2-$3');
                    // let rentend = $(tr_data[i]).children('td').eq(7).text().replace(/(\d{4})(\d{2})(\d{2})/g, '$1-$2-$3');
                    let rentstart = '';
                    let rentend = '';
                    // let run_date = $(tr_data[i]).children('td').eq(8).text();
                    console.log(otr_data,"otr_data")
                    let target = otr_data[i].target;
                    let ranker = otr_data[i].ranker;
                    let regident = otr_data[i].regident;
                    let address = otr_data[i].address;
                    let guardname = otr_data[i].guardname;
                    let guardtarget = otr_data[i].guardtarget;
                    let manager = otr_data[i].manager;
                    let phone = otr_data[i].phone1;
                    //let bcode_sale_date = $(tr_data[i]).children('input').eq(12).val();
                    let banknum = '';
                    let pname2 = [];
                    console.log("otr_pcode",otr_pcode);
                    if(otr_rentstart.length>0){
                        for (var j = 0; j < otr_pcode.length; j++) {
                            var currentString = otr_pcode[j];
                            for (var p=0; p<productlistarr.length; p++){
                                if (productlistarr[p].includes(currentString)) {
                                    // '|123'를 포함하는 문자열을 발견했을 때의 처리
                                    pname2.push(productlistarr[p].split("|")[0]); // 출력: 'a|123'
                                    console.warn(pname2)
                                    continue
                                }
                            }
                        }
                        
                        let datenowarr = otr_data[i].datenow.replace(/(\[|\]|\'|\|| |&#39|\;)/g,'').split('~');
                        let nextdatearr = otr_data[i].nextdate.replace(/(\[|\]|\'|\|| |&#39|\;)/g,'').split(',');
                        let sale =  otr_data[i].sale;
                        let dan = 0;
                        let bon = 0;
                        // let dan = p_obj[otr_pcode[0]];
                        // let bon = p_obj[otr_pcode[0]]*(sale/100);
                        // for (var p=0; p<otr_pcode.length; p++){
                        //     dan = p_obj[otr_pcode[p]];
                        //     bon = p_obj[otr_pcode[p]]*(sale/100);
                        // }
                        let gong = dan-bon;
                        // let dan =  parseInt($(tr_data[i]).children('input').eq(2).val())/(parseInt(sale)/100);
                        // let bon =  parseInt($(tr_data[i]).children('input').eq(2).val());
                        // let gong = dan * ((100-parseInt(sale))/100);
                        /*--------------------------------------------------------*
                        // 전체 대여기간 급여제공기록지 생성
                        *--------------------------------------------------------*/
                        console.log("otr_rentstart",otr_rentstart,"otr_rentend",otr_rentend)
                        console.log("otr_buybcode",otr_buybcode)

                        // 중복된 값의 인덱스 추출
                        const indexMap = otr_buybcode.reduce((acc, curr, index) => {
                            acc[curr] = acc[curr] || [];
                            acc[curr].push(index);
                            return acc;
                        }, {});
                        console.log(indexMap);
                        // 추출된 인덱스를 사용하여 원래 배열에서 값 분리
                        // index를 낮은 순서대로 정렬하여 분리 배열 생성
                        const separatedData_buybcode = Object.values(indexMap).sort((a, b) => a[0] - b[0]).map(indexes => indexes.map(index => otr_buybcode[index]));
                        const separatedData_rentstart = Object.values(indexMap).sort((a, b) => a[0] - b[0]).map(indexes => indexes.map(index => otr_rentstart[index]));
                        const separatedData_product = Object.values(indexMap).sort((a, b) => a[0] - b[0]).map(indexes => indexes.map(index => otr_product[index]));
                        const separatedData_rentrend = Object.values(indexMap).sort((a, b) => a[0] - b[0]).map(indexes => indexes.map(index => otr_rentend[index]));
                        const separatedData_pcode = Object.values(indexMap).sort((a, b) => a[0] - b[0]).map(indexes => indexes.map(index => otr_pcode[index]));
                        const separatedData_pname2 = Object.values(indexMap).sort((a, b) => a[0] - b[0]).map(indexes => indexes.map(index => pname2[index]));
                        const separatedData_bcodesale = Object.values(indexMap).sort((a, b) => a[0] - b[0]).map(indexes => indexes.map(index => otr_bcodesale[index]));
                        // separatedData_product 배열을 하나의 배열로 병합
                        otr_product = separatedData_product.reduce((acc, curr) => {
                            return acc.concat(curr);
                        }, []);
                        otr_pcode = separatedData_pcode.reduce((acc, curr) => {
                            return acc.concat(curr);
                        }, []);
                        pname2 = separatedData_pname2.reduce((acc, curr) => {
                            return acc.concat(curr);
                        }, []);
                        otr_bcodesale = separatedData_bcodesale.reduce((acc, curr) => {
                            return acc.concat(curr);
                        }, []);
                        
                        // 결과 출력
                        console.log(otr_rentstart,"separatedData_rentstart",separatedData_rentstart)
                        console.log(otr_product,"separatedData_product",separatedData_product)
                        // 각 날짜 문자열에 하이픈 추가
                        const formattedData_rentstart =separatedData_rentstart.map(dateArr => {
                            return dateArr.map(dateStr => {
                                const year = dateStr.slice(0, 4);
                                const month = dateStr.slice(4, 6);
                                const day = dateStr.slice(6, 8);
                                return dateStr;
                            });
                        });
                        
                        const formattedData_rentend = separatedData_rentrend.map(dateArr => {
                            return dateArr.map(dateStr => {
                                const year = dateStr.slice(0, 4);
                                const month = dateStr.slice(4, 6);
                                const day = dateStr.slice(6, 8);
                                return dateStr;
                            });
                        });
                        console.log("formattedData_rentstart",formattedData_rentstart)
                        // 각 날짜 문자열을 Date 객체로 변환하여 정렬

                        let concat_arr_obj = { 
                            concat_arr_rentstart:[],
                            concat_arr_rentend:[]
                        };
                        formattedData_rentstart.forEach(function(arr,index){
                            arr_sort = arr.sort((a, b) => new Date(a) - new Date(b));
                            console.log(arr)
                            concat_arr_obj.concat_arr_rentstart = concat_arr_obj.concat_arr_rentstart.concat(arr_sort);
                            
                            

                        });
                        formattedData_rentend.forEach(function(arr,index){
                            arr_sort = arr.sort((a, b) => new Date(a) - new Date(b));
                            console.log(arr)
                            concat_arr_obj.concat_arr_rentend = concat_arr_obj.concat_arr_rentend.concat(arr_sort);
                            
                            

                        });
                        // const sortedData_rentstart = concat_arr_obj.concat_arr_rentstart.sort((a, b) => new Date(a) - new Date(b));
                        // const sortedData_rentend = concat_arr_obj.concat_arr_rentend.sort((a, b) => new Date(a) - new Date(b));
                        // 결과 출력
                        console.log(concat_arr_obj)
                        
                        concat_arr_obj.concat_arr_rentstart.forEach(function(obj,index){
                            console.log("zdfdffdf:",otr_product)
                            rentstart = concat_arr_obj.concat_arr_rentstart[index].replace(/(\d{4})(\d{2})(\d{2})/g, '$1-$2-$3');
                            rentend = concat_arr_obj.concat_arr_rentend[index].replace(/(\d{4})(\d{2})(\d{2})/g, '$1-$2-$3');
                            rentendResult[index]=[];
                            rentstartResult[index]=[];
                            bcode_sale_date = otr_bcodesale[index];
                            console.log("bcode_sale_date",otr_bcodesale)
                            console.log("count",rentstart,rentend)
                            console.log("datenowarr",datenowarr)

                            bcode_sale_cnt.push(0);
                            if(new Date(rentend)>new Date(datenowarr[1])){
                                if(new Date(rentstart)<new Date(datenowarr[1])){
                                    if(bcode_sale_date!=''){
                                        if(new Date(bcode_sale_date)>new Date(rentstart)){
                                            if(new Date(datenowarr[1])>new Date(bcode_sale_date)){
                                                di_arr[index]++;
                                                bcode_sale_cnt[index] = di_arr[index];
                                                rentendResult[index].push(bcode_sale_date);
                                                rentstartResult[index].push(rentstart);
                                                let bocde_sale_date_plus = new Date(new Date(bcode_sale_date).setDate(new Date(bcode_sale_date).getDate() + 1));
                                                let bocde_sale_year = bocde_sale_date_plus.getFullYear();
                                                let bocde_sale_month = ('0' + (bocde_sale_date_plus.getMonth() + 1)).slice(-2);
                                                let bocde_sale_day = bocde_sale_date_plus.getDate() > 9 ? '' + bocde_sale_date_plus.getDate() : '0' + bocde_sale_date_plus.getDate();
                                                rentstart = bocde_sale_year + "-" + bocde_sale_month + "-" + bocde_sale_day;
                                            }
                                        }else{
                                            bcode_sale_cnt[index] = di_arr[index];
                                        }
                                    }
                                    di_arr[index]++;
                                    rentendResult[index].push(datenowarr[1]);
                                    rentstartResult[index].push(rentstart);
                                }
                                // di++;
                                // rentendResult.push(datenowarr[1]);
                                // rentstartResult.push(rentstart);

                                var nextdatearrLength = nextdatearr.length;
                                for (var i = nextdatearrLength - 1; i >= 0; i--) {
                                    var nextdate = nextdatearr[i].split('~');
                                    console.log("nextdate",nextdate);
                                    if(nextdate[1]>=rentstart){
                                        if(nextdate[0]<rentstart&&nextdate[1]>rentstart){
                                            rentstartResult[index].push(rentstart);
                                        }else{
                                            rentstartResult[index].push(nextdate[0]);
                                        }
                                        
                                        if (new Date(rentend) > new Date(nextdate[1])) {
                                            if(bcode_sale_date!=''&&bcode_sale_cnt[index]==0){
                                                if(new Date(bcode_sale_date)>new Date(nextdate[0])){
                                                    if(new Date(nextdate[1])>new Date(bcode_sale_date)){
                                                        di_arr[index]++;
                                                        bcode_sale_cnt[index] = di_arr[index];
                                                        rentendResult[index].push(bcode_sale_date);
                                                        // rentstartResult.push(nextdate[0]);
                                                        let bocde_sale_date_plus = new Date(new Date(bcode_sale_date).setDate(new Date(bcode_sale_date).getDate() + 1));
                                                        let bocde_sale_year = bocde_sale_date_plus.getFullYear();
                                                        let bocde_sale_month = ('0' + (bocde_sale_date_plus.getMonth() + 1)).slice(-2);
                                                        let bocde_sale_day = bocde_sale_date_plus.getDate() > 9 ? '' + bocde_sale_date_plus.getDate() : '0' + bocde_sale_date_plus.getDate();
                                                        let rentstart = bocde_sale_year + "-" + bocde_sale_month + "-" + bocde_sale_day;
                                                        rentstartResult[index].push(rentstart);
                                                    }
                                                }else{
                                                    bcode_sale_cnt[index] = di_arr[index];
                                                }
                                            }
                                            di_arr[index]++;
                                            rentendResult[index].push(nextdate[1]);
                                        } else {
                                            if(bcode_sale_date!=''&&bcode_sale_cnt[index]==0){
                                                console.log("bcode_sale_sestest")
                                                if(new Date(bcode_sale_date)>new Date(nextdate[0])&&new Date(rentstart)<=new Date(nextdate[0])){
                                                    console.log("bcode_sale_sestest",nextdate[1])
                                                    if(new Date(nextdate[1])>new Date(bcode_sale_date)&&new Date(rentend)>new Date(bcode_sale_date)){
                                                        console.log("bcode_sale_cnt+++")
                                                        di_arr[index]++;
                                                        bcode_sale_cnt[index] = di_arr[index];
                                                        rentendResult[index].push(bcode_sale_date);
                                                        // rentstartResult.push(nextdate[0]);
                                                        let bocde_sale_date_plus = new Date(new Date(bcode_sale_date).setDate(new Date(bcode_sale_date).getDate() + 1));
                                                        let bocde_sale_year = bocde_sale_date_plus.getFullYear();
                                                        let bocde_sale_month = ('0' + (bocde_sale_date_plus.getMonth() + 1)).slice(-2);
                                                        let bocde_sale_day = bocde_sale_date_plus.getDate() > 9 ? '' + bocde_sale_date_plus.getDate() : '0' + bocde_sale_date_plus.getDate();
                                                        let rentstart = bocde_sale_year + "-" + bocde_sale_month + "-" + bocde_sale_day;
                                                        rentstartResult[index].push(rentstart);
                                                    }
                                                }else if(new Date(bcode_sale_date)<new Date(rentstart)){
                                                    
                                                    bcode_sale_cnt[index] = di_arr[index];
                                                }
                                            }
                                            rentendResult[index].push(rentend);
                                            break;
                                        }
                                    }
                                    
                                }
                            }else{
                                if(bcode_sale_date!=''){
                                    if(new Date(bcode_sale_date)>new Date(rentstart)){
                                        if(new Date(datenowarr[1])>new Date(bcode_sale_date)&&new Date(rentend)>new Date(bcode_sale_date)){
                                            di_arr[index]++;
                                            bcode_sale_cnt[index] = di_arr[index];
                                            rentendResult[index].push(bcode_sale_date);
                                            rentstartResult[index].push(rentstart);
                                            let bocde_sale_date_plus = new Date(new Date(bcode_sale_date).setDate(new Date(bcode_sale_date).getDate() + 1));
                                            let bocde_sale_year = bocde_sale_date_plus.getFullYear();
                                            let bocde_sale_month = ('0' + (bocde_sale_date_plus.getMonth() + 1)).slice(-2);
                                            let bocde_sale_day = bocde_sale_date_plus.getDate() > 9 ? '' + bocde_sale_date_plus.getDate() : '0' + bocde_sale_date_plus.getDate();
                                            rentstart = bocde_sale_year + "-" + bocde_sale_month + "-" + bocde_sale_day;
                                        }
                                    }else{
                                        bcode_sale_cnt[index] = di_arr[index];
                                    }
                                }
                                rentendResult[index].push(rentend);
                                rentstartResult[index].push(rentstart)
                            }
                        });
                        /*--------------------------------------------------------*
                        // 당월 대여기간 급여제공기록지 생성
                        *--------------------------------------------------------*/
                        // if(new Date(rentstart)<new Date(year + '-' + mon + '-' + '01')){
                        //     rentstartResult.push(year + '-' + mon + '-' + '01');
                        // }else{
                        //     rentstartResult.push(rentstart);
                        // }

                        // if(new Date(rentend)>new Date(last_chan_val)){
                        //     rentendResult.push(last_chan_val);
                        // }else{
                        //     rentendResult.push(rentend);
                        // }

                        /*--------------------------------------------------------*
                        // 급여제공기록지 ROW 추가
                        *--------------------------------------------------------*/
                        let price_dan_copy = 0;
                        let price_buy_copy = 0;
                        let price_gong_copy = 0;
                        let price_dan = 0;
                        let di_cnt = 0;
                        let dm_arr = [];

                        di_arr.forEach(function(di_obj,di_index){
                            for(var y=0; y<di_arr[di_cnt]; y++){
                                // p_obj 결과가 2개 이상일 때 rentstartResult[di_cnt][y]보다 작은 첫번째 값으로 설정
                                let selectedPrice = null;
                                if (p_obj[otr_pcode[di_cnt]] && Array.isArray(p_obj[otr_pcode[di_cnt]])) {
                                    // 날짜 기준으로 정렬
                                    const sortedPrices = p_obj[otr_pcode[di_cnt]].sort((a, b) => new Date(a.date) - new Date(b.date));
                                    // rentstartResult[di_cnt][y]보다 작은 가장 최근 날짜의 가격 찾기
                                    for (let i = sortedPrices.length - 1; i >= 0; i--) {
                                        if (new Date(sortedPrices[i].date) <= new Date(rentstartResult[di_cnt][y])) {
                                            selectedPrice = sortedPrices[i].rentprice;
                                            break;
                                        }
                                    }
                                    // 조건에 맞는 가격이 없으면 첫 번째 가격 사용
                                    if (selectedPrice === null && sortedPrices.length > 0) {
                                        selectedPrice = sortedPrices[0].rentprice;
                                    }
                                }
                                dan = selectedPrice !== null ? selectedPrice : p_obj[otr_pcode[di_cnt]];
                                bon = dan * (sale/100);
                                price_dan = parseInt(dan);
                                // var dm = 0;
                                dm_arr.push(0);
                                dm_arr[di_cnt]=0;
                                console.log("dm_arr",dm_arr)
                                var rs = rentstartResult[di_cnt][y];
                                var re = rentendResult[di_cnt][y];
                                // var dif = new Date(re.split('-')[0]+'-'+re.split('-')[1]+'-01') - new Date(rs.split('-')[0]+'-'+rs.split('-')[1]+'-01');
                                // var cDay = 24 * 60 * 60 * 1000;// 시 * 분 * 초 * 밀리세컨
                                // var cMonth = cDay * 30;// 월 만듬
                                // var cmonth2 = (parseInt(dif/cMonth)+1);
                                let cmonth2 = monthsBetweenDates(rs.split('-')[0]+'-'+rs.split('-')[1]+'-01',re.split('-')[0]+'-'+re.split('-')[1]+'-01');
                                let sale_txt = '';

                                console.log("bcoce:",(y+1),' ',bcode_sale_cnt[di_cnt])
                                if((y+1)>=bcode_sale_cnt[di_cnt]&&bcode_sale_cnt[di_cnt]!=0){
                                    sale_txt = '<span style="font-size:22px; padding-left:5px;">½</span>';
                                    price_dan_copy = roundUpToNearest50(parseInt(price_dan/2));
                                }else{
                                    price_dan_copy = price_dan;
                                }
                                if((y+1)>=bcode_sale_cnt[di_cnt]&&bcode_sale_cnt[di_cnt]!=0){
                                    sale_txt = '<span style="font-size:22px; padding-left:5px;">½</span>';
                                    dan = roundUpToNearest50(parseInt(dan)/2);
                                }
                                for(var k=1; k<=cmonth2; k++){
                                    if(k==1){
                                        var lastDate = new Date(rs.split('-')[0], rs.split('-')[1], 0).getDate();
                                        var onem = roundToOneDecimalPlace(parseInt(dan)/lastDate);
                                        let sm2 = 0;
                                        var sm = lastDate-parseInt(rs.split('-')[2])+1;
                                        if((rs.split('-')[0]+rs.split('-')[1])==(re.split('-')[0]+re.split('-')[1])){
                                            sm2 = lastDate-parseInt(re.split('-')[2]);
                                        }
                                        dm_arr[di_cnt]+=(sm-sm2)*onem;
                                    }else if(k==cmonth2){
                                        var lastDate = new Date(re.split('-')[0], re.split('-')[1], 0).getDate();
                                        var onem = roundToOneDecimalPlace(parseInt(dan)/lastDate);
                                        dm_arr[di_cnt]+=parseInt(re.split('-')[2])*onem;
                                    }else{
                                        dm_arr[di_cnt]+=parseInt(dan);
                                    }
                                }
                                let total_money = dm_arr[di_cnt];
                                let bon_money = Math.ceil(parseInt(total_money)*(parseInt(sale)/100));
                                let gong_money = parseInt(parseInt(total_money)*(1-(parseInt(sale)/100)));
                                if($(".print_option_chk_box").is(":checked")){
                                    //total_money =  Math.floor(total_money/10)*10;
                                    bon_money = Math.floor(parseInt(parseInt(total_money)*(parseInt(sale)/100))/10)*10;
                                    gong_money = roundUpToNearestUnit(parseInt(parseInt(total_money)*(1-(parseInt(sale)/100))));
                                    total_money = bon_money+gong_money;
                                    pdfdantotal += total_money;
                                    pdfbuytotal += bon_money;
                                    pdfgongtotal += gong_money;
                                }else{
                                    pdfdantotal += total_money;
                                    pdfbuytotal += bon_money;
                                    pdfgongtotal += gong_money;
                                }
                                // if(y==di-1){
                                    // if((y+1)>=bcode_sale_cnt&&bcode_sale_cnt!=0){
                                    //     console.log(parseInt(dan/2));
                                    //     price_dan_copy = parseInt(dan/2);
                                    //     pdfdantotal += parseInt(dan/2);
                                    //     //payment_dan_result += Math.floor(parseInt(pdfdan)/10) * 10;
                                    //     price_buy_copy = parseInt(bon/2);
                                    //     pdfbuytotal += parseInt(bon/2);
                                    //     //payment_buy_result += Math.floor(parseInt(pdfbuy)/10) * 10;
                                    //     price_gong_copy = parseInt(gong/2);
                                    //     pdfgongtotal += parseInt(gong/2);
                                    //     //payment_gong_result += Math.floor(parseInt(pdfgong)/10) * 10;
                                    // }else{
                                    //     price_dan_copy = dan;
                                    //     pdfdantotal += dan;
                                    //     //payment_dan_result += Math.floor(parseInt(pdfdan)/10) * 10;
                                    //     price_buy_copy = bon;
                                    //     pdfbuytotal += bon;
                                    //     //payment_buy_result += Math.floor(parseInt(pdfbuy)/10) * 10;
                                    //     price_gong_copy = gong;
                                    //     pdfgongtotal += gong;
                                    //     // pdfdantotal += parseInt(dan);
                                    //     // pdfbuytotal += parseInt(bon);
                                    //     // pdfgongtotal += parseInt(gong);
                                    // }
                                // }
                                // pdfstr1 += "<tr class='addpdf' style='height:40px;'><td class='br bl bd'>"+otr_product[di_cnt]+"</td><td class='br bd'>"+pname2[di_cnt]+"</td><td class='br bd'>"+otr_pcode[di_cnt]+"</td><td class='br bd'>"+parseInt(price_dan_copy).toLocaleString()+"</td><td class='br bd'>"+rentstartResult[di_cnt][y]+"~<br/>"+rentendResult[di_cnt][y]+"</td><td class='br bd'><textarea class='pdfstr_custum pdfstr_custum_dan' onchange='textarea_change(this)'>"+parseInt(total_money).toLocaleString()+"</textarea></td><td class='br bd'><textarea class='pdfstr_custum pdfstr_custum_buy' onchange='textarea_change(this)'>"+parseInt(bon_money).toLocaleString()+"</textarea></td><td class='br bd'><textarea class='pdfstr_custum pdfstr_custum_gong' onchange='textarea_change(this)'>"+parseInt(gong_money).toLocaleString()+"</textarea></td></tr>";
                                pdfstr1 += `<tr class='addpdf' style='height:40px;'>
                                    <td class='br bl bd'>${otr_product[di_cnt]}</td>
                                    <td class='br bd'>${otr_pcode}<br/>(${otr_product[di_cnt]})</td>
                                    <td class='br bd'></td>
                                    <td class='br bd'>O</td>
                                    <td class='br bd'>${rentstartResult[di_cnt][y]}~<br/>${rentendResult[di_cnt][y]}</td>
                                    <td class='br bd'><textarea class='pdfstr_custum pdfstr_custum_dan' onchange='textarea_change(this)'>${parseInt(total_money).toLocaleString()}</textarea></td>
                                    <td class='br bd'><%=bankinfo[0].company%></td>
                                    <td class='br bd'><%=companyinfo[0].companynum%></td>
                                </tr>`;
                                // pdfstr1 += "<tr class='addpdf' style='height:40px;'><td class='br bl bd'>"+pname+"</td><td class='br bd'>"+pname2+"</td><td class='br bd'>"+pcode+"</td><td class='br bd'>"+parseInt(price_dan_copy).toLocaleString()+"</td><td class='br bd'>"+parseInt(price_buy_copy).toLocaleString()+"</td><td class='br bd'>"+parseInt(price_gong_copy).toLocaleString()+"</td><td class='br bd'>"+rentstartResult[y]+"~"+rentendResult[y]+"</td></tr>";
                                console.log("di_cnt_++",di_cnt)
                            }   
                            di_cnt++; 
                        });
                        
                        /*--------------------------------------------------------*
                        // 공급계약서 ROW 추가
                        *--------------------------------------------------------*/
                        let payment_product_arr = [];
                        let payment_product_arr2 = [];
                        di_cnt = 0;
                        dm_arr = [];
                        di_arr.forEach(function(di_obj,di_index){
                            for(var y=0; y<di_arr[di_cnt]; y++){
                                // p_obj 결과가 2개 이상일 때 rentstartResult[di_cnt][y]보다 작은 첫번째 값으로 설정
                                let productPrice = p_obj[otr_pcode[di_cnt]];
                                if (Array.isArray(productPrice) && productPrice.length > 1) {
                                    // 날짜 기준으로 정렬
                                    productPrice.sort((a, b) => new Date(a.date) - new Date(b.date));
                                    // rentstartResult[di_cnt][y]보다 작은 첫번째 값 찾기
                                    let selectedPrice = productPrice[0].rentprice; // 기본값
                                    for (let i = 0; i < productPrice.length; i++) {
                                        if (new Date(productPrice[i].date) <= new Date(rentstartResult[di_cnt][y])) {
                                            selectedPrice = productPrice[i].rentprice;
                                        } else {
                                            break;
                                        }
                                    }
                                    dan = selectedPrice;
                                } else if (Array.isArray(productPrice) && productPrice.length === 1) {
                                    dan = productPrice[0].rentprice;
                                } else {
                                    dan = productPrice;
                                }
                                bon = dan * (sale/100);
                                price_dan = parseInt(dan);
                                // let dm = 0;
                                dm_arr.push(0);
                                dm_arr[di_cnt]=0;
                                let rs = rentstartResult[di_cnt][y];
                                let re = rentendResult[di_cnt][y];
                                // let dif = new Date(re.split('-')[0]+'-'+re.split('-')[1]+'-01') - new Date(rs.split('-')[0]+'-'+rs.split('-')[1]+'-01');
                                // let cDay = 24 * 60 * 60 * 1000;// 시 * 분 * 초 * 밀리세컨
                                // let cMonth = cDay * 30;// 월 만듬
                                // let cmonth2 = (parseInt(dif/cMonth)+1);
                                let cmonth2 = monthsBetweenDates(rs.split('-')[0]+'-'+rs.split('-')[1]+'-01',re.split('-')[0]+'-'+re.split('-')[1]+'-01');

                                if((y+1)>=bcode_sale_cnt[di_cnt]&&bcode_sale_cnt[di_cnt]!=0){
                                    console.log("round",dan,parseInt(dan)/2,roundUpToNearest50(parseInt(dan/2)))
                                    dan = roundUpToNearest50(parseInt(dan)/2);
                                }
                                for(var k=1; k<=cmonth2; k++){
                                    //console.log(k);
                                    if(k==1){
                                        var lastDate = new Date(rs.split('-')[0], rs.split('-')[1], 0).getDate();
                                        var onem = roundToOneDecimalPlace(parseInt(dan)/lastDate);
                                        var sm = lastDate-parseInt(rs.split('-')[2])+1;
                                        let sm2 = 0;
                                        var sm = lastDate-parseInt(rs.split('-')[2])+1;
                                        if((rs.split('-')[0]+rs.split('-')[1])==(re.split('-')[0]+re.split('-')[1])){
                                            sm2 = lastDate-parseInt(re.split('-')[2]);
                                        }
                                        dm_arr[di_cnt]+=(sm-sm2)*onem;
                                        // dm+=parseInt((sm-sm2)*onem);
                                    }else if(k==cmonth2){
                                        var lastDate = new Date(re.split('-')[0], re.split('-')[1], 0).getDate();
                                        var onem = roundToOneDecimalPlace(parseInt(dan)/lastDate);

                                        dm_arr[di_cnt]+=parseInt(re.split('-')[2])*onem;
                                        // dm+=parseInt(parseInt(re.split('-')[2])*onem);
                                    }else{
                                        dm_arr[di_cnt]+=parseInt(dan);
                                        // dm+=parseInt(dan);
                                    }
                                }
                                let total_money = dm_arr[di_cnt];
                                let bon_money = Math.ceil(parseInt(total_money)*(parseInt(sale)/100));
                                if($(".print_option_chk_box").is(":checked")){
                                    total_money =  Math.floor(total_money/10)*10;
                                    bon_money = Math.floor(parseInt(parseInt(total_money)*(parseInt(sale)/100))/10)*10;
                                    alldm +=  Math.floor(total_money/10)*10;
                                    alldm2 += Math.floor(parseInt(parseInt(total_money)*(parseInt(sale)/100))/10)*10;
                                }else{
                                    alldm += total_money;
                                    alldm2 += bon_money;
                                }
                                payment_product_arr.push(otr_product[di_cnt]);
                                payment_product_arr2.push(pname2[di_cnt]);
                                //pdfstr1 += "<tr class='addpdf' height=47 style='mso-height-source:userset;height:35.25pt'><td colspan=3 height=47 class='xl368' style='border-right:1.0pt solid black; border-top:none;'>"+$('.'+targetclass+' .pdfname').eq(i).text()+"</td><td class='xl368' style='border-right:1.0pt solid black;border-top:none;border-left:none'>"+$('.'+targetclass+' .pdfname2').eq(i).text()+"</td><td class='xl368' style='border-right:1.0pt solid black;border-top:none;border-left:none'>"+$('.'+targetclass+' .pdfcode').eq(i).text()+"</td><td colspan=2 class='xl368' width=171 style='border-right:1.0pt solid black;border-top:none;border-left:none'>"+$('.'+targetclass+' .bcodeinput').eq(i).val()+"</td><td class='xl368' style='border-right:1.0pt solid black;border-top:none;border-left:none'>"+rentstartResult[y]+"</td><td class='xl368' style='border-right:1.0pt solid black;border-top:none;border-left:none'>~</td><td class='xl368' style='border-right:1.0pt solid black;border-top:none;border-left:none'>"+rentendResult[y]+"</td><td class='xl368' style='border-right:1.0pt solid black;border-top:none;border-left:none'>"+parseInt(dm).toLocaleString()+"원</td><td class='xl368 sdate' style='border-right:1.0pt solid black;border-right:1.0pt solid black;border-top:none;border-left:none'>"+parseInt(parseInt(dm)*(parseInt(psale)/100)).toLocaleString()+"원</td></tr>";
                                pdfstr1_2 += "<tr class='addpdf'><td class='tg-c3ow'>"+otr_product[di_cnt]+"</td><td class='tg-c3ow'>"+pname2[di_cnt]+"</td><td class='tg-c3ow'>"+otr_pcode[di_cnt]+"</td><td class='tg-c3ow'>"+otr_buybcode[di_cnt]+"</td><td class='tg-c3ow' style='padding:5px 1px;'>"+rentstartResult[di_cnt][y]+"</td><td class='tg-c3ow'>~</td><td class='tg-c3ow' style='padding:5px 1px;'>"+rentendResult[di_cnt][y]+"</td><td class='tg-c3ow' ><textarea class='pdfstr_custum pdfstr_custum_dan' onchange='textarea_change(this)'>"+parseInt(total_money).toLocaleString()+"</textarea></td><td class='tg-c3ow sdate'><textarea class='pdfstr_custum pdfstr_custum_dan' onchange='textarea_change(this)'>"+parseInt(bon_money).toLocaleString()+"</textarea></td></tr>";
                            }
                            di_cnt++;
                        });
                        //console.warn(pdfstr2);

                        for(var i=0; i<ionContents.length; i++){
                            //console.log('lado')
                            if($('.print_chk_box').eq(i).is(":checked")){
                                console.log("i",i)
                                if(i==0){
                                    let name_html_all =  ionContents[i].contentDocument.querySelectorAll('.name');
                                    name_html_all.forEach(function(obj,index){
                                        obj.innerHTML = name;
                                    });
                                    //ionContents[i].contentDocument.querySelector('.name').innerHTML = name;
                                    ionContents[i].contentDocument.querySelector('.regident').innerHTML = regident;
                                    let regident_html_all = ionContents[i].contentDocument.querySelectorAll('.regident2');
                                    regident_html_all.forEach(function(obj,index){
                                        obj.parentElement.innerHTML = regident;
                                    });

                                    ionContents[i].contentDocument.querySelector('.number').innerHTML = number;
                                    // ionContents[i].contentDocument.querySelector('.target').innerHTML = target + sale +"%";
                                    // ionContents.querySelector('.target2').innerHTML = sale;
                                    ionContents[i].contentDocument.querySelector('.ranker').innerHTML = ranker;
                                    //let addpdfElement = ionContents.querySelector('.addpdf');
                                    $('.ion').contents().find('.addpdf').remove();
                                    // addpdfElement && addpdfElement.remove();
                                    let address_html_all = ionContents[i].contentDocument.querySelectorAll('.address');
                                    address_html_all.forEach(function(obj,index){
                                        obj.innerHTML = address;
                                    })

                                    let company_html_all = ionContents[i].contentDocument.querySelectorAll('.company');
                                    company_html_all.forEach(function(obj,index){
                                        obj.innerHTML = "<%=company%>";
                                    });

                                    ionContents[i].contentDocument.querySelector('.companynum').innerHTML = "<%=companyinfo[0].companynum%>";
                                    ionContents[i].contentDocument.querySelector('.companyaddress').innerHTML="<%=bankinfo[0].address%>";
                                    ionContents[i].contentDocument.querySelector('.companyphone').innerHTML="<%=bankinfo[0].companyphone%>";
                                    ionContents[i].contentDocument.querySelector('.companyfax').innerHTML="<%=bankinfo[0].companyfax%>";

                                    let pdfphone1_html_all = ionContents[i].contentDocument.querySelectorAll('.pdfphone1');
                                    pdfphone1_html_all.forEach(function(obj,index){
                                        obj.innerHTML = phone;
                                    })

                                    // ionContents[i].contentDocument.querySelector('.pdfday').innerHTML = chan_val + getTodayLabel();
                                    // ionContents[i].contentDocument.querySelector('.pdfday').innerHTML = run_date;

                                    let topcm = '-20';
                                    let tcls = 'basic';
                                    let pdfstr2 = '<span class="' + tcls + ' msg_sign" style="position: absolute; z-index: 999; right:0px; top:' + topcm + 'px;"><image style="width:110px; -webkit-user-drag: none;" src="/signfiles/' + number + '/<%=company%>" onerror="this.style.display=\'none\'"></span>';
                                    let pdfstr3 = '<span class="msg_sign" style="position: absolute; right:0px; top:-5px;"><image style="width:50px; -webkit-user-drag: none;" src="/companystamp/<%=company.replace(/ /g,"%20")%>" onerror="this.style.display=\'none\'"></span>';
                                    if('<%=company%>'!='한국의료기기'&&'<%=company%>'!='은평복지용구'&&'<%=company%>'!='우리집의료기 복지용구'&&'<%=company%>'!='한마음방문요양센터'){
                                        pdfstr2 = '<span class="'+tcls+'" style="position: absolute; z-index: 999; right:0px; top:'+topcm+'px;"><image style="width:110px; -webkit-user-drag: none;" src="/signfilessmsrentadd/' + number + '/<%=company.replace(/#/g,"%23").replace(/ /g,"%20")%>/' + name + '/'+sign+'" onerror="this.style.display=\'none\'"></span>';
                                    }
                                            // ionContents.querySelector('.pdfsign').innerHTML = ''; // 이 줄은 주석 처리된 것으로 추측되어 제외했습니다.
                                    let pdfSignElement = ionContents[i].contentDocument.querySelector('.pdfsign');
                                    while (pdfSignElement.firstChild) {
                                        pdfSignElement.removeChild(pdfSignElement.firstChild);
                                    }
                                    // let pdfSign2Element = ionContents[i].contentDocument.querySelector('.pdfsign2');
                                    // while (pdfSign2Element.firstChild) {
                                    //     pdfSign2Element.removeChild(pdfSign2Element.firstChild);
                                    // }
                                    // if('<%=company%>'=='한국의료기기'){
                                        ionContents[i].contentDocument.querySelector('.pdfsign').insertAdjacentHTML('beforeend', pdfstr2);
                                    // }
                                    // ionContents[i].contentDocument.querySelector('.pdfsign2').insertAdjacentHTML('beforeend', pdfstr3);
                                    if(target=='기초')ionContents[i].contentDocument.querySelector('.chk1').innerHTML='✔';
                                    if(target=='의료급여')ionContents[i].contentDocument.querySelector('.chk2').innerHTML='✔';
                                }else if(i==1){
                                    ionContents[i].contentDocument.querySelector('.name').innerHTML = name;
                                    ionContents[i].contentDocument.querySelector('.number').innerHTML = number;
                                    ionContents[i].contentDocument.querySelector('.ranker').innerHTML = ranker;
                                    let regident_html_all = ionContents[i].contentDocument.querySelectorAll('.regident2');
                                    regident_html_all.forEach(function(obj,index){
                                        obj.parentElement.innerHTML = regident;
                                    });

                                    // ionContents[i].contentDocument.querySelector('.companynum').innerHTML="<%=companyinfo[0].companynum%>";
                                    // ionContents[i].contentDocument.querySelector('.address').innerHTML = address;
                                    let company_html_all = ionContents[i].contentDocument.querySelectorAll('.company');
                                    company_html_all.forEach(function(obj,index){
                                        obj.innerHTML = "<%=company%>";
                                    });
                                    let dantotal_html_all = ionContents[i].contentDocument.querySelectorAll('.pdfdantotal');
                                    dantotal_html_all.forEach(function(obj,index){
                                        obj.innerHTML = "<textarea class='pdfstr_custum pdfstr_custum_dan'>"+parseInt(pdfdantotal).toLocaleString()+"</textarea>";
                                    });
                                    // ionContents[i].contentDocument.querySelector('.pdfdantotal').innerHTML=pdfdantotal.toLocaleString();
                                    let buytotal_html_all = ionContents[i].contentDocument.querySelectorAll('.pdfbuytotal');
                                    buytotal_html_all.forEach(function(obj,index){
                                        obj.innerHTML ="<textarea class='pdfstr_custum pdfstr_custum_dan'>"+parseInt(pdfbuytotal).toLocaleString()+"</textarea>";
                                    });
                                    // ionContents[i].contentDocument.querySelector('.pdfbuytotal').innerHTML=pdfbuytotal.toLocaleString();

                                    // ionContents[i].contentDocument.querySelector('.pdfgongtotal').innerHTML="<textarea class='pdfstr_custum pdfstr_custum_dan'>"+parseInt(pdfgongtotal).toLocaleString()+"</textarea>";
                                    // ionContents[i].contentDocument.querySelector('.pdfday').innerHTML = chan_val + getTodayLabel();
                                    // ionContents[i].contentDocument.querySelector('.pdfday').innerHTML = run_date;
                                    let ceo_html_all = ionContents[i].contentDocument.querySelectorAll('.ceo');
                                    ceo_html_all.forEach(function(obj,index){
                                    
                                            obj.innerHTML = "<%=companyinfo[0].companyceo%>";
                                        
                                        
                                    });
                                    
                                    let payment_str = '';
                                    payment_product_arr.forEach(function(obj,index){
                                        payment_str += obj+'&nbsp;'+payment_product_arr2[index]+'<br/>';
                                    });
                                    // ionContents[i].contentDocument.querySelector('.sdate').innerHTML = concat_arr_obj.concat_arr_rentstart[0] + '~' +concat_arr_obj.concat_arr_rentend[concat_arr_obj.concat_arr_rentend.length-1];
                                    $('.ion').contents().find('.product_arr').html(payment_str);
                                    
                                    let topcm = '-20';
                                    let tcls = 'basic';
                                    let pdfstr3 = '<span class="msg_sign" style="position: absolute; left:0px; top:-5px;"><image style="width:50px; -webkit-user-drag: none;" src="/companystamp/<%=company.replace(/ /g,"%20")%>" onerror="this.style.display=\'none\'"></span>';
                                    // let pdfSign2Element = ionContents[i].contentDocument.querySelector('.pdfsign2');
                                    // while (pdfSign2Element.firstChild) {
                                    //     pdfSign2Element.removeChild(pdfSign2Element.firstChild);
                                    // }
                                    // ionContents[i].contentDocument.querySelector('.pdfsign2').insertAdjacentHTML('beforeend', pdfstr3);
                                    // ionContents[i].contentDocument.querySelector('.companynum2').innerHTML="<%=bankinfo[0].companynum%>";
                                    ionContents[i].contentDocument.querySelector('.pdfadd').insertAdjacentHTML('afterend', pdfstr1);
                                    ionContents[i].contentDocument.querySelector('.pdfdantotal2').innerHTML="<textarea class='pdfstr_custum pdfstr_custum_dan'>"+parseInt(alldm).toLocaleString()+"</textarea>";
                                    let dummyElements = ionContents[i].contentDocument.querySelectorAll('.dummy');
                                    let addpdfElements = ionContents[i].contentDocument.querySelectorAll('.addpdf');
                                    
                                    // 항상 row 7개 유지하기 (마지막 tr은 항상 고정)
                                    // 현재 dummy와 addpdf 수 파악
                                    const totalRows = dummyElements.length + addpdfElements.length;
                                    
                                    // 마지막 tr을 찾기
                                    const lastFixedRow = ionContents[i].contentDocument.querySelector('.zerodoc_txt_area');
                                    
                                    // 총 행 수가 7개가 되도록 조정
                                    if (totalRows < 7) {
                                        // 7개가 되도록 dummy 추가
                                        const dummyParent = dummyElements.length > 0 ? dummyElements[0].parentNode : addpdfElements[0].parentNode;
                                        for (let d = 0; d < 7 - totalRows; d++) {
                                            const newDummy = document.createElement('tr');
                                            newDummy.className = 'dummy';
                                            newDummy.innerHTML = '<td colspan="8" class="br bl bd">&nbsp;</td>';
                                            // 마지막 고정 행 바로 앞에 삽입
                                            if (lastFixedRow) {
                                                dummyParent.insertBefore(newDummy, lastFixedRow);
                                            } else {
                                                dummyParent.appendChild(newDummy);
                                            }
                                        }
                                    } else if (totalRows > 7) {
                                        // 7개가 되도록 dummy 제거 (addpdf는 유지)
                                        const excessRows = totalRows - 7;
                                        for (let d = 0; d < excessRows && d < dummyElements.length; d++) {
                                            dummyElements[d].remove();
                                        }
                                    }

                                    $('.ion').contents().find('.zero_col').attr('rowspan', '12');
                                }
                                
                                name_arr.push(name);
                                number_arr.push(number);
                                console.log(name_arr,number_arr)
                                //console.log(ionContents.querySelector('body').innerHTML);
                                // const ionContents2 = ionContents;
                                el_arr.push(ionContents[i].contentDocument.querySelector('html').innerHTML);
                            }
                            
                        }
                        
                    }  
                }

                // name_arr.push(zerotable_data.data[i].name);
                // number_arr.push(zerotable_data.data[i].number);
                // el_arr.push(ionContents[j].contentDocument.querySelector('html').innerHTML);
            }
        });
        console.log(el_arr)
        await getBase64Image(name_arr,number_arr,el_arr,'zero');
    }



    var rent_add_obj = [];

    async function rent_add_make_doc(x,p_obj){
        const checkbox = document.getElementById('toggleInput');
        const dateInput = document.getElementById('datepicker3');
        $(checkbox).prop("checked",false);
        dateInput.disabled=true;
        let chk_cnt = 0;
        $('.rent_add_chk').each(function(){
            if($(this).is(':checked')){
                chk_cnt++;
            }
        });
        if(chk_cnt==0){
            Swal.showValidationMessage(`
                <div style="font-weight:bold; font-size:20px;">출력실패:선택된 수급자가 없습니다.</div>
            `);
            return 0
        }else{
            Swal.resetValidationMessage();
        }
        let now = new Date();
        let year = now.getFullYear();
        let mon = (now.getMonth() + 1) > 9 ? '' + (now.getMonth() + 1) : '0' + (now.getMonth() + 1);
        let day = now.getDate() > 9 ? '' + now.getDate() : '0' + now.getDate();
        let chan_val = year + '-' + mon + '-' + day;
        const lastdate = new Date(year, mon, 0).getDate();
        let last_chan_val = year + '-' + mon + '-' +lastdate;
        let tr_data = $(x).children('tbody').children('tr');
        let name_arr = [];
        let number_arr = [];
        let el_arr = [];
        // console.log(tr_data);
        const ionContents = document.getElementsByClassName('iprint');
        const ionContentsContentDocument = ionContents.contentDocument;
        console.log(ionContents)
        let same_arr = [];
        $.each(tr_data,async function(i){
            if($(tr_data[i]).children('td').eq(0).children('input').is(":checked")){
                let otr_data = rent_add_obj[i];
                let name = otr_data.name;
                let number = otr_data.number;
                let constartdate = otr_data.constartdate;
                same_arr.push(name+"|"+number);
            }else{
                same_arr.push('');
            }
        });
        console.log('salme_arr:',same_arr)
        const duplicateIndexes = {};
        same_arr.forEach((value, index) => {
            if (!(value in duplicateIndexes)) {
                duplicateIndexes[value] = [index];
            } else {
                duplicateIndexes[value].push(index);
            }
        });

        for (const [value, indexes] of Object.entries(duplicateIndexes)) {
            if (indexes.length > 1) {
                console.log(`값 ${value}의 중복된 인덱스: ${indexes.join(', ')}`);
            }
        }
        let continue_arr = [];
        let continue_chk = 0;
        let doc_create_cnt = 0;
        $.each(tr_data,async function(i){
            continue_chk = 0;
            let bcode_sale_cnt = 0;
            if($(tr_data[i]).children('td').eq(0).children('input').is(":checked")){
                console.log("coninue:",i,continue_arr)
                for(var c=0; c<continue_arr.length; c++){
                    if((i)==continue_arr[c]){
                        console.log("continue:",c)
                        continue_chk = 1;
                    }
                }
                if(continue_chk==1)return true;
                doc_create_cnt++;
                $('.doc_create_cnt').html(doc_create_cnt);
                let otr_data = rent_add_obj[i];
                console.log(otr_data);
                
                let name = otr_data.name;
                let number = otr_data.number;
                let order_date = otr_data.constartdate;
                let otr_product = [otr_data.productname];
                let otr_buybcode = [otr_data.bcode];
                let otr_pcode = [otr_data.pcode];
                let otr_rentstart = [otr_data.constartdate];
                let otr_rentend = [otr_data.date];
                let otr_bcodesale = [otr_data.bcode_sale_date];
                let di_arr = [1];
                let bcode_sale_cnt = [];
                let sign = otr_data.sign.split(" ")[0];
                if(duplicateIndexes[name+"|"+number].length>1){
                    duplicateIndexes[name+"|"+number].forEach(function(obj,index){
                        if(index!=0){
                            console.log([duplicateIndexes[name+"|"+number]])
                            otr_product.push(rent_add_obj[obj].productname);
                            otr_buybcode.push(rent_add_obj[obj].bcode);
                            otr_pcode.push(rent_add_obj[obj].pcode);
                            otr_rentstart.push(rent_add_obj[obj].constartdate);
                            otr_rentend.push(rent_add_obj[obj].date);
                            otr_bcodesale.push(rent_add_obj[obj].bcode_sale_date)
                            di_arr.push(1);
                        }    
                        // page_otr_data.splice(duplicateIndexes[order_date+"|"+name+"|"+number][1]);
                        continue_arr.push(obj)
                    });
                    
                }
                // let di = 1;
                // let rentendResult = [];
                // let rentstartResult = [];
                let rentendResult = {};
                let rentstartResult = {};
                let pdfstr1 = '';
                let pdfstr1_2 = '';
                let alldm = 0;
                let alldm2 = 0;
                let pdfdantotal = 0;
                let pdfbuytotal = 0;
                let pdfgongtotal = 0;
                // let name = $(tr_data[i]).children('td').eq(1).text();
                // let number = $(tr_data[i]).children('td').eq(2).text();
                // let pname = $(tr_data[i]).children('td').eq(3).text();
                // let pcode = $(tr_data[i]).children('td').eq(4).text();
                // let bcode = $(tr_data[i]).children('td').eq(5).text();
                // let rentstart = $(tr_data[i]).children('td').eq(6).text().replace(/(\d{4})(\d{2})(\d{2})/g, '$1-$2-$3');
                // let rentend = $(tr_data[i]).children('td').eq(7).text().replace(/(\d{4})(\d{2})(\d{2})/g, '$1-$2-$3');
                let rentstart = '';
                let rentend = '';
                let run_date = $(tr_data[i]).children('td').eq(8).text();
                let target = $(tr_data[i]).children('input').eq(4).val();
                let ranker = $(tr_data[i]).children('input').eq(5).val();
                let regident = $(tr_data[i]).children('input').eq(6).val();
                let address = $(tr_data[i]).children('input').eq(7).val();
                let guardname = $(tr_data[i]).children('input').eq(8).val();
                let guardtarget = $(tr_data[i]).children('input').eq(9).val();
                let manager = $(tr_data[i]).children('input').eq(10).val();
                let phone = $(tr_data[i]).children('input').eq(11).val();
                //let bcode_sale_date = $(tr_data[i]).children('input').eq(12).val();
                let banknum = $(tr_data[i]).children('input').eq(13).val();
                let pname2 = [];
                console.log("otr_pcode",otr_pcode);
                if(otr_rentstart.length>0){
                    for (var j = 0; j < otr_pcode.length; j++) {
                        var currentString = otr_pcode[j];
                        for (var p=0; p<productlistarr.length; p++){
                            if (productlistarr[p].includes(currentString)) {
                                // '|123'를 포함하는 문자열을 발견했을 때의 처리
                                pname2.push(productlistarr[p].split("|")[0]); // 출력: 'a|123'
                                console.warn(pname2)
                                continue
                            }
                        }
                    }
                    
                    let datenowarr = $(tr_data[i]).children('input').eq(2).val().replace(/(\[|\]|\'|\|| |&#39|\;)/g,'').split('~');
                    let nextdatearr = $(tr_data[i]).children('input').eq(3).val().replace(/(\[|\]|\'|\|| |&#39|\;)/g,'').split(',');
                    let sale =  parseInt($(tr_data[i]).children('input').eq(1).val());
                    let dan = 0;
                    let bon = 0;
                    // let dan = p_obj[otr_pcode[0]];
                    // let bon = p_obj[otr_pcode[0]]*(sale/100);
                    // for (var p=0; p<otr_pcode.length; p++){
                    //     dan = p_obj[otr_pcode[p]];
                    //     bon = p_obj[otr_pcode[p]]*(sale/100);
                    // }
                    let gong = dan-bon;
                    // let dan =  parseInt($(tr_data[i]).children('input').eq(2).val())/(parseInt(sale)/100);
                    // let bon =  parseInt($(tr_data[i]).children('input').eq(2).val());
                    // let gong = dan * ((100-parseInt(sale))/100);
                    /*--------------------------------------------------------*
                    // 전체 대여기간 급여제공기록지 생성
                    *--------------------------------------------------------*/
                    console.log("otr_rentstart",otr_rentstart,"otr_rentend",otr_rentend)
                    console.log("otr_buybcode",otr_buybcode)

                    // 중복된 값의 인덱스 추출
                    const indexMap = otr_buybcode.reduce((acc, curr, index) => {
                        acc[curr] = acc[curr] || [];
                        acc[curr].push(index);
                        return acc;
                    }, {});
                    console.log(indexMap);
                    // 추출된 인덱스를 사용하여 원래 배열에서 값 분리
                    // index를 낮은 순서대로 정렬하여 분리 배열 생성
                    const separatedData_buybcode = Object.values(indexMap).sort((a, b) => a[0] - b[0]).map(indexes => indexes.map(index => otr_buybcode[index]));
                    const separatedData_rentstart = Object.values(indexMap).sort((a, b) => a[0] - b[0]).map(indexes => indexes.map(index => otr_rentstart[index]));
                    const separatedData_product = Object.values(indexMap).sort((a, b) => a[0] - b[0]).map(indexes => indexes.map(index => otr_product[index]));
                    const separatedData_rentrend = Object.values(indexMap).sort((a, b) => a[0] - b[0]).map(indexes => indexes.map(index => otr_rentend[index]));
                    const separatedData_pcode = Object.values(indexMap).sort((a, b) => a[0] - b[0]).map(indexes => indexes.map(index => otr_pcode[index]));
                    const separatedData_pname2 = Object.values(indexMap).sort((a, b) => a[0] - b[0]).map(indexes => indexes.map(index => pname2[index]));
                    const separatedData_bcodesale = Object.values(indexMap).sort((a, b) => a[0] - b[0]).map(indexes => indexes.map(index => otr_bcodesale[index]));
                    // separatedData_product 배열을 하나의 배열로 병합
                    otr_product = separatedData_product.reduce((acc, curr) => {
                        return acc.concat(curr);
                    }, []);
                    otr_pcode = separatedData_pcode.reduce((acc, curr) => {
                        return acc.concat(curr);
                    }, []);
                    pname2 = separatedData_pname2.reduce((acc, curr) => {
                        return acc.concat(curr);
                    }, []);
                    otr_bcodesale = separatedData_bcodesale.reduce((acc, curr) => {
                        return acc.concat(curr);
                    }, []);
                    
                    // 결과 출력
                    console.log(otr_rentstart,"separatedData_rentstart",separatedData_rentstart)
                    console.log(otr_product,"separatedData_product",separatedData_product)
                    // 각 날짜 문자열에 하이픈 추가
                    const formattedData_rentstart =separatedData_rentstart.map(dateArr => {
                        return dateArr.map(dateStr => {
                            const year = dateStr.slice(0, 4);
                            const month = dateStr.slice(4, 6);
                            const day = dateStr.slice(6, 8);
                            return `${year}-${month}-${day}`;
                        });
                    });
                    
                    const formattedData_rentend = separatedData_rentrend.map(dateArr => {
                        return dateArr.map(dateStr => {
                            const year = dateStr.slice(0, 4);
                            const month = dateStr.slice(4, 6);
                            const day = dateStr.slice(6, 8);
                            return `${year}-${month}-${day}`;
                        });
                    });
                    console.log("formattedData_rentstart",formattedData_rentstart)
                    // 각 날짜 문자열을 Date 객체로 변환하여 정렬

                    let concat_arr_obj = { 
                        concat_arr_rentstart:[],
                        concat_arr_rentend:[]
                    };
                    formattedData_rentstart.forEach(function(arr,index){
                        arr_sort = arr.sort((a, b) => new Date(a) - new Date(b));
                        console.log(arr)
                        concat_arr_obj.concat_arr_rentstart = concat_arr_obj.concat_arr_rentstart.concat(arr_sort);
                        
                        

                    });
                    formattedData_rentend.forEach(function(arr,index){
                        arr_sort = arr.sort((a, b) => new Date(a) - new Date(b));
                        console.log(arr)
                        concat_arr_obj.concat_arr_rentend = concat_arr_obj.concat_arr_rentend.concat(arr_sort);
                        
                        

                    });
                    // const sortedData_rentstart = concat_arr_obj.concat_arr_rentstart.sort((a, b) => new Date(a) - new Date(b));
                    // const sortedData_rentend = concat_arr_obj.concat_arr_rentend.sort((a, b) => new Date(a) - new Date(b));
                    // 결과 출력
                    console.log(concat_arr_obj)
                    
                    concat_arr_obj.concat_arr_rentstart.forEach(function(obj,index){
                        console.log("zdfdffdf:",otr_product)
                        rentstart = concat_arr_obj.concat_arr_rentstart[index].replace(/(\d{4})(\d{2})(\d{2})/g, '$1-$2-$3');
                        rentend = concat_arr_obj.concat_arr_rentend[index].replace(/(\d{4})(\d{2})(\d{2})/g, '$1-$2-$3');
                        rentendResult[index]=[];
                        rentstartResult[index]=[];
                        bcode_sale_date = otr_bcodesale[index];
                        console.log("bcode_sale_date",otr_bcodesale)
                        console.log("count",rentstart,rentend)
                        console.log("datenowarr",datenowarr)

                        bcode_sale_cnt.push(0);
                        if(new Date(rentend)>new Date(datenowarr[1])){
                            if(new Date(rentstart)<new Date(datenowarr[1])){
                                if(bcode_sale_date!=''){
                                    if(new Date(bcode_sale_date)>new Date(rentstart)){
                                        if(new Date(datenowarr[1])>new Date(bcode_sale_date)){
                                            di_arr[index]++;
                                            bcode_sale_cnt[index] = di_arr[index];
                                            rentendResult[index].push(bcode_sale_date);
                                            rentstartResult[index].push(rentstart);
                                            let bocde_sale_date_plus = new Date(new Date(bcode_sale_date).setDate(new Date(bcode_sale_date).getDate() + 1));
                                            let bocde_sale_year = bocde_sale_date_plus.getFullYear();
                                            let bocde_sale_month = ('0' + (bocde_sale_date_plus.getMonth() + 1)).slice(-2);
                                            let bocde_sale_day = bocde_sale_date_plus.getDate() > 9 ? '' + bocde_sale_date_plus.getDate() : '0' + bocde_sale_date_plus.getDate();
                                            rentstart = bocde_sale_year + "-" + bocde_sale_month + "-" + bocde_sale_day;
                                        }
                                    }else{
                                        bcode_sale_cnt[index] = di_arr[index];
                                    }
                                }
                                di_arr[index]++;
                                rentendResult[index].push(datenowarr[1]);
                                rentstartResult[index].push(rentstart);
                            }
                            // di++;
                            // rentendResult.push(datenowarr[1]);
                            // rentstartResult.push(rentstart);

                            var nextdatearrLength = nextdatearr.length;
                            for (var i = nextdatearrLength - 1; i >= 0; i--) {
                                var nextdate = nextdatearr[i].split('~');
                                console.log("nextdate",nextdate);
                                if(nextdate[1]>=rentstart){
                                    if(nextdate[0]<rentstart&&nextdate[1]>rentstart){
                                        rentstartResult[index].push(rentstart);
                                    }else{
                                        rentstartResult[index].push(nextdate[0]);
                                    }
                                    
                                    if (new Date(rentend) > new Date(nextdate[1])) {
                                        if(bcode_sale_date!=''&&bcode_sale_cnt[index]==0){
                                            if(new Date(bcode_sale_date)>new Date(nextdate[0])){
                                                if(new Date(nextdate[1])>new Date(bcode_sale_date)){
                                                    di_arr[index]++;
                                                    bcode_sale_cnt[index] = di_arr[index];
                                                    rentendResult[index].push(bcode_sale_date);
                                                    // rentstartResult.push(nextdate[0]);
                                                    let bocde_sale_date_plus = new Date(new Date(bcode_sale_date).setDate(new Date(bcode_sale_date).getDate() + 1));
                                                    let bocde_sale_year = bocde_sale_date_plus.getFullYear();
                                                    let bocde_sale_month = ('0' + (bocde_sale_date_plus.getMonth() + 1)).slice(-2);
                                                    let bocde_sale_day = bocde_sale_date_plus.getDate() > 9 ? '' + bocde_sale_date_plus.getDate() : '0' + bocde_sale_date_plus.getDate();
                                                    let rentstart = bocde_sale_year + "-" + bocde_sale_month + "-" + bocde_sale_day;
                                                    rentstartResult[index].push(rentstart);
                                                }
                                            }else{
                                                bcode_sale_cnt[index] = di_arr[index];
                                            }
                                        }
                                        di_arr[index]++;
                                        rentendResult[index].push(nextdate[1]);
                                    } else {
                                        if(bcode_sale_date!=''&&bcode_sale_cnt[index]==0){
                                            console.log("bcode_sale_sestest")
                                            if(new Date(bcode_sale_date)>new Date(nextdate[0])&&new Date(rentstart)<=new Date(nextdate[0])){
                                                console.log("bcode_sale_sestest",nextdate[1])
                                                if(new Date(nextdate[1])>new Date(bcode_sale_date)&&new Date(rentend)>new Date(bcode_sale_date)){
                                                    console.log("bcode_sale_cnt+++")
                                                    di_arr[index]++;
                                                    bcode_sale_cnt[index] = di_arr[index];
                                                    rentendResult[index].push(bcode_sale_date);
                                                    // rentstartResult.push(nextdate[0]);
                                                    let bocde_sale_date_plus = new Date(new Date(bcode_sale_date).setDate(new Date(bcode_sale_date).getDate() + 1));
                                                    let bocde_sale_year = bocde_sale_date_plus.getFullYear();
                                                    let bocde_sale_month = ('0' + (bocde_sale_date_plus.getMonth() + 1)).slice(-2);
                                                    let bocde_sale_day = bocde_sale_date_plus.getDate() > 9 ? '' + bocde_sale_date_plus.getDate() : '0' + bocde_sale_date_plus.getDate();
                                                    let rentstart = bocde_sale_year + "-" + bocde_sale_month + "-" + bocde_sale_day;
                                                    rentstartResult[index].push(rentstart);
                                                }
                                            }else if(new Date(bcode_sale_date)<new Date(rentstart)){
                                                
                                                bcode_sale_cnt[index] = di_arr[index];
                                            }
                                        }
                                        rentendResult[index].push(rentend);
                                        break;
                                    }
                                }
                                
                            }
                        }else{
                            if(bcode_sale_date!=''){
                                if(new Date(bcode_sale_date)>new Date(rentstart)){
                                    if(new Date(datenowarr[1])>new Date(bcode_sale_date)&&new Date(rentend)>new Date(bcode_sale_date)){
                                        di_arr[index]++;
                                        bcode_sale_cnt[index] = di_arr[index];
                                        rentendResult[index].push(bcode_sale_date);
                                        rentstartResult[index].push(rentstart);
                                        let bocde_sale_date_plus = new Date(new Date(bcode_sale_date).setDate(new Date(bcode_sale_date).getDate() + 1));
                                        let bocde_sale_year = bocde_sale_date_plus.getFullYear();
                                        let bocde_sale_month = ('0' + (bocde_sale_date_plus.getMonth() + 1)).slice(-2);
                                        let bocde_sale_day = bocde_sale_date_plus.getDate() > 9 ? '' + bocde_sale_date_plus.getDate() : '0' + bocde_sale_date_plus.getDate();
                                        rentstart = bocde_sale_year + "-" + bocde_sale_month + "-" + bocde_sale_day;
                                    }
                                }else{
                                    bcode_sale_cnt[index] = di_arr[index];
                                }
                            }
                            rentendResult[index].push(rentend);
                            rentstartResult[index].push(rentstart)
                        }
                    });
                    /*--------------------------------------------------------*
                    // 당월 대여기간 급여제공기록지 생성
                    *--------------------------------------------------------*/
                    // if(new Date(rentstart)<new Date(year + '-' + mon + '-' + '01')){
                    //     rentstartResult.push(year + '-' + mon + '-' + '01');
                    // }else{
                    //     rentstartResult.push(rentstart);
                    // }

                    // if(new Date(rentend)>new Date(last_chan_val)){
                    //     rentendResult.push(last_chan_val);
                    // }else{
                    //     rentendResult.push(rentend);
                    // }

                    /*--------------------------------------------------------*
                    // 급여제공기록지 ROW 추가
                    *--------------------------------------------------------*/
                    let price_dan_copy = 0;
                    let price_buy_copy = 0;
                    let price_gong_copy = 0;
                    let price_dan = 0;
                    let di_cnt = 0;
                    let dm_arr = [];
                    console.log("di_arr:::",di_arr);
                    console.log("rentstartResult",rentstartResult,"rentendResult",rentendResult)
                    di_arr.forEach(function(di_obj,di_index){
                        for(var y=0; y<di_arr[di_cnt]; y++){
                            // p_obj 결과가 2개 이상일 때 rentstartResult[di_cnt][y]보다 작은 첫번째 값으로 설정
                            let selectedPrice = null;
                            if (p_obj[otr_pcode[di_cnt]] && Array.isArray(p_obj[otr_pcode[di_cnt]])) {
                                // 날짜 기준으로 정렬
                                const sortedPrices = p_obj[otr_pcode[di_cnt]].sort((a, b) => new Date(a.date) - new Date(b.date));
                                // rentstartResult[di_cnt][y]보다 작은 가장 최근 날짜의 가격 찾기
                                for (let i = sortedPrices.length - 1; i >= 0; i--) {
                                    if (new Date(sortedPrices[i].date) <= new Date(rentstartResult[di_cnt][y])) {
                                        selectedPrice = sortedPrices[i].rentprice;
                                        break;
                                    }
                                }
                                // 조건에 맞는 가격이 없으면 첫 번째 가격 사용
                                if (selectedPrice === null && sortedPrices.length > 0) {
                                    selectedPrice = sortedPrices[0].rentprice;
                                }
                            }
                            dan = selectedPrice !== null ? selectedPrice : p_obj[otr_pcode[di_cnt]];
                            bon = dan * (sale/100);
                            price_dan = parseInt(dan);
                            // var dm = 0;
                            dm_arr.push(0);
                            dm_arr[di_cnt]=0;
                            console.log("dm_arr",dm_arr)
                            var rs = rentstartResult[di_cnt][y];
                            var re = rentendResult[di_cnt][y];
                            // var dif = new Date(re.split('-')[0]+'-'+re.split('-')[1]+'-01') - new Date(rs.split('-')[0]+'-'+rs.split('-')[1]+'-01');
                            // var cDay = 24 * 60 * 60 * 1000;// 시 * 분 * 초 * 밀리세컨
                            // var cMonth = cDay * 30;// 월 만듬
                            // var cmonth2 = (parseInt(dif/cMonth)+1);
                            let cmonth2 = monthsBetweenDates(rs.split('-')[0]+'-'+rs.split('-')[1]+'-01',re.split('-')[0]+'-'+re.split('-')[1]+'-01');
                            let sale_txt = '';

                            console.log("bcoce:",(y+1),' ',bcode_sale_cnt[di_cnt])
                            if((y+1)>=bcode_sale_cnt[di_cnt]&&bcode_sale_cnt[di_cnt]!=0){
                                sale_txt = '<span style="font-size:22px; padding-left:5px;">½</span>';
                                price_dan_copy = roundUpToNearest50(parseInt(price_dan/2));
                            }else{
                                price_dan_copy = price_dan;
                            }
                            if((y+1)>=bcode_sale_cnt[di_cnt]&&bcode_sale_cnt[di_cnt]!=0){
                                sale_txt = '<span style="font-size:22px; padding-left:5px;">½</span>';
                                dan = roundUpToNearest50(parseInt(dan)/2);
                            }
                            for(var k=1; k<=cmonth2; k++){
                                if(k==1){
                                    var lastDate = new Date(rs.split('-')[0], rs.split('-')[1], 0).getDate();
                                    var onem = roundToOneDecimalPlace(parseInt(dan)/lastDate);
                                    let sm2 = 0;
                                    var sm = lastDate-parseInt(rs.split('-')[2])+1;
                                    if((rs.split('-')[0]+rs.split('-')[1])==(re.split('-')[0]+re.split('-')[1])){
                                        sm2 = lastDate-parseInt(re.split('-')[2]);
                                    }
                                    dm_arr[di_cnt]+=(sm-sm2)*onem;
                                }else if(k==cmonth2){
                                    var lastDate = new Date(re.split('-')[0], re.split('-')[1], 0).getDate();
                                    var onem = roundToOneDecimalPlace(parseInt(dan)/lastDate);
                                    dm_arr[di_cnt]+=parseInt(re.split('-')[2])*onem;
                                }else{
                                    dm_arr[di_cnt]+=parseInt(dan);
                                }
                            }
                            let total_money = dm_arr[di_cnt];
                            let bon_money = Math.ceil(parseInt(total_money)*(parseInt(sale)/100));
                            let gong_money = parseInt(parseInt(total_money)*(1-(parseInt(sale)/100)));
                            if($(".print_option_chk_box").is(":checked")){
                                //total_money =  Math.floor(total_money/10)*10;
                                bon_money = Math.floor(parseInt(parseInt(total_money)*(parseInt(sale)/100))/10)*10;
                                gong_money = roundUpToNearestUnit(parseInt(parseInt(total_money)*(1-(parseInt(sale)/100))));
                                total_money = bon_money+gong_money;
                                pdfdantotal += total_money;
                                pdfbuytotal += bon_money;
                                pdfgongtotal += gong_money;
                            }else{
                                pdfdantotal += total_money;
                                pdfbuytotal += bon_money;
                                pdfgongtotal += gong_money;
                            }
                            // if(y==di-1){
                                // if((y+1)>=bcode_sale_cnt&&bcode_sale_cnt!=0){
                                //     console.log(parseInt(dan/2));
                                //     price_dan_copy = parseInt(dan/2);
                                //     pdfdantotal += parseInt(dan/2);
                                //     //payment_dan_result += Math.floor(parseInt(pdfdan)/10) * 10;
                                //     price_buy_copy = parseInt(bon/2);
                                //     pdfbuytotal += parseInt(bon/2);
                                //     //payment_buy_result += Math.floor(parseInt(pdfbuy)/10) * 10;
                                //     price_gong_copy = parseInt(gong/2);
                                //     pdfgongtotal += parseInt(gong/2);
                                //     //payment_gong_result += Math.floor(parseInt(pdfgong)/10) * 10;
                                // }else{
                                //     price_dan_copy = dan;
                                //     pdfdantotal += dan;
                                //     //payment_dan_result += Math.floor(parseInt(pdfdan)/10) * 10;
                                //     price_buy_copy = bon;
                                //     pdfbuytotal += bon;
                                //     //payment_buy_result += Math.floor(parseInt(pdfbuy)/10) * 10;
                                //     price_gong_copy = gong;
                                //     pdfgongtotal += gong;
                                //     // pdfdantotal += parseInt(dan);
                                //     // pdfbuytotal += parseInt(bon);
                                //     // pdfgongtotal += parseInt(gong);
                                // }
                            // }
                            // pdfstr1 += "<tr class='addpdf' style='height:40px;'><td class='br bl bd'>"+otr_product[di_cnt]+"</td><td class='br bd'>"+pname2[di_cnt]+"</td><td class='br bd'>"+otr_pcode[di_cnt]+"</td><td class='br bd'>"+parseInt(price_dan_copy).toLocaleString()+"</td><td class='br bd'>"+rentstartResult[di_cnt][y]+"~<br/>"+rentendResult[di_cnt][y]+"</td><td class='br bd'><textarea class='pdfstr_custum pdfstr_custum_dan' onchange='textarea_change(this)'>"+parseInt(total_money).toLocaleString()+"</textarea></td><td class='br bd'><textarea class='pdfstr_custum pdfstr_custum_buy' onchange='textarea_change(this)'>"+parseInt(bon_money).toLocaleString()+"</textarea></td><td class='br bd'><textarea class='pdfstr_custum pdfstr_custum_gong' onchange='textarea_change(this)'>"+parseInt(gong_money).toLocaleString()+"</textarea></td></tr>";
                            pdfstr1 += `<tr class='addpdf' style='height:40px;'>
                                <td class='br bl bd'>${otr_product[di_cnt]}</td>
                                <td class='br bd'>${pname2[di_cnt]}</td>
                                <td class='br bd'>${otr_pcode[di_cnt]}</td>
                                <td class='br bd'>${parseInt(price_dan_copy).toLocaleString()}${sale_txt}</td>
                                <td class='br bd'>${rentstartResult[di_cnt][y]}~<br/>${rentendResult[di_cnt][y]}</td>
                                <td class='br bd'><textarea class='pdfstr_custum pdfstr_custum_dan' onchange='textarea_change(this)'>${parseInt(total_money).toLocaleString()}</textarea></td>
                                <td class='br bd'><textarea class='pdfstr_custum pdfstr_custum_buy' onchange='textarea_change(this)'>${parseInt(bon_money).toLocaleString()}</textarea></td>
                                <td class='br bd'><textarea class='pdfstr_custum pdfstr_custum_gong' onchange='textarea_change(this)'>${parseInt(gong_money).toLocaleString()}</textarea></td>
                            </tr>`;
                            // pdfstr1 += "<tr class='addpdf' style='height:40px;'><td class='br bl bd'>"+pname+"</td><td class='br bd'>"+pname2+"</td><td class='br bd'>"+pcode+"</td><td class='br bd'>"+parseInt(price_dan_copy).toLocaleString()+"</td><td class='br bd'>"+parseInt(price_buy_copy).toLocaleString()+"</td><td class='br bd'>"+parseInt(price_gong_copy).toLocaleString()+"</td><td class='br bd'>"+rentstartResult[y]+"~"+rentendResult[y]+"</td></tr>";
                            console.log("di_cnt_++",di_cnt)
                        }   
                        di_cnt++; 
                    });
                    
                    /*--------------------------------------------------------*
                    // 공급계약서 ROW 추가
                    *--------------------------------------------------------*/
                    let payment_product_arr = [];
                    let payment_product_arr2 = [];
                    di_cnt = 0;
                    dm_arr = [];
                    di_arr.forEach(function(di_obj,di_index){
                        for(var y=0; y<di_arr[di_cnt]; y++){
                            // p_obj 결과가 2개 이상일 때 rentstartResult[di_cnt][y]보다 작은 첫번째 값으로 설정
                            let productPrice = p_obj[otr_pcode[di_cnt]];
                            if (Array.isArray(productPrice) && productPrice.length > 1) {
                                // 날짜 기준으로 정렬
                                productPrice.sort((a, b) => new Date(a.date) - new Date(b.date));
                                // rentstartResult[di_cnt][y]보다 작은 첫번째 값 찾기
                                let selectedPrice = productPrice[0].rentprice; // 기본값
                                for (let i = 0; i < productPrice.length; i++) {
                                    if (new Date(productPrice[i].date) <= new Date(rentstartResult[di_cnt][y])) {
                                        selectedPrice = productPrice[i].rentprice;
                                    } else {
                                        break;
                                    }
                                }
                                dan = selectedPrice;
                            } else if (Array.isArray(productPrice) && productPrice.length === 1) {
                                dan = productPrice[0].rentprice;
                            } else {
                                dan = productPrice;
                            }
                            bon = dan * (sale/100);
                            price_dan = parseInt(dan);
                            // let dm = 0;
                            dm_arr.push(0);
                            dm_arr[di_cnt]=0;
                            let rs = rentstartResult[di_cnt][y];
                            let re = rentendResult[di_cnt][y];
                            // let dif = new Date(re.split('-')[0]+'-'+re.split('-')[1]+'-01') - new Date(rs.split('-')[0]+'-'+rs.split('-')[1]+'-01');
                            // let cDay = 24 * 60 * 60 * 1000;// 시 * 분 * 초 * 밀리세컨
                            // let cMonth = cDay * 30;// 월 만듬
                            // let cmonth2 = (parseInt(dif/cMonth)+1);
                            let cmonth2 = monthsBetweenDates(rs.split('-')[0]+'-'+rs.split('-')[1]+'-01',re.split('-')[0]+'-'+re.split('-')[1]+'-01');

                            if((y+1)>=bcode_sale_cnt[di_cnt]&&bcode_sale_cnt[di_cnt]!=0){
                                console.log("round",dan,parseInt(dan)/2,roundUpToNearest50(parseInt(dan/2)))
                                dan = roundUpToNearest50(parseInt(dan)/2);
                            }
                            for(var k=1; k<=cmonth2; k++){
                                //console.log(k);
                                if(k==1){
                                    var lastDate = new Date(rs.split('-')[0], rs.split('-')[1], 0).getDate();
                                    var onem = roundToOneDecimalPlace(parseInt(dan)/lastDate);
                                    var sm = lastDate-parseInt(rs.split('-')[2])+1;
                                    let sm2 = 0;
                                    var sm = lastDate-parseInt(rs.split('-')[2])+1;
                                    if((rs.split('-')[0]+rs.split('-')[1])==(re.split('-')[0]+re.split('-')[1])){
                                        sm2 = lastDate-parseInt(re.split('-')[2]);
                                    }
                                    dm_arr[di_cnt]+=(sm-sm2)*onem;
                                    // dm+=parseInt((sm-sm2)*onem);
                                }else if(k==cmonth2){
                                    var lastDate = new Date(re.split('-')[0], re.split('-')[1], 0).getDate();
                                    var onem = roundToOneDecimalPlace(parseInt(dan)/lastDate);

                                    dm_arr[di_cnt]+=parseInt(re.split('-')[2])*onem;
                                    // dm+=parseInt(parseInt(re.split('-')[2])*onem);
                                }else{
                                    dm_arr[di_cnt]+=parseInt(dan);
                                    // dm+=parseInt(dan);
                                }
                            }
                            let total_money = dm_arr[di_cnt];
                            let bon_money = Math.ceil(parseInt(total_money)*(parseInt(sale)/100));
                            if($(".print_option_chk_box").is(":checked")){
                                total_money =  Math.floor(total_money/10)*10;
                                bon_money = Math.floor(parseInt(parseInt(total_money)*(parseInt(sale)/100))/10)*10;
                                alldm +=  Math.floor(total_money/10)*10;
                                alldm2 += Math.floor(parseInt(parseInt(total_money)*(parseInt(sale)/100))/10)*10;
                            }else{
                                alldm += total_money;
                                alldm2 += bon_money;
                            }
                            payment_product_arr.push(otr_product[di_cnt]);
                            payment_product_arr2.push(pname2[di_cnt]);
                            //pdfstr1 += "<tr class='addpdf' height=47 style='mso-height-source:userset;height:35.25pt'><td colspan=3 height=47 class='xl368' style='border-right:1.0pt solid black; border-top:none;'>"+$('.'+targetclass+' .pdfname').eq(i).text()+"</td><td class='xl368' style='border-right:1.0pt solid black;border-top:none;border-left:none'>"+$('.'+targetclass+' .pdfname2').eq(i).text()+"</td><td class='xl368' style='border-right:1.0pt solid black;border-top:none;border-left:none'>"+$('.'+targetclass+' .pdfcode').eq(i).text()+"</td><td colspan=2 class='xl368' width=171 style='border-right:1.0pt solid black;border-top:none;border-left:none'>"+$('.'+targetclass+' .bcodeinput').eq(i).val()+"</td><td class='xl368' style='border-right:1.0pt solid black;border-top:none;border-left:none'>"+rentstartResult[y]+"</td><td class='xl368' style='border-right:1.0pt solid black;border-top:none;border-left:none'>~</td><td class='xl368' style='border-right:1.0pt solid black;border-top:none;border-left:none'>"+rentendResult[y]+"</td><td class='xl368' style='border-right:1.0pt solid black;border-top:none;border-left:none'>"+parseInt(dm).toLocaleString()+"원</td><td class='xl368 sdate' style='border-right:1.0pt solid black;border-right:1.0pt solid black;border-top:none;border-left:none'>"+parseInt(parseInt(dm)*(parseInt(psale)/100)).toLocaleString()+"원</td></tr>";
                            pdfstr1_2 += "<tr class='addpdf'><td class='tg-c3ow'>"+otr_product[di_cnt]+"</td><td class='tg-c3ow'>"+pname2[di_cnt]+"</td><td class='tg-c3ow'>"+otr_pcode[di_cnt]+"</td><td class='tg-c3ow'>"+otr_buybcode[di_cnt]+"</td><td class='tg-c3ow' style='padding:5px 1px;'>"+rentstartResult[di_cnt][y]+"</td><td class='tg-c3ow'>~</td><td class='tg-c3ow' style='padding:5px 1px;'>"+rentendResult[di_cnt][y]+"</td><td class='tg-c3ow' ><textarea class='pdfstr_custum pdfstr_custum_dan' onchange='textarea_change(this)'>"+parseInt(total_money).toLocaleString()+"</textarea></td><td class='tg-c3ow sdate'><textarea class='pdfstr_custum pdfstr_custum_dan' onchange='textarea_change(this)'>"+parseInt(bon_money).toLocaleString()+"</textarea></td></tr>";
                        }
                        di_cnt++;
                    });
                    //console.warn(pdfstr2);

                    for(var i=0; i<ionContents.length; i++){
                        //console.log('lado')
                        if($('.print_chk_box').eq(i).is(":checked")){
                            console.log("i",i)
                            if(i!=2&&i!=3&&i!=4){
                                let name_html_all =  ionContents[i].contentDocument.querySelectorAll('.name');
                                name_html_all.forEach(function(obj,index){
                                    obj.innerHTML = name;
                                });
                                //ionContents[i].contentDocument.querySelector('.name').innerHTML = name;
                                ionContents[i].contentDocument.querySelector('.regident').innerHTML = regident;
                                ionContents[i].contentDocument.querySelector('.number').innerHTML = number;
                                ionContents[i].contentDocument.querySelector('.target').innerHTML = target + sale +"%";
                                // ionContents.querySelector('.target2').innerHTML = sale;
                                ionContents[i].contentDocument.querySelector('.ranker').innerHTML = ranker;
                                //let addpdfElement = ionContents.querySelector('.addpdf');
                                $('.ion').contents().find('.addpdf').remove();
                                // addpdfElement && addpdfElement.remove();
                                ionContents[i].contentDocument.querySelector('.address').innerHTML = address;
                                if(i==0){
                                    $('.ion').contents().find('.zero_format').remove();
                                    ionContents[i].contentDocument.querySelector('.pdfguardname').innerHTML = guardname;
                                    if (guardtarget === '본인') ionContents[i].contentDocument.querySelector('.pdfguardname').innerHTML = name;
                                    ionContents[i].contentDocument.querySelector('.pdfguardtarget').innerHTML = guardtarget;
                                    ionContents[i].contentDocument.querySelector('.manager').innerHTML = manager;
                                    ionContents[i].contentDocument.querySelector('.ceo').innerHTML = "<%=companyinfo[0].companyceo%>";
                                    if('<%=company%>'=="(금천)하늘방문요양센터"&&new Date("2024-07-01")>new Date(run_date)){
                                        ionContents[i].contentDocument.querySelector('.ceo').innerHTML = "염완용";
                                    }else if('<%=company%>'=="(금천)하늘방문요양센터"&&new Date("2024-06-30")<new Date(run_date)){
                                        ionContents[i].contentDocument.querySelector('.ceo').innerHTML = "안병수";
                                    }else if('<%=company%>'=="도우누리복지용구"){
                                        ionContents[i].contentDocument.querySelector('.ceo').innerHTML = "조남식";
                                    }else if('<%=company%>'=="한마음방문요양센터"){
                                        ionContents[i].contentDocument.querySelector('.ceo').innerHTML = "박장순";
                                    }else if('<%=company%>'=="더조은방문요양복지센터"){
                                        ionContents[i].contentDocument.querySelector('.ceo').innerHTML = "박철순";
                                    }
                                    ionContents[i].contentDocument.querySelector('.pdfadd2').insertAdjacentHTML('afterend', pdfstr1);
                                    ionContents[i].contentDocument.querySelector('.pdfdantotal').innerHTML=pdfdantotal.toLocaleString();
                                    ionContents[i].contentDocument.querySelector('.pdfbuytotal').innerHTML=pdfbuytotal.toLocaleString();
                                    ionContents[i].contentDocument.querySelector('.pdfgongtotal').innerHTML=pdfgongtotal.toLocaleString();
                                    if (guardname === 'undefined' || guardname === 'null') ionContents[i].contentDocument.querySelector('.pdfguardname').innerHTML = name;
                                    if (guardtarget === 'undefined' || guardtarget === 'null') ionContents[i].contentDocument.querySelector('.pdfguardtarget').innerHTML = '본인';
                                    ionContents[i].contentDocument.querySelector('.companynum').innerHTML="<%=companyinfo[0].companynum%>";
                                    var option1Radio = ionContents[i].contentDocument.querySelector('#option1');
                                    var option2Radio = ionContents[i].contentDocument.querySelector('#option2');
                                    if (option1Radio) {
                                        let checkboxInput = document.createElement('input');
                                        checkboxInput.setAttribute('type', 'checkbox');
                                        checkboxInput.setAttribute('name', option1Radio.getAttribute('name'));
                                        checkboxInput.setAttribute('value', option1Radio.getAttribute('value'));
                                        checkboxInput.setAttribute('checked', option1Radio.checked);
                                        option1Radio.parentNode.replaceChild(checkboxInput, option1Radio);
                                    }
                                    if (option2Radio) {
                                        let checkboxInput = document.createElement('input');
                                        checkboxInput.setAttribute('type', 'checkbox');
                                        checkboxInput.setAttribute('name', option2Radio.getAttribute('name'));
                                        checkboxInput.setAttribute('value', option2Radio.getAttribute('value'));
                                        checkboxInput.setAttribute('checked', option2Radio.checked);
                                        option2Radio.parentNode.replaceChild(checkboxInput, option2Radio);
                                        option2Radio.setAttribute('checked', option2Radio.checked);
                                    }
                                }else if(i==1){
                                    let ceo_html_all = ionContents[i].contentDocument.querySelectorAll('.ceo');
                                    ceo_html_all.forEach(function(obj,index){
                                        obj.innerHTML = "<%=companyinfo[0].companyceo%>";
                                    });
                                    ionContents[i].contentDocument.querySelector('.pdfguardname').innerHTML = guardname;
                                    if (guardtarget === '본인') ionContents[i].contentDocument.querySelector('.pdfguardname').innerHTML = name;
                                    ionContents[i].contentDocument.querySelector('.companynum').innerHTML="<%=companyinfo[0].companynum%>";
                                    ionContents[i].contentDocument.querySelector('.pdfadd2').insertAdjacentHTML('afterend', pdfstr1_2);
                                    ionContents[i].contentDocument.querySelector('.pdfdantotal2').innerHTML="<textarea class='pdfstr_custum pdfstr_custum_dan'>"+parseInt(alldm).toLocaleString()+"</textarea>";
                                    ionContents[i].contentDocument.querySelector('.pdfbuytotal2').innerHTML="<textarea class='pdfstr_custum pdfstr_custum_dan'>"+parseInt(alldm2).toLocaleString()+"</textarea>";
                                    ionContents[i].contentDocument.querySelector('.target2');
                                    let target2_all = ionContents[i].contentDocument.querySelectorAll('.target2');
                                    target2_all.forEach(function(obj,index){
                                        obj.innerHTML = sale +"%";
                                    });
                                    if('<%=company%>'=='가좌의료기'){
                                        ionContents[i].contentDocument.querySelector('.buyrent_terms_4').setAttribute("style","text-decoration:underline; font-size:12px;");
                                    }else if("<%=company%>"=="(주)핸디케어"){
                                        let str = `1. 대여품목은 반환사유가 발생하면, 즉시(주)핸디케어로 알려주셔야합니다.(T.032-513-8852/010-3504-8852)
2. 침대 대여중 요양병원,일반병원 입원시 입.퇴원 날짜를 반드시 통보하여주셔야합니다.`;
                                        // ionContents[i].contentDocument.querySelector('.buyrent_txt_chkbox').checked = true;
                                        //ionContents[i].contentDocument.querySelector('.buyrent_txt_area').style.display = 'block';
                                        ionContents[i].contentDocument.querySelector('.buyrent_txtarea').innerHTML = str;
                                        const height = ionContents[i].contentDocument.querySelector('.buyrent_txtarea').scrollHeight + 2;
                                        ionContents[i].contentDocument.querySelector('.buyrent_txtarea').style.height = height + 'px';
                                    }else if("<%=company%>"=="콤슨경기사업소"){
                                        $('.ion').contents().find('.qr_custum').show();
                                        $('.ion').contents().find('.qr_custum2').show();
                                    }
                                    ionContents[i].contentDocument.querySelector('.banknumber').innerHTML=(banknum=='undefined')?'':banknum;
                                    

                                }

                                let company_html_all = ionContents[i].contentDocument.querySelectorAll('.company');
                                company_html_all.forEach(function(obj,index){
                                    obj.innerHTML = "<%=company%>";
                                });

                                ionContents[i].contentDocument.querySelector('.pdfphone1').innerHTML = phone;

                                // ionContents[i].contentDocument.querySelector('.pdfday').innerHTML = chan_val + getTodayLabel();
                                ionContents[i].contentDocument.querySelector('.pdfday').innerHTML = run_date;

                                let topcm = '-20';
                                let tcls = 'basic';
                                let pdfstr2 = '<span class="' + tcls + ' msg_sign" style="position: absolute; z-index: 999; right:0px; top:' + topcm + 'px;"><image style="width:110px; -webkit-user-drag: none;" src="/signfiles/' + number + '/<%=company%>" onerror="this.style.display=\'none\'"></span>';
                                let pdfstr3 = '<span class="msg_sign" style="position: absolute; right:0px; top:-5px;"><image style="width:50px; -webkit-user-drag: none;" src="/companystamp/<%=company.replace(/ /g,"%20")%>" onerror="this.style.display=\'none\'"></span>';
                                if('<%=company%>'!='한국의료기기'&&'<%=company%>'!='은평복지용구'&&'<%=company%>'!='우리집의료기 복지용구'&&'<%=company%>'!='한마음방문요양센터'){
                                    pdfstr2 = '<span class="'+tcls+'" style="position: absolute; z-index: 999; right:0px; top:'+topcm+'px;"><image style="width:110px; -webkit-user-drag: none;" src="/signfilessmsrentadd/' + number + '/<%=company.replace(/#/g,"%23").replace(/ /g,"%20")%>/' + name + '/'+sign+'" onerror="this.style.display=\'none\'"></span>';
                                }
                                        // ionContents.querySelector('.pdfsign').innerHTML = ''; // 이 줄은 주석 처리된 것으로 추측되어 제외했습니다.
                                let pdfSignElement = ionContents[i].contentDocument.querySelector('.pdfsign');
                                while (pdfSignElement.firstChild) {
                                    pdfSignElement.removeChild(pdfSignElement.firstChild);
                                }
                                let pdfSign2Element = ionContents[i].contentDocument.querySelector('.pdfsign2');
                                while (pdfSign2Element.firstChild) {
                                    pdfSign2Element.removeChild(pdfSign2Element.firstChild);
                                }
                                // if('<%=company%>'=='한국의료기기'){
                                    ionContents[i].contentDocument.querySelector('.pdfsign').insertAdjacentHTML('beforeend', pdfstr2);
                                // }
                                ionContents[i].contentDocument.querySelector('.pdfsign2').insertAdjacentHTML('beforeend', pdfstr3);

                            }else if(i==2){
                                ionContents[i].contentDocument.querySelector('.name').innerHTML = name;
                                ionContents[i].contentDocument.querySelector('.number').innerHTML = number;
                                ionContents[i].contentDocument.querySelector('.companynum').innerHTML="<%=companyinfo[0].companynum%>";
                                ionContents[i].contentDocument.querySelector('.address').innerHTML = address;
                                let company_html_all = ionContents[i].contentDocument.querySelectorAll('.company');
                                company_html_all.forEach(function(obj,index){
                                    obj.innerHTML = "<%=company%>";
                                });
                                let dantotal_html_all = ionContents[i].contentDocument.querySelectorAll('.pdfdantotal');
                                dantotal_html_all.forEach(function(obj,index){
                                    obj.innerHTML = "<textarea class='pdfstr_custum pdfstr_custum_dan'>"+parseInt(pdfdantotal).toLocaleString()+"</textarea>";
                                });
                                // ionContents[i].contentDocument.querySelector('.pdfdantotal').innerHTML=pdfdantotal.toLocaleString();
                                let buytotal_html_all = ionContents[i].contentDocument.querySelectorAll('.pdfbuytotal');
                                buytotal_html_all.forEach(function(obj,index){
                                    obj.innerHTML ="<textarea class='pdfstr_custum pdfstr_custum_dan'>"+parseInt(pdfbuytotal).toLocaleString()+"</textarea>";
                                });
                                // ionContents[i].contentDocument.querySelector('.pdfbuytotal').innerHTML=pdfbuytotal.toLocaleString();

                                ionContents[i].contentDocument.querySelector('.pdfgongtotal').innerHTML="<textarea class='pdfstr_custum pdfstr_custum_dan'>"+parseInt(pdfgongtotal).toLocaleString()+"</textarea>";
                                // ionContents[i].contentDocument.querySelector('.pdfday').innerHTML = chan_val + getTodayLabel();
                                ionContents[i].contentDocument.querySelector('.pdfday').innerHTML = run_date;
                                let ceo_html_all = ionContents[i].contentDocument.querySelectorAll('.ceo');
                                ceo_html_all.forEach(function(obj,index){
                                
                                        obj.innerHTML = "<%=companyinfo[0].companyceo%>";
                                    
                                    
                                });
                                
                                let payment_str = '';
                                payment_product_arr.forEach(function(obj,index){
                                    payment_str += obj+'&nbsp;'+payment_product_arr2[index]+'<br/>';
                                });
                                ionContents[i].contentDocument.querySelector('.sdate').innerHTML = concat_arr_obj.concat_arr_rentstart[0] + '~' +concat_arr_obj.concat_arr_rentend[concat_arr_obj.concat_arr_rentend.length-1];
                                $('.ion').contents().find('.product_arr').html(payment_str);
                                
                                let topcm = '-20';
                                let tcls = 'basic';
                                let pdfstr3 = '<span class="msg_sign" style="position: absolute; left:0px; top:-5px;"><image style="width:50px; -webkit-user-drag: none;" src="/companystamp/<%=company.replace(/ /g,"%20")%>" onerror="this.style.display=\'none\'"></span>';
                                let pdfSign2Element = ionContents[i].contentDocument.querySelector('.pdfsign2');
                                while (pdfSign2Element.firstChild) {
                                    pdfSign2Element.removeChild(pdfSign2Element.firstChild);
                                }
                                ionContents[i].contentDocument.querySelector('.pdfsign2').insertAdjacentHTML('beforeend', pdfstr3);
                                ionContents[i].contentDocument.querySelector('.companynum2').innerHTML="<%=bankinfo[0].companynum%>";
                            }else if(i==3){
                                let topcm = '-20';
                                let tcls = 'basic';
                                let pdfstr3 = '<span class="msg_sign" style="position: absolute; right:40%; top:-37px;"><image style="width:50px; -webkit-user-drag: none;" src="/companystamp/<%=company.replace(/ /g,"%20")%>" onerror="this.style.display=\'none\'"></span>';
                                let pdfSign2Element = ionContents[i].contentDocument.querySelector('.pdfsign');
                                while (pdfSign2Element.firstChild) {
                                    pdfSign2Element.removeChild(pdfSign2Element.firstChild);
                                }
                                ionContents[i].contentDocument.querySelector('.pdfsign').insertAdjacentHTML('beforeend', pdfstr3);

                                ionContents[i].contentDocument.querySelector('.name').innerHTML = name;
                                ionContents[i].contentDocument.querySelector('.number').innerHTML = number;
                                ionContents[i].contentDocument.querySelector('.need_regident').innerHTML = regident;
                                ionContents[i].contentDocument.querySelector('.need_target').innerHTML = target + sale +"%";
                                ionContents[i].contentDocument.querySelector('.need_address').innerHTML = address;
                                ionContents[i].contentDocument.querySelector('.need_phone').innerHTML = phone;
                                ionContents[i].contentDocument.querySelector('.need_date').innerHTML = run_date;
                                
                                ionContents[i].contentDocument.querySelector('.need_height').style.padding = '15px';
                                ionContents[i].contentDocument.querySelector('.need_weight').style.padding = '15px';
                                ionContents[i].contentDocument.querySelector('.need_sex').style.padding = '15px';

                                // ionContents[i].contentDocument.querySelector('.ranker').innerHTML = ranker;
                            }else if(i==4){
                                ionContents[i].contentDocument.querySelector('.company').innerHTML = "<%=company%>";
                                let name_html_all = ionContents[i].contentDocument.querySelectorAll('.name');
                                name_html_all.forEach(function(obj,index){
                                    obj.innerHTML = name;
                                });
                                ionContents[i].contentDocument.querySelector('.number').innerHTML = number;
                                ionContents[i].contentDocument.querySelector('.companynum').innerHTML="<%=bankinfo[0].companynum%>";
                                let phone_html_all = ionContents[i].contentDocument.querySelectorAll('.pdfphone1');
                                phone_html_all.forEach(function(obj,index){
                                    obj.innerHTML = phone;
                                });
                                let address_html_all = ionContents[i].contentDocument.querySelectorAll('.address');
                                address_html_all.forEach(function(obj,index){
                                    obj.innerHTML = address;
                                    
                                });
                                let caddress_html_all = ionContents[i].contentDocument.querySelectorAll('.caddress');
                                caddress_html_all.forEach(function(obj,index){
                                    
                                    obj.innerHTML = "<%=bankinfo[0].address%>";

                                });
                                ionContents[i].contentDocument.querySelector('.regident').innerHTML = regident;
                                let topcm = '-20';
                                let tcls = 'basic';
                                let pdfstr2 = '<span class="' + tcls + ' msg_sign" style="position: absolute; z-index: 999; right:0px; top:' + topcm + 'px;"><image style="width:110px; -webkit-user-drag: none;" src="/signfilessmsrentadd/' + number + '/<%=company%>" onerror="this.style.display=\'none\'"></span>';
                                let pdfstr3 = '<span class="msg_sign" style="position: absolute; right:0px; top:-5px;"><image style="width:50px; -webkit-user-drag: none;" src="/companystamp/<%=company.replace(/ /g,"%20")%>" onerror="this.style.display=\'none\'"></span>';
                                let pdfSignElement = ionContents[i].contentDocument.querySelector('.pdfsign');
                                while (pdfSignElement.firstChild) {
                                    pdfSignElement.removeChild(pdfSignElement.firstChild);
                                }
                                let pdfSign2Element = ionContents[i].contentDocument.querySelector('.pdfsign2');
                                while (pdfSign2Element.firstChild) {
                                    pdfSign2Element.removeChild(pdfSign2Element.firstChild);
                                }
                                ionContents[i].contentDocument.querySelector('.pcode').innerHTML = otr_pcode;
                                ionContents[i].contentDocument.querySelector('.pname').innerHTML = pname2;
                                ionContents[i].contentDocument.querySelector('.pdfday').innerHTML = run_date;
                                ionContents[i].contentDocument.querySelector('.tel').innerHTML = "<%=bankinfo[0].companyphone%>";
                                ionContents[i].contentDocument.querySelector('.pdfsign').insertAdjacentHTML('beforeend', pdfstr2);
                                
                                ionContents[i].contentDocument.querySelector('.pdfsign2').insertAdjacentHTML('beforeend', pdfstr3);
                                // ionContents[i].contentDocument.querySelector('.ranker').innerHTML = ranker;
                            }
                            
                            name_arr.push(name);
                            number_arr.push(number);
                            console.log(name_arr,number_arr)
                            //console.log(ionContents.querySelector('body').innerHTML);
                            // const ionContents2 = ionContents;
                            el_arr.push(ionContents[i].contentDocument.querySelector('html').innerHTML);
                        }
                        
                    }
                    
                }
            }
        });
        await getBase64Image(name_arr,number_arr,el_arr,'basic');
        
        
    }

    function rent_add_all_chk(x){
        if($(x).is(':checked')){
            $('.rent_add_chk').prop('checked',true);
        }else{
            $('.rent_add_chk').prop('checked',false);
        }
    }

    function rent_add_chkbox_chk(x){
        if(!$(x).is(':checked')){
            $('.rent_add_chk').eq(0).prop('checked',false);
        }
    }

    function dateFormat(date) {
        let month = date.getMonth() + 1;
        let day = date.getDate();
        let hour = date.getHours();
        let minute = date.getMinutes();
        let second = date.getSeconds();

        month = month >= 10 ? month : '0' + month;
        day = day >= 10 ? day : '0' + day;
        hour = hour >= 10 ? hour : '0' + hour;
        minute = minute >= 10 ? minute : '0' + minute;
        second = second >= 10 ? second : '0' + second;

        return date.getFullYear() + '-' + month + '-' + day;
    }

    function toggleInput() {
        const checkbox = document.getElementById('toggleInput');
        const dateInput = document.getElementById('datepicker3');
        $('.rent_add_iframe').contents().find('.pdfday').html(dateInput.value);
        dateInput.disabled = !checkbox.checked;
    }

    function print_input_change(el_val){
        $('.rent_add_iframe').contents().find('.pdfday').html(el_val.value);
    }

    function excelchange(x){
        if(x=='.renttable'){
            $('.rent_add_iframe').css({"top":"0px","z-index":9999});
            $('.rent_add_iframe').contents().find('body').html(`
                <div class="rent_add_preview">
                    <div style="font-size:18px; font-weight:bold; text-align:center;">
                        계약서 미리보기화면입니다.
                        <br/>
                        '연장계약서류생성'을 진행해주세요
                    </div>
                </div>
            `);
            product_get_money().then(p_obj=>{
                Swal.fire({
                    title: '<div style="font-size:22px;">연장내역</div><br/>(2024-01-24 업데이트 이후 신규연장계약 내역만 표시)',
                    width:'50%',
                    position:"center-end",
                    // text: "미연장내역과 연장내역을 확인할수있습니다.",
                    html:`
                    <div class="rent_add_container" style="display:flex; flex-direction:column; justify-content:center; align-items:center;">
                        <div style="margin-bottom: 10px; display:flex; justify-content:center; align-items:center;">
                            <input type="text" id="rent_add_search" placeholder="검색어를 입력하세요" style="width: 200px; height: 30px;" onchange="table_search(this,'#rent_add_search','history_tr')" onfocus="$('#search_tooltip').fadeIn().delay(2000).fadeOut()"><div id="search_tooltip" style="display:none; position:absolute; background:#333; color:#fff; padding:5px 10px; border-radius:5px; font-size:12px;">입력후 엔터키를 누르세요</div>
                            <div class="datesearch">
                                <select id="yearSelect" style="width:80px; height:30px; font-size:14px;">
                                    <option value="2025" selected>2025년</option>
                                    <option value="2024">2024년</option>
                                </select>
                                <select id="monthSelect1" style="width:60px; height:30px; font-size:14px;">
                                    <option value="01" selected>1월</option>
                                    <option value="02">2월</option>
                                    <option value="03">3월</option>
                                    <option value="04">4월</option>
                                    <option value="05">5월</option>
                                    <option value="06">6월</option>
                                    <option value="07">7월</option>
                                    <option value="08">8월</option>
                                    <option value="09">9월</option>
                                    <option value="10">10월</option>
                                    <option value="11">11월</option>
                                    <option value="12">12월</option>
                                </select>
                                <span class="refresh" id="rent_add_search2" onclick="table_search2($('#yearSelect').val(),$('#monthSelect1').val(),'#rent_add_search','history_tr')">날짜조회</span>
                            </div>
                        </div>
                        <table class="rent_add_table">
                            <thead>
                                <tr>
                                    <th><input type="checkbox" class="rent_add_chk" onclick="rent_add_all_chk(this)"></th><th>성함</th><th>인정번호</th><th>품목명</th><th>품목코드</th><th>바코드</th><th>연장시작일</th><th>연장종료일</th><th>진행날짜</th><th>전자서명</th>
                                </tr>
                            </thead>
                            <tbody class="rent_add_table_tbody">
                                <tr class="load_txt" style="display:flex; justify-content:center;"><td style="width:100%; font-size:18px; font-weight:bold;">연장내역 불러오는중...</td></tr>
                            </tbody>
                        </table>
                    </div>
                    <div class="rent_add_print_container" style="display:flex; flex-direction:column; justify-content:center; align-items:center;">
                        <div class="rent_add_print_btn pdf_btn" style="display:none;">연장계약 급여제공기록지<br/>PDF변환</div>
                        <div class="" style="width:100%; display:flex; justify-content:center; align-items:center;">
                            <div class="flex_space" style="width:50%; font-weight:bold; background:#fff; border-radius:10px;">
                                <div class="flexcolumn" style="padding: 20px;"><input type="checkbox" class="print_chk_box" data-id="doc1" checked><div>급여제공기록지</div></div>
                                <div class="flexcolumn" style="padding: 20px;"><input type="checkbox" class="print_chk_box" data-id="doc2" checked><div>공급계약서</div></div>
                                <div class="flexcolumn" style="padding: 20px;"><input type="checkbox" class="print_chk_box" data-id="doc5" checked><div>급여비용명세서</div></div>
                                <div class="flexcolumn" style="padding: 20px;"><input type="checkbox" class="print_chk_box" data-id="doc6"><div>욕구사정기록지</div></div>
                                <div class="flexcolumn" style="padding: 20px;"><input type="checkbox" class="print_chk_box" data-id="doc7"><div>연장대여동의서</div></div>

                            </div>
                        </div>
                        
                        
                        <div style="display:flex; justify-content:center; align-items:center; width:50%;">
                            <div class="flex" style="font-weight:bold; font-size:14px;">원단위 절삭&nbsp;&nbsp;&nbsp;<input type="checkbox" class="print_option_chk_box"></div>
                            <!--div class="flex" style="font-weight:bold; font-size:14px;">기존서명표시&nbsp;&nbsp;&nbsp;<input type="checkbox" class="print_option_chk_box"></div-->
                        </div>
                        <br/>
                        <div class="flex" style="font-size:15px; font-weight:bold;">
                            <input id="toggleInput" type="checkbox" style="width:25px; height:25px;" onchange="toggleInput()">&nbsp;&nbsp;&nbsp;<div>출력일자 일괄수정:</div>&nbsp;&nbsp;&nbsp;<input type="text" id="datepicker3" style="width:150px; height:30px;" value="${date_now()}" onchange="print_input_change(this)" disabled>
                        </div>
                        <div>
                            <div style="font-size:18px; font-weight:bold;">계약서 생성 수급자: <span class="doc_create_cnt">0</span>명</div>
                        </div>
                        <div class="flex">
                            <div class="rent_add_print_btn make_btn" onclick="rent_add_make_doc($('.rent_add_table'),${JSON.stringify(p_obj).replace(/\"/g,'\'')});">연장계약서류<br/>생성</div>
                            &nbsp;&nbsp;&nbsp;&nbsp;
                            <div class="rent_add_print_btn print_btn" onclick="rent_add_doc_print();">연장계약서류<br/>출력</div>
                            &nbsp;&nbsp;&nbsp;&nbsp;
                            <div class="rent_add_print_btn msg_btn" id="popbillModalShow" onclick="rent_add_doc_msg();">문자<br/>발송</div>
                        </div>
                    </div>
                    <br/>
                    <br/>
                    <div class="rent_add_excel_container">
                        <div>엑셀변환 선택</div>
                    </div>
                    <div style="">
                        <iframe id="print1" class="print1 iprint ion" name="print1" src="//localhost:802/rentnew" frameborder="0" style="position:absolute; width:912px; top:-1500px;" ></iframe>
                        <iframe id="print2" class="print2 iprint ion" name="print2" src="//localhost:802/rentaddbuyrent" frameborder="0" style="position:absolute; width:912px; top:-1500px;" ></iframe>
                        <iframe id="print3" class="print3 iprint ion" name="print3" src="//localhost:802/rentaddpayment" frameborder="0" style="position:absolute; width:912px; top:-1500px;" ></iframe>
                        <iframe id="print4" class="print4 iprint ion" name="print4" src="//localhost:802/needfile" frameborder="0" style="position:absolute; width:912px; top:-1500px;" ></iframe>
                        <iframe id="print5" class="print4 iprint ion" name="print5" src="//localhost:802/rentconfirm" frameborder="0" style="position:absolute; width:912px; top:-1500px;" ></iframe>

                    </div>
                    `,
                    icon: 'info',
                    // width:'500px',
                    showCancelButton: true,
                    showDenyButton:true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    denyButtonColor: '#8ad660',
                    denyButtonText: '연장내역',
                    confirmButtonText: '미연장내역',
                    cancelButtonText: '취소',
                    allowOutsideClick: false,
                    didOpen: () => {
                        $("#datepicker3").datepicker({
                            changeMonth: true,
                            changeYear: true
                        });
                        $("#datepicker3").datepicker("option", "showAnim", "slide");
                        let history_str= '';
                        rent_add_obj = [];
                        rent_add_history_get().then(async res=>{
                            console.warn(res)
                            let companymember = {};
                            res.companymember.forEach(function(obj,index){
                                companymember[obj.name] = obj.banknum;
                            });
                            let sign_filter = res.data_sign.filter((value, index, self) => value.open != '');
                            console.log(sign_filter,"sign_obj");
                            let sign_filter_obj = {};
                            sign_filter.forEach(function(obj,index){
                                sign_filter_obj[obj.number]=obj.open;
                            });
                            res.data.forEach(function(obj,index){
                                let bcode_sale_date = '';
                                if(obj.bcodesale6_date!=null&&obj.bcodesale6_date!=''){
                                    let salecnt = 5;
                                    if(obj.productname=='전동침대')salecnt=10;
                                    else if(obj.productname=='욕창예방 매트리스')salecnt=3;
                                    let newsaledates = new Date(obj.bcodesale6_date);
                                    newsaledates.setFullYear(newsaledates.getFullYear() + salecnt);
                                    newsaledates.setDate(newsaledates.getDate() - 1);
                                    bcode_sale_date = dateFormat(newsaledates);
                                }
                                let hidden_data = `
                                <input class='msg_rentstart' type='hidden' value='`+obj.constartdate.replace(/(\d{4})(\d{2})(\d{2})/g, '$1-$2-$3')+`'>
                                <input class='msg_sale' type='hidden' value='`+obj.sale+`'>
                                <input class='msg_datenow' type='hidden' value='`+obj.datenow+`'>
                                <input class='msg_nextdate' type='hidden' value='`+obj.nextdate.replace(/\'/g,'')+`'>
                                <input class='msg_target' type='hidden' value='`+obj.target+`'>
                                <input class='msg_ranker' type='hidden' value='`+obj.ranker+`'>
                                <input class='msg_regident' type='hidden' value='`+obj.regident+`'>
                                <input class='msg_address' type='hidden' value='`+obj.address+` `+obj.addressdetail+`'>
                                <input class='msg_guardname' type='hidden' value='`+obj.guardname+`'>
                                <input class='msg_guardtarget' type='hidden' value='`+obj.guardtarget+`'>
                                <input class='msg_manager' type='hidden' value='`+obj.manager+`'>
                                <input class='msg_phone' type='hidden' value='`+obj.phone1+`'>
                                
                                <input class='msg_bcodesale6_date' type='hidden' value='`+bcode_sale_date+`'>
                                <input class='msg_banknum' type='hidden' value='`+companymember[obj.manager]+`'>
                                `;
                                history_str += `<tr class=${obj.err==1?"tr_warning":"history_tr"}>
                                    <td><input type="checkbox" class="rent_add_chk" onclick="rent_add_chkbox_chk(this);"></td>
                                    <td>${obj.name}</td>
                                    <td>${obj.number}</td>
                                    <td>${obj.productname}</td>
                                    <td>${obj.pcode}</td>
                                    <td>${obj.bcode}</td>
                                    <td>${obj.constartdate.replace(/[^0-9]/g,'')}</td>
                                    <td>${obj.date.replace(/[^0-9]/g,'')}</td>
                                    <td>${obj.condate}</td>
                                    <td>${sign_filter_obj[obj.number]?"O":""}</td>`+hidden_data+`</tr>`;
                                rent_add_obj.push(
                                    {
                                        num:obj.num,
                                        name:obj.name,
                                        number:obj.number,
                                        productname:obj.productname,
                                        pcode:obj.pcode,
                                        bcode:obj.bcode,
                                        constartdate:obj.constartdate,
                                        date:obj.date,
                                        condate:obj.condate,
                                        sale:obj.sale,
                                        datenow:obj.datenow,
                                        nextdate:obj.nextdate,
                                        target:obj.target,
                                        ranker:obj.ranker,
                                        regident:obj.regident,
                                        address:obj.address+' '+obj.addressdetail,
                                        guardname:obj.guardname,
                                        guardtarget:obj.guardtarget,
                                        manager:obj.manager,
                                        phone:obj.phone1,
                                        bcode_sale_date:bcode_sale_date,
                                        banknum:companymember[obj.manager],
                                        sign:sign_filter_obj[obj.number]?sign_filter_obj[obj.number]:'',
                                    }
                                )
                            });
                            $('.rent_add_table_tbody').append(history_str);
                            $('.load_txt').remove();
                            
                        });
                        
                        if(guide_chk==1){
                            guide_on_excel_1();
                        }
                        $('.swal2-styled.swal2-deny').css('font-size','1em');
                    },
                    didDestroy:()=>{
                        $('.rent_add_iframe').css({"top":"-2000px"});
                    }
                }).then((result) => {
                    if(guide_chk==1){
                        guide_on_rent_4();
                    }
                    if (result.isConfirmed) {
                        $(x).table2excel({
                            exclude: ".excludeThisClass",
                            name: company+' 미연장내역',
                            filename: company+' 미연장내역', 
                            preserveColors: false 
                        });
                    }else if(result.isDenied){
                        $.ajax({
                            url:'/rent_contract_add_list',
                            data:'company='+company,
                            type:'POST',
                            dataType:'JSON',
                            success:function(result){
                                if(result.code==200){
                                    let str = '<tr class="exceltr"><td>수급자성함</td><td>장기요양인정번호</td><td>바코드</td><td>연장계약일</td><td>계약일자</td></tr>';
                                    $.each(result.data,function(i){
                                        str += '<tr class="exceltr"><td>'+result.data[i].name+'</td><td>'+result.data[i].number+'</td><td>'+result.data[i].bcode+'</td><td>'+result.data[i].date+'</td><td>'+result.data[i].condate.replace(/-/g,'')+'</td></tr>';
                                    });
                                    $('.excelbody').append(str);
                                    $('.excelbody').table2excel({
                                        exclude: ".excludeThisClass",
                                        name: company+' 전체 연장내역',
                                        filename: company+' 전체 연장내역', 
                                        preserveColors: false 
                                    });
                                    $('.exceltr').remove();
                                }
                            }
                        });
                    }
                });
            });
        }else{
            $(x).table2excel({
                exclude: ".excludeThisClass",
                name: company,
                filename: company,
                preserveColors: false 
            });
        }

        
    }
    var socketpong = 0;
    var engine = socket.io.engine;

    async function socketping(){
        var interval = await setInterval(() => {
            
            if(socketpong==1){
                //socket = io();
                socket.connect();
                //engine = socket.io.engine;
                console.log(engine.transport.name);
                socket.emit('disconnect2', {'name': uid});
                socket.emit('login', {'name': uid});
                socket.emit('pingg', {'name': uid});
                console.log('ping');
                
            }else{
                console.log('pingend');
                clearInterval(interval);
                //engine = socket.io.engine;
            }
        }, 1000);
    }

    // socket.io.on("reconnect_attempt", () => {
    //     console.log('login');
    // });

    // socket.on("connect", () => {
    //     console.log(engine.transport.name);
    //     engine.on("close", (reason) => {
    //         socketpong = 1;
    //         socketping();
    //         console.log('close');
    //     });
    // });
    
    // socket.on('pongg',function(data){
    //     console.log('login');
    //     socketpong = 0;
    //     socket.emit('disconnect2', {'name': uid});
    //     socket.emit('login', {'name': uid});
    // });

    var totalcount = 0;
    var errorarr = {};
    var errorcount = 0;

    socket.on('rentcontract2', function(data) {
        datasplit=data.split(";");
        if(datasplit[0]=='y'){
            $.ajax({
                url: "/rentcontract",
                data: "id=" + uid + "&company="+company+ "&key="+datasplit[6]+ "&bcode="+datasplit[2]+ "&edate2="+ymdformat(datasplit[3])+ "&chk="+datasplit[4]+ "&num="+datasplit[5],
                type: 'POST',
                dataType: "JSON",
                success: function (result) {
                    if(result){
                            if(datasplit[4]=='cok'&&datasplit[6]=='n'){
                                $.each(datasplit[2],function(i){
                                    if(datasplit[2][i].includes('|')){
                                        buybcode2=datasplit[2][i].split('|');
                                        $.each(buybcode2,function(x){
                                            $.ajax({
                                                url:"/bcodelistmodify",
                                                data:"company="+company+"&buybcode="+buybcode2[x].replace(/ /g,'')+"&contractselect=ok" + "&buycode="+datasplit[5],
                                                type:'POST',
                                                dataType:"JSON",
                                                async:false,
                                                error : function(error) {
                                                    console.log(error);
                                                    },
                                                    success:function(results){
                                                        if(results)console.log(results);
                                                    },complete: () => {
                                                        console.log('a');
                                                    }
                                            })
                                            });
                                        
                                            }else{
                                                sleep(i*1000).then(() => 
                                                $.ajax({
                                                    url:"/bcodelistmodify",
                                                    data:"company="+company+"&buybcode="+datasplit[2]+"&contractselect=ok" +"&buycode="+datasplit[5],
                                                    type:'POST',
                                                    dataType:"JSON",
                                                    //async:false,
                                                    success:function(results){
                                                        if(results)console.log(results);
                                                    }
                                                })
                                                );
                                            }
                                });
                            }
                        }
                    }
                });
            }else if(datasplit[0]=='n'){
                errorcount++;
                errorarr[datasplit[2]+datasplit[3]] = datasplit[1]+((datasplit[4]!=undefined)?'(담당자:'+datasplit[4]+')':'');
                console.log('errorarr:'+errorarr);
            }
    });
    
    socket.on('buycontract2', function(data) {
        var datasplit=data.split(";");
        if(datasplit[0]=='y'){
            // $.ajax({
            //     url: "/buycontract",
            //     data: "id=" + uid + "&company="+company+ "&key="+ datasplit[5] +"&bcode="+datasplit[2]+ "&pcode="+datasplit[3]+ "&cdate="+datasplit[4],
            //     type: 'POST',
            //     dataType: "JSON",
            //     success: function (result) {
            //             if(result){
            //                 console.log('bcode:'+datasplit[2]);
            //             }
            //         }
            //     });
        }else if(datasplit[0]=='n'){
            errorcount++;
            errorarr[datasplit[2]+datasplit[3]] = datasplit[1]+((datasplit[4]!=undefined)?'(담당자:'+datasplit[4]+')':'');
            console.log('errorarr:'+errorarr);
        }
    });

    socket.on('rentcontractaddallsuccess', function(data) {
        if(data == 'ok'){
            var str = '';
            $.each(Object.keys(errorarr),function(i){
                str+=Object.keys(errorarr)[i]+'['+errorarr[Object.keys(errorarr)[i]]+']<br/>';
            });
            
            Swal.fire({
                icon: 'success',
                title: '일괄계약완료',
                width:'900px',
                html: '<div class="flexcol"><div style="font-size:15px;">미계약 수급자 내역: '+(str.split('<br/>').length-1)+' 건</div><div style="font-size:15px; height:300px; overflow:scroll; width:100%;">'+str+'</div></div>',
                allowOutsideClick: false,
            }).then((result) => {
                if (result.isConfirmed) {
                    errorcount = 0;
                    window.parent.location.reload();
                }else{
                    errorcount = 0;
                }
            });
        }else{
            Swal.fire({
                icon: 'error',
                title: '일괄계약실패',
                html: '<div>프로그램 오류</div>',
                allowOutsideClick: false,
            }).then((result) => {
                if (result.isConfirmed) {
                    errorcount = 0;
                    window.parent.location.reload();
                }else{
                    errorcount = 0;
                }
                
            });
        }
        
    });

    socket.on('rentcontractadd3', function(data) {
        var datasplit = data.split(';');
        $('.conaddcnt').html(datasplit[0]);
        $('.conaddcnt2').html(datasplit[1]+'('+datasplit[2]+')');
    });


    function buy_rent_contract_cef_re(obj){
        if(obj[0]=='now'){
            let datasplit = obj[1].split(';');
            $('.conaddcnt').html(datasplit[0]);
            $('.conaddcnt2').html(datasplit[1]+'('+datasplit[2]+')');
        }else if(obj[0]=="rentcontract2"){
            let datasplit=obj[1].split(";");
            if(datasplit[0]=='y'){
                $.ajax({
                    url: "/rentcontract",
                    data: "id=" + uid + "&company="+company+ "&key="+datasplit[6]+ "&bcode="+datasplit[2]+ "&edate2="+ymdformat(datasplit[3])+ "&chk="+datasplit[4]+ "&num="+datasplit[5],
                    type: 'POST',
                    dataType: "JSON",
                    success: function (result) {
                        if(result){
                            if(datasplit[4]=='cok'&&datasplit[6]=='n'){
                                $.each(datasplit[2],function(i){
                                    if(datasplit[2][i].includes('|')){
                                        buybcode2=datasplit[2][i].split('|');
                                        $.each(buybcode2,function(x){
                                            $.ajax({
                                                url:"/bcodelistmodify",
                                                data:"company="+company+"&buybcode="+buybcode2[x].replace(/ /g,'')+"&contractselect=ok" + "&buycode="+datasplit[5],
                                                type:'POST',
                                                dataType:"JSON",
                                                async:false,
                                                error : function(error) {
                                                    console.log(error);
                                                    },
                                                    success:function(results){
                                                        if(results)console.log(results);
                                                    },complete: () => {
                                                        console.log('a');
                                                    }
                                            })
                                        });
                                    }else{
                                        sleep(i*1000).then(() => 
                                            $.ajax({
                                                url:"/bcodelistmodify",
                                                data:"company="+company+"&buybcode="+datasplit[2]+"&contractselect=ok" +"&buycode="+datasplit[5],
                                                type:'POST',
                                                dataType:"JSON",
                                                //async:false,
                                                success:function(results){
                                                    if(results)console.log(results);
                                                }
                                            })
                                        );
                                    }
                                });
                            }
                        }
                    }
                });
            }else if(datasplit[0]=='n'){
                errorcount++;
                errorarr[datasplit[2]+datasplit[3]] = datasplit[1]+((datasplit[4]!=undefined)?'(담당자:'+datasplit[4]+')':'');
                console.log('errorarr:'+errorarr);
            }
        }else if(obj[0]=='buycontract2'){
            let datasplit=obj[1].split(";");
            if(datasplit[0]=='y'){

            }else if(datasplit[0]=='n'){
                errorcount++;
                errorarr[datasplit[2]+datasplit[3]] = datasplit[1]+((datasplit[4]!=undefined)?'(담당자:'+datasplit[4]+')':'');
                console.log('errorarr:'+errorarr);
            }
        }else if(obj[0]=='end'){
            if(obj[1] == 'ok'){
                var str = '';
                $.each(Object.keys(errorarr),function(i){
                    str+=Object.keys(errorarr)[i]+'['+errorarr[Object.keys(errorarr)[i]]+']<br/>';
                });
                
                Swal.fire({
                    icon: 'success',
                    title: '일괄계약완료',
                    width:'900px',
                    html: '<div class="flexcol"><div style="font-size:15px;">미계약 수급자 내역: '+(str.split('<br/>').length-1)+' 건</div><div style="font-size:15px; height:300px; overflow:scroll; width:100%;">'+str+'</div></div>',
                    allowOutsideClick: false,
                }).then((result) => {
                    if (result.isConfirmed) {
                        errorcount = 0;
                        window.parent.location.reload();
                    }else{
                        errorcount = 0;
                    }
                });
            }else{
                Swal.fire({
                    icon: 'error',
                    title: '일괄계약실패',
                    html: '<div>프로그램 오류</div>',
                    allowOutsideClick: false,
                }).then((result) => {
                    if (result.isConfirmed) {
                        errorcount = 0;
                        window.parent.location.reload();
                    }else{
                        errorcount = 0;
                    }
                    
                });
            }
        }
    }

    function rentcontractadd_cef_re(obj){
        console.log(obj)
        if(obj[0]=='now'){
            let datasplit = obj[1].split(';');
            $('.conaddcnt').html(datasplit[0]);
            $('.conaddcnt2').html(datasplit[1]+'('+datasplit[2]+')');
        }else if(obj[0]=='end'){
            if(obj[1] == 'ok'){
                var str = '';
                $.each(Object.keys(errorarr),function(i){
                    str+=Object.keys(errorarr)[i]+'['+errorarr[Object.keys(errorarr)[i]]+']<br/>';
                });
                
                Swal.fire({
                    icon: 'success',
                    title: '일괄계약완료',
                    width:'900px',
                    html: '<div class="flexcol"><div style="font-size:15px;">미계약 수급자 내역: '+(str.split('<br/>').length-1)+' 건</div><div style="font-size:15px; height:300px; overflow:scroll; width:100%;">'+str+'</div></div>',
                    allowOutsideClick: false,
                }).then((result) => {
                    if (result.isConfirmed) {
                        errorcount = 0;
                        window.parent.location.reload();
                    }else{
                        errorcount = 0;
                    }
                });
            }else{
                Swal.fire({
                    icon: 'error',
                    title: '일괄계약실패',
                    html: '<div>프로그램 오류</div>',
                    allowOutsideClick: false,
                }).then((result) => {
                    if (result.isConfirmed) {
                        errorcount = 0;
                        window.parent.location.reload();
                    }else{
                        errorcount = 0;
                    }
                    
                });
            }
        }else if(obj[0]=="rentcontract2"){
            datasplit=obj[1].split(";");
            if(datasplit[0]=='y'&&datasplit[4]!='cok'){
                $.ajax({
                    url: "/rentcontract",
                    data: "id=" + uid + "&company="+company+ "&key="+datasplit[6]+ "&bcode="+datasplit[2]+ "&edate2="+ymdformat(datasplit[3])+ "&chk="+datasplit[4]+ "&num="+datasplit[5],
                    type: 'POST',
                    dataType: "JSON",
                    success: function (result) {
                        if(result){
                                if(datasplit[4]=='cok'&&datasplit[6]=='n'){
                                    $.each(datasplit[2],function(i){
                                        if(datasplit[2][i].includes('|')){
                                            buybcode2=datasplit[2][i].split('|');
                                            $.each(buybcode2,function(x){
                                                $.ajax({
                                                    url:"/bcodelistmodify",
                                                    data:"company="+company+"&buybcode="+buybcode2[x].replace(/ /g,'')+"&contractselect=ok" + "&buycode="+datasplit[5],
                                                    type:'POST',
                                                    dataType:"JSON",
                                                    async:false,
                                                    error : function(error) {
                                                        console.log(error);
                                                        },
                                                        success:function(results){
                                                            if(results)console.log(results);
                                                        },complete: () => {
                                                            console.log('a');
                                                        }
                                                })
                                                });
                                            
                                                }else{
                                                    sleep(i*1000).then(() => 
                                                    $.ajax({
                                                        url:"/bcodelistmodify",
                                                        data:"company="+company+"&buybcode="+datasplit[2]+"&contractselect=ok" +"&buycode="+datasplit[5],
                                                        type:'POST',
                                                        dataType:"JSON",
                                                        //async:false,
                                                        success:function(results){
                                                            if(results)console.log(results);
                                                        }
                                                    })
                                                    );
                                                }
                                    });
                                }
                            }
                        }
                    });
                }else if(datasplit[0]=='n'){
                    errorcount++;
                    errorarr[datasplit[2]+datasplit[3]] = datasplit[1]+((datasplit[4]!=undefined)?'(담당자:'+datasplit[4]+')':'');
                    console.log('errorarr:'+errorarr);
                }
        }
        
    }
    
    function allchk(x, y) {
        // if ($(x).is(":checked")) $("input[name=" + y + "]").prop("checked", true); else $("input[name=" + y + "]").prop("checked", false);
        if ($(x).is(":checked")) {
            if (y === 'chk') {
                $("input[name=" + y + "]").prop("checked", false);
                if ('<%=company%>' === '태성케어') {
                    $("input[name=" + y + "]").slice(0, 500).prop("checked", true);
                } else {
                    $("input[name=" + y + "]").slice(0, 100).prop("checked", true);
                }
            } else {
                $("input[name=" + y + "]").prop("checked", true);
            }
        } else {
            $("input[name=" + y + "]").prop("checked", false);
        }
    }
    
    function rentadd_click(x){
        $('.rentadd_checkbox').not($(x)).prop('checked',false);
    }

    async function ordermodify_client_get_history(name,number,obj,rnum,onum){
        return axios({
            method:'post',
            url:'/OrdermodifyClientGetHistory',
            data:{
                company:'<%=company%>',
                name:name,
                number:number
            }
        }).then(res=>{
            const data = res.data;
            return [data,obj,rnum,onum];
        });
    }

    function date_now(){
        var now = new Date();
        var year= now.getFullYear();
        var mon = (now.getMonth()+1)>9 ? ''+(now.getMonth()+1) : '0'+(now.getMonth()+1);
        var day = now.getDate()>9 ? ''+now.getDate() : '0'+now.getDate();
        var time = now.getHours()+':'+now.getMinutes()+':'+now.getSeconds();
        var chan_val = year+'-'+mon+'-'+day;
        return chan_val
    }
    let res_chk_cnt = 0;
    let req_chk_cnt = 0;
    var rchk = '';
    var rchkcnt = 0;
    var allarr = [];
    var chk_val = '';
    socket.on('go_lookup_res', async function(data) {
        res_chk_cnt++;
        console.log(res_chk_cnt,req_chk_cnt);
        if(res_chk_cnt==req_chk_cnt){
            socket.disconnect();
            (async()=>{

            await delay(2000);
            let chk_cnt = 0;

            $.each(rchk,function(i){
                if(rchk.eq(i).is(':checked')){
                    chk_cnt++;
                    let rent_add_name = $(this).parent().next().text().replace(/ /g,'');
                    let rent_add_number = $(this).parent().next().next().text().replace(/ /g,'');
                    let h_ranker = '';
                    let h_rcgt = '';
                    let h_regident = '';
                    let rent_add_end = $(this).parents('tr').children('td').eq(-2).text();
                    let rnum = $(this).parent().prev().prev().val();
                    let onum = $(this).parent().prev().val();
                    ordermodify_client_get_history(rent_add_name,rent_add_number,rent_add_end,rnum,onum).then(res2=>{
                        if(res2[0].code==200){
                            console.log(res2)
                            console.log("???",res2[1])
                            let rendp = new Date(res2[1]);
                            let year2 = rendp.getFullYear();
                            let mon2 = (rendp.getMonth() + 1) > 9 ? '' + (rendp.getMonth() + 1) : '0' + (rendp.getMonth() + 1);
                            let rend2 = rendp.getDate() > 9 ? '' + rendp.getDate() : '0' + rendp.getDate();
                            let renddate = year2+'-'+mon2+'-'+rend2;
                            let rcgt_target = res2[0].data[0].rcgt;
                            console.log(rcgt_target)
                            if(rcgt_target==""){
                            }else if(new Date(rcgt_target.split('~')[1].replace(/ /g,''))<=new Date(renddate)){
                                // let rcgt_target_split = new Date(rcgt_target.split('~')[1].replace(/ /g,''));
                                // rcgt_target_split.setDate(rcgt_target_split.getDate() + 1);
                                // let rcgt_year = rcgt_target_split.getFullYear();
                                // let rcgt_mon = (rcgt_target_split.getMonth() + 1) > 9 ? '' + (rcgt_target_split.getMonth() + 1) : '0' + (rcgt_target_split.getMonth() + 1);
                                // let rcgt_day = rcgt_target_split.getDate() > 9 ? '' + rcgt_target_split.getDate() : '0' + rcgt_target_split.getDate();
                                // let rcgt_date = rcgt_year+rcgt_mon+rcgt_day;
                                h_ranker = res2[0].data[0].rankernext;
                                // h_rcgt = rcgt_date;
                                h_rcgt = res2[0].data[0].rcgtnext.split('~')[0].replace(/ |-/g,'');
                                h_regident = res2[0].data[0].regident.replace(/ |-/g,'');
                            }else{
                                h_ranker = res2[0].data[0].ranker.replace("등급","");
                                h_rcgt = res2[0].data[0].rcgt.split('~')[0].replace(/ |-/g,'');
                                h_regident = res2[0].data[0].regident.replace(/ |-/g,'');
                                
                            }
                        }
                        $.ajax({
                            url: "/renttodaycontract",
                            data: "rnum=" + res2[2] + "&company=" + company,
                            type: 'POST',
                            dataType: "JSON",
                            async:false,
                            success: function (result) {
                                if(result){
                                    var bchk = result.data[0].class;
                                    if(bchk=='null'||bchk==null)bchk='y';
                                    var bchkarr = [bchk];
                                    if(bchk.includes(bchk))bchkarr = bchk.split(',');
                                    $.each(bchkarr,function(i){
                                        if(bchkarr[i]!='y'){
                                            
                                            console.log(result.data[0].target);
                                            var name = result.data[0].name;
                                            var number = result.data[0].number;
                                            var guardname = result.data[0].guardname;
                                            var guardtarget = result.data[0].guardtarget;
                                            if(guardtarget==''||guardtarget==null)guardtarget='본인';
                                            var phone = result.data[0].phone;
                                            var bcode = result.data[0].buybcode;
                                            var rstart = result.data[0].rentstart;
                                            var rend = result.data[0].rentend;
                                            let rendp = new Date(rend);
                                            rendp.setDate(rendp.getDate() + 1);
                                            var year2 = rendp.getFullYear();
                                            var mon2 = (rendp.getMonth() + 1) > 9 ? '' + (rendp.getMonth() + 1) : '0' + (rendp.getMonth() + 1);
                                            var rend2 = rendp.getDate() > 9 ? '' + rendp.getDate() : '0' + rendp.getDate();
                                            var renddate = year2+'-'+mon2+'-'+rend2;
                                            var pcodelist = [];
                                            var productnamelist = [];
                                            var productnamelist2 = [];
                                            if(result.data[0].productname.includes(',')){
                                                var pcodelistsplit = result.data[0].productname.split(',');
                                                $.each(pcodelistsplit,function(y){
                                                    pcodelist.push(pcodelistsplit[y].split('|')[0]);
                                                    productnamelist.push(pcodelistsplit[y].split('|')[1]);
                                                    $.ajax({
                                                        url: "/productlist",
                                                        data: "pcode=" + pcodelistsplit[y].split('|')[0],
                                                        type: 'POST',
                                                        dataType: "JSON",
                                                        async:false,
                                                        success: function (result) {
                                                            if(result){
                                                                productnamelist2.push(result.result[0].name);
                                                            }
                                                        }
                                                    });
                                                });
                                            }else{
                                                pcodelist.push(result.data[0].productname.split('|')[0]);
                                                productnamelist.push(result.data[0].productname.split('|')[1]);
                                                $.ajax({
                                                    url: "/productlist",
                                                    data: "pcode=" + result.data[0].productname.split('|')[0],
                                                    type: 'POST',
                                                    dataType: "JSON",
                                                    async:false,
                                                    success: function (result) {
                                                        if(result){
                                                            productnamelist2.push(result.result[0].name);
                                                        }
                                                    }
                                                });
                                            }
                                            allarr.push(name+';'+number+';'+guardname+';'+guardtarget+';'+phone+';'+bcode+";"+productnamelist2+";"+pcodelist+";"+renddate+";;;;;;;;;;;;"+chk_val+";"+res2[3]+";"+res2[2]+';'+h_ranker+';'+h_rcgt+';'+h_regident);
                                        }
                                    });
                                }
                            }
                        });
                        // console.log('i',i)
                        // console.log(chk_cnt);
                        // console.log(allarr.length)
                        if(chk_cnt==allarr.length){
                            $('.stitle').html('<br/>전체 계약 수급자 ['+rchkcnt+']명<br/>계약 [<span class="conaddcnt"></span>]명 진행중<br/>현재 계약 진행자 : <span class="conaddcnt2"></span>');
                            if(allarr.length<1){
                                Swal.fire({
                                    icon: 'error',
                                    title: '일괄계약실패',
                                    html: '<div>일괄계약대상없음 (비급여 계약대상건)</div>',
                                    allowOutsideClick: false,
                                    showCancelButton: true,
                                    confirmButtonColor: '#3085d6',
                                    cancelButtonColor: '#d33',
                                    confirmButtonText: '확인',
                                    cancelButtonText: '취소',
                                }).then((result) => {
                                    if (result.isConfirmed) {
                                        errorcount = 0;
                                        window.parent.location.reload();
                                    }
                                });
                            }else{
                                //socket.emit('login', {'name': uid});
                                //socket.emit('rentcontractadd', { 'name':uid, 'msg':allarr});
                                rentcontractadd_cef(allarr,rentcontractadd_cef_re)
                            }
                        }
                        
                    });
                }
            });

            })();
        }
    });

    function allstart() {
        // Swal.fire({
        //     icon: 'warning',
        //     title: '점검중입니다',
        //     text: '',
        // });
        // return 0;
        res_chk_cnt = 0;
        req_chk_cnt = 0;
        rchk = '';
        rchkcnt = 0;
        allarr = [];
        errorarr = {};
        errorcount = 0;
        chk_val = '';
        var rchkk = 0;
        $.each($('.rchk'),function(i){
            if($('.rchk').eq(i).is(':checked'))rchkk = 1;
        });
        if(rchkk==0){
            Swal.fire({
                icon: 'error',
                title: '선택된 연장계약이 없습니다.',
                text: '',
                didOpen: () => {
                    if(guide_chk==1){
                        guide_on_rent_3();
                    }
                },
                //showCancelButton: true,
            }).then((result) => {
                if (result.isConfirmed) {
                    return 0;
                }
            });
        }else{
            Swal.fire({
                icon: 'question',
                title: '일괄연장하시겠습니까?<br/>(연장종류를 선택해주세요)',
                // text:'수급자 최대유효기간까지 연장진행',
                width:'500px',
                html:`
                    <div class="flexcols">
                        <div class="flex"><div><input type="checkbox" class="rentadd_checkbox" value="y" onclick="rentadd_click(this);"></div>&nbsp;&nbsp;<div class="rentadd_txt">수급자 최대 유효기간까지 연장</div></div>
                        <div class="flex"><div><input type="checkbox" class="rentadd_checkbox" value="B" onclick="rentadd_click(this);"></div>&nbsp;&nbsp;<div class="rentadd_txt">수급자 현재 유효기간까지 연장</div></div>
                        <div class="flex"><div><input type="checkbox" class="rentadd_checkbox" value="A" onclick="rentadd_click(this);"></div>&nbsp;&nbsp;<div class="rentadd_txt">수급자 현재 적용구간까지 연장</div></div>
                    </div>
                `,
                allowOutsideClick: false,
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: '계약',
                cancelButtonText: '취소',
                didOpen: () => {
                    if(guide_chk==1){
                        guide_on_rent_3();
                    }
                },
                preConfirm:()=>{
                    let ischk = 0;
                    $('.rentadd_checkbox').each(function(index){
                        if($(this).is(':checked')){
                            ischk = 1;
                            return false
                        }
                    });
                    if(ischk==0){
                        Swal.showValidationMessage(`
                            <div style="font-weight:bold; font-size:18px;">미선택: 일괄 연장기간을 선택해주세요</div>
                        `);
                        return false
                    }
                }
            }).then((result) => {
                if (result.isConfirmed) {
                    $('.rentadd_checkbox').each(function(index){
                        if($(this).is(':checked')){
                            console.log('checked:',$(this).val());
                            chk_val = $(this).val();
                        }
                    });
                    console.log(chk_val);
                    if(guide_chk==1){
                        guide_on_rent_4();
                    }
                    rchk = $('.rchk');
                    $.each(rchk,function(i){
                        if(rchk.eq(i).is(':checked'))rchkcnt++;
                    });

                    Swal.fire({
                        title: '연장계약 진행중입니다.',
                        html:'<div class="stitle">계약대상자 조회 생성중...</div>',
                        showCancelButton: true,
                        didOpen: () => {
                            Swal.showLoading();
                            socket.emit('disconnect2', {'name': uid});
                            socket.emit('login', {'name': uid});
                            console.log("callbacktext");
                            let callback_cnt = 0;
                            
                            $.each(rchk,function(i){
                                if(rchk.eq(i).is(':checked')){
                                    req_chk_cnt++;
                                    //chk_cnt++;
                                    let rent_add_name = $(this).parent().next().text().replace(/ /g,'');
                                    let rent_add_number = $(this).parent().next().next().text().replace(/ /g,'');
                                    setTimeout(() =>
                                        socket.emit('go_lookup_req', { 'name':uid, 'cname':rent_add_name, 'cnumber':rent_add_number, 'agent':'1' , 'target':'', 'company':company, 'date':date_now().replace(/-/g,'') },(response)=>{
                                            console.log('callback',response);
                                        })
                                    , 2000 * i);
                                }
                            });
                        },
                        allowOutsideClick: false,
                    }).then((result) => {
                        if (result.isConfirmed) {
                            location.reload();
                        }else{
                            // socket.emit('fkill', { 'name':uid, 'msg':''});
                            fkill();
                        }
                    });
                }else{
                    if(guide_chk==1){
                        guide_on_rent_4();
                    }
                }
            });
        }
    }

    function cleantable2(x){
        $.ajax({
         type: 'POST',
         url: '/cleantable2',
         data: "company="+company,
         dataType: "JSON", 
         success: function (data) {
             if(data.result.length>0){
                if(x=='nomedi'){
                    $('.companyname').val(data.result[0].companyname);
                    $('.companynumber').val(data.result[0].companynumber);
                }else if(x=='okmedi'){
                    $('.companyname').val('<%=company%>');
                    $('.companynumber').val('<%=bankinfo[0].companynum%>');
                }
                $('.meditxt').val(data.result[0].meditxt).prop("selected", true);
                $('.mediname').val(data.result[0].mediname);
                $('.size').val(data.result[0].size);
             }else if(data.result==''){
                
             }

             }
            
            });
        }
    
    function cleanselect(x){
        if($(x).val()=='nomedi'){
            cleantable2($(x).val());
            $('.medi').show();
        }else if($(x).val()=='okmedi'){
            cleantable2($(x).val());
            $('.medi').show();
        }
    }
    
    async function sloading(){
        return await Swal.showLoading();
    }

    function delay(cnt) {
        return new Promise(resolve => setTimeout(resolve, cnt));
    }
    
    function get_clean_history(key){
        return $.ajax({
            url:"/getcleanhistory",
            type:'POST',
            datatype:'json',
            data:{
                'key':key
            },
            async:false,
            success:function(res){
                if(res.code==200){
                    return res.data[0].cnum;
                }else{
                    return '';
                }
            }
        })
    }
    
    function allstart2(){
        // Swal.fire({
        //     icon: 'warning',
        //     title: '보건복지부 사회보장정보시스템의 서비스 중단',
        //     text: '24.3.27.(수) 19:00 ~ 24.4.1.(월) 08:00 복지용구 계약 전산업무 중단',
        // });
        // return 0;
        errorarr = {};
        errorcount = 0;
        var allarr = [];
        var mchkk = 0;
        $.each($('.mchk'),function(i){
            if($('.mchk').eq(i).is(':checked'))mchkk = 1;
        });
        if(mchkk==0){
            Swal.fire({
                icon: 'error',
                title: '선택된 미계약이 없습니다.',
                text: '',
                //showCancelButton: true,
            }).then((result) => {
                if (result.isConfirmed) {
                    if(guide_chk==1){
                        guide_on_buy_4();
                    }
                    return 0;
                }
            });
        }else{
            Swal.fire({
                icon: 'question',
                title: '일괄계약하시겠습니까?',
                html:`
                <div class="flexcol" style="font-weight:bold;">
                    <div style="color:#ff0000;">비급여, 바코드미입력, 부분계약건, 회수건 제외</div>
                    <div>*신규 품목은 소독절차를 자동생략합니다.</div>
                    <br/>
                    <div class="clean_area" style="display:none;">
                        <div>대여제품 소독구분</div>
                        <div>
                            <select class="medichk" style="width:100px; height:40px;" onchange="cleanselect(this);">
                                <option value="okmedi">자체</option>
                                <option value="nomedi">위탁</option>
                                <option value="same">동일인</option>
                            </select>
                        </div>
                        <div style="" class="medi flexcol">
                            <span>소독업체명</span>
                            <span>
                                <input class="companyname" type="text" style="height:30px;" onchange="cleantable(this);">
                            </span>
                            <span>사업자등록번호</span>
                            <span>
                                <input type="text" class="companynumber" style="height:30px;" onchange="cleantable(this);">
                            </span>
                            <span>소독종류</span>
                            <span>
                                <select class="meditxt" style="height:30px;" onchange="cleantable(this);">
                                    <option value="약물소독">약물소독</option>
                                    <option value="증기소독">증기소독</option>
                                </select>
                            </span>
                            <span>약품명</span>
                            <span>
                                <input type="text" class="mediname" style="height:30px;" onchange="cleantable(this);">
                            </span>
                            <span>사용량</span>
                            <span>
                                <input type="text" class="size" style="height:30px;" onchange="cleantable();">
                            </span>
                        </div>
                    </div>
                </div>
                `,
                width:'400px',
                allowOutsideClick: false,
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: '계약',
                cancelButtonText: '취소',
                didOpen: ()=>{
                    let rchk = $('.mchk');
                    let rent_cnt = 0;
                    $.each(rchk,function(i){
                        if(rchk.eq(i).is(':checked')){
                            if(rchk.eq(i).parent('td').prev().prev().val()!='null'){
                                rent_cnt++;
                            }
                        }
                    });
                    
                    if(guide_chk==1){
                        guide_on_buy_3();
                    }
                    if(rent_cnt>0){
                        $('.clean_area').show();
                        cleantable2('okmedi');
                    }
                    
                },
                preConfirm: ()=>{}
            }).then((result) => {
                if (result.isConfirmed) {
                    if(guide_chk==1){
                        guide_on_rent_4();
                    }
                    var rchk = $('.mchk');
                    var rchkcnt = 0;
                    var medichk = $('.medichk').val();
                    var companyname = $('.companyname').val();
                    var companynumber = $('.companynumber').val();
                    var meditxt = $('.meditxt').val();
                    var mediname = $('.mediname').val();
                    var size = $('.size').val();
                    //console.log(medichk);
                    $.each(rchk,function(i){
                        if(rchk.eq(i).is(':checked'))rchkcnt++;
                    });
                    
                    Swal.fire({
                        title: '급여계약 진행중입니다.',
                        html:'<div class="stitle">계약대상자 생성중...</div>',
                        showCancelButton: true,
                        didOpen: () => {
                            sloading();
                        },
                        allowOutsideClick: false,
                    }).then((result) => {
                        if (result.isConfirmed) {
                        }else{
                            // socket.emit('disconnect2', {'name': uid});
                            // socket.emit('login', {'name': uid});
                            // socket.emit('fkill', { 'name':uid, 'msg':''});
                            fkill();
                        }
                    });
                    (async()=>{
                        await delay(300);
                        let con_chk_cnt = 0;
                        let history_get_cnt = 0;
                        $.each(rchk,function(i){
                            if(rchk.eq(i).is(':checked')){
                                var rnum = $(this).parent().prev().prev().prev().val();
                                var rkey = $(this).parent().prev().prev().val();
                                var dstatus = $(this).parent().prev().prev().val();
                                let number = $(this).parent().prev().prev().prev().prev().val();
                                let name = $(this).parent().next().text();
                                let con_date = $(this).parent().next().next().next().next().text();
                                let h_ranker = '';
                                let h_rcgt = '';
                                let h_regident = '';
                                con_chk_cnt++;
                                ordermodify_client_get_history(name,number,con_date,rkey,rnum).then(res2=>{
                                    history_get_cnt++;
                                    let rcgt_target = '';
                                    if(res2[0].code==200)rcgt_target = res2[0].data[0].rcgt;
                                    
                                    if(rcgt_target==""||rcgt_target==null){
                                        console.log("/",rcgt_target)
                                    }else if(new Date(rcgt_target.split('~')[1].replace(/ /g,''))<=new Date(res2[1])){
                                        h_ranker = res2[0].data[0].rankernext;
                                        h_rcgt = res2[0].data[0].rcgtnext.split('~')[0].replace(/ |-/g,'');
                                        h_regident = res2[0].data[0].regident.replace(/ |-/g,'');
                                    }else{
                                        h_ranker = res2[0].data[0].ranker.replace("등급","");
                                        h_rcgt = res2[0].data[0].rcgt.split('~')[0].replace(/ |-/g,'');
                                        h_regident = res2[0].data[0].regident.replace(/ |-/g,'');
                                    }
                                    
                                    console.log(h_ranker,h_rcgt,h_regident);
                                    $.ajax({
                                        url: "/moneytodaycontract",
                                        data: "rnum=" + rnum + "&company=" + company,
                                        type: 'POST',
                                        dataType: "JSON",
                                        async:false,
                                        success: function (result) {
                                            if(result.code==200){
                                                var bchk = result.data[0].buychk;
                                                if(bchk=='null'||bchk==null)bchk='y';
                                                var bchkarr = [bchk];
                                                if(bchk.includes(','))bchkarr = bchk.split(',');
                                                // if(result.data[0].target!='기초'){
                                                    var name = result.data[0].name;
                                                    var number = result.data[0].number;
                                                    var guardname = result.data[0].guardname;
                                                    var manager = result.data[0].manager;
                                                    var guardtarget = result.data[0].guardtarget;
                                                    if(guardtarget==''||guardtarget==null)guardtarget='본인';
                                                    var phone = result.data[0].phone1;
                                                    var bcode = result.data[0].buybcode;
                                                    var cdate = result.data[0].orderdate.split(' ')[0].replace(/-/g,'');
                                                    //var rstart = result.data[0].rentstart;
                                                    var bcodelist = [];
                                                    var pcodelist = [];
                                                    var productnamelist = [];
                                                    var productnamelist2 = [];
                                                    var cdatelist = [];
                                                    if(result.data[0].chk=='vok'){
                                                        errorcount++;
                                                        errorarr[result.data[0].name+result.data[0].number] = '부분계약건은 별도계약처리'+'(담당자:'+manager+')';
                                                        allarr.push(name+';'+number+';'+'nob');
                                                    }else if(result.data[0].buybcode!=''&&!result.data[0].buybcode.includes('direct')&&result.data[0].buybcode!=null&&!result.data[0].buybcode.includes('미입력')&&result.data[0].status!='back'){
                                                        if(result.data[0].rentproduct==''||result.data[0].rentproduct==null){
                                                            if(result.data[0].product.replace(/(블루,레드)|(네이비,베이지)/g,'').replace(/\(오션블루, 버건디\)/g,'').includes(',')){
                                                                result.data[0].product = result.data[0].product.replace(/(블루,레드)|(네이비,베이지)/g,'').replace(/\(오션블루, 버건디\)/g,'');
                                                                var pcodelistsplit = result.data[0].product.split(',');
                                                                var bcodelistsplit = result.data[0].buybcode.split(',');
                                                                $.each(pcodelistsplit,function(y){
                                                                    if(bchk[y]!='y'){
                                                                        console.log(result.data[0].name);
                                                                        if(bcodelistsplit[y].includes('|')){
                                                                            $.each(bcodelistsplit[y].split('|'),function(i){
                                                                                pcodelist.push(pcodelistsplit[y].split('|')[0]);
                                                                                bcodelist.push(bcodelistsplit[y].split('|')[i]);
                                                                                productnamelist.push(pcodelistsplit[y].split('|')[1]);
                                                                                cdatelist.push(result.data[0].orderdate.split(' ')[0].replace(/-/g,''));
                                                                                productnamelist2.push(all_product_list[pcodelistsplit[y].split('|')[0]]);
                                                                                // $.ajax({
                                                                                //     url: "/productlist",
                                                                                //     data: "pcode=" + pcodelistsplit[y].split('|')[0],
                                                                                //     type: 'POST',
                                                                                //     dataType: "JSON",
                                                                                //     async:false,
                                                                                //     success: function (result) {
                                                                                //         if(result){
                                                                                //             productnamelist2.push(result.result[0].name);
                                                                                //             console.log(productnamelist2);
                                                                                //         }
                                                                                //     }
                                                                                // });
                                                                            });
                                                                        }else{
                                                                            bcodelist.push(bcodelistsplit[y]);
                                                                            pcodelist.push(pcodelistsplit[y].split('|')[0]);
                                                                            productnamelist.push(pcodelistsplit[y].split('|')[1]);
                                                                            cdatelist.push(result.data[0].orderdate.split(' ')[0].replace(/-/g,''));
                                                                            productnamelist2.push(all_product_list[pcodelistsplit[y].split('|')[0]]);
                                                                            // $.ajax({
                                                                            //     url: "/productlist",
                                                                            //     data: "pcode=" + pcodelistsplit[y].split('|')[0],
                                                                            //     type: 'POST',
                                                                            //     dataType: "JSON",
                                                                            //     async:false,
                                                                            //     success: function (result) {
                                                                            //         if(result){
                                                                            //             productnamelist2.push(result.result[0].name);
                                                                            //             console.log(productnamelist2);
                                                                            //         }
                                                                            //     }
                                                                            // });
                                                                        }
                                                                    }
                                                                });
                                                            }else{
                                                                if(bchk!='y'){
                                                                    if(result.data[0].buybcode.includes('|')){
                                                                        $.each(result.data[0].buybcode.split('|'),function(i){
                                                                            pcodelist.push(result.data[0].product.split('|')[0]);
                                                                            bcodelist.push(result.data[0].buybcode.split('|')[i]);
                                                                            productnamelist.push(result.data[0].product.split('|')[1]);
                                                                            cdatelist.push(result.data[0].orderdate.split(' ')[0].replace(/-/g,''));
                                                                            productnamelist2.push(all_product_list[result.data[0].product.split('|')[0]]);
                                                                            // $.ajax({
                                                                            //     url: "/productlist",
                                                                            //     data: "pcode=" + result.data[0].product.split('|')[0],
                                                                            //     type: 'POST',
                                                                            //     dataType: "JSON",
                                                                            //     async:false,
                                                                            //     success: function (result) {
                                                                            //         if(result){
                                                                            //             productnamelist2.push(result.result[0].name);
                                                                            //             console.log(productnamelist2);
                                                                            //         }
                                                                            //     }
                                                                            // });
                                                                        });
                                                                    }else{
                                                                        pcodelist.push(result.data[0].product.split('|')[0]);
                                                                        bcodelist.push(result.data[0].buybcode.replace(/ /g,''));
                                                                        productnamelist.push(result.data[0].product.split('|')[1]);
                                                                        cdatelist.push(result.data[0].orderdate.split(' ')[0].replace(/-/g,''));
                                                                        productnamelist2.push(all_product_list[result.data[0].product.split('|')[0]]);
                                                                        // $.ajax({
                                                                        //     url: "/productlist",
                                                                        //     data: "pcode=" + result.data[0].product.split('|')[0],
                                                                        //     type: 'POST',
                                                                        //     dataType: "JSON",
                                                                        //     async:false,
                                                                        //     success: function (result) {
                                                                        //         if(result){
                                                                        //             productnamelist2.push(result.result[0].name);
                                                                        //             console.log(productnamelist2);
                                                                        //         }
                                                                        //     }
                                                                        // });
                                                                    }
                                                                }
                                                            }
                                                            allarr.push(name+';'+number+';'+guardname+';'+guardtarget+';'+phone+';'+bcodelist+";"+productnamelist+";"+pcodelist+";"+cdatelist+";"+productnamelist2+";;;;;;;;;;;;"+rnum+';;'+manager+';'+h_ranker+';'+h_rcgt+';'+h_regident);
                                                        }else{
                                                            if(result.data[0].rentproduct.includes(',')){
                                                                var pcodelistsplit = result.data[0].rentproduct.split(',');
                                                                var bcodelistsplit = result.data[0].buybcode.split(',');
                                                                console.log('bcodelistsplit:'+bcodelistsplit);
                                                                $.each(pcodelistsplit,function(y){
                                                                    pcodelist.push(pcodelistsplit[y].split('|')[0]);
                                                                    productnamelist.push(pcodelistsplit[y].split('|')[1]);
                                                                    bcodelist.push(bcodelistsplit[y]);
                                                                    productnamelist2.push(all_product_list[pcodelistsplit[y].split('|')[0]]);
                                                                    // $.ajax({
                                                                    //     url: "/productlist",
                                                                    //     data: "pcode=" + pcodelistsplit[y].split('|')[0],
                                                                    //     type: 'POST',
                                                                    //     dataType: "JSON",
                                                                    //     async:false,
                                                                    //     success: function (result) {
                                                                    //         if(result){
                                                                    //             productnamelist2.push(result.result[0].name);
                                                                    //             console.log(productnamelist2);
                                                                    //         }
                                                                    //     }
                                                                    // });
                                                                });
                                                            }else{
                                                                pcodelist.push(result.data[0].rentproduct.split('|')[0]);
                                                                productnamelist.push(result.data[0].rentproduct.split('|')[1]);
                                                                bcodelist.push(result.data[0].buybcode.replace(/ /g,''));
                                                                productnamelist2.push(all_product_list[result.data[0].rentproduct.split('|')[0]]);

                                                                // $.ajax({
                                                                //     url: "/productlist",
                                                                //     data: "pcode=" + result.data[0].rentproduct.split('|')[0],
                                                                //     type: 'POST',
                                                                //     dataType: "JSON",
                                                                //     async:false,
                                                                //     success: function (result) {
                                                                //         if(result){
                                                                //             productnamelist2.push(result.result[0].name);
                                                                //             console.log(productnamelist2);
                                                                //         }
                                                                //     }
                                                                // });
                                                            }
                                                            var now = new Date(result.data[0].rentstart);
                                                            var yesterday = new Date(now.setDate(now.getDate() - 1));
                                                            var yyear = yesterday.getFullYear();
                                                            var ymon = (yesterday.getMonth() + 1) > 9 ? '' + (yesterday.getMonth() + 1) : '0' + (yesterday.getMonth() + 1);
                                                            var yday = yesterday.getDate() > 9 ? '' + yesterday.getDate() : '0' + yesterday.getDate();
                                                            var cleandate = yyear+ymon+yday;
                                                            console.log('cleandate:'+cleandate);
                                                            let companynumber2 = '';
                                                            if(medichk=='nomedi'){
                                                                let clean_data = get_clean_history(rnum);
                                                                if(clean_data.responseJSON.code==200){
                                                                    companynumber2 = clean_data.responseJSON.data[0].cnum;
                                                                }
                                                            }
                                                            allarr.push(name+';'+number+';'+guardname+';'+guardtarget+';'+phone+';'+bcodelist+';'+productnamelist2+';'+pcodelist+';'+result.data[0].rentstart.replace(/-/g,'')+';'+result.data[0].rentend.replace(/-/g,'')+';'+companyname+';'+companynumber+';'+companynumber2+';'+meditxt+';'+mediname+';'+size+';'+medichk+';;;'+ cleandate+';'+ cleandate+';'+rnum+';'+rkey+';'+manager+';'+h_ranker+';'+h_rcgt+';'+h_regident);
                                                            console.log(allarr);
                                                        
                                                        }
                                                    }else{
                                                        errorcount++;
                                                        errorarr[result.data[0].name+result.data[0].number] = '바코드 미입력'+'(담당자:'+manager+')';
                                                        allarr.push(name+';'+number+';'+'nob');
                                                    }
                                                // }else if(result.data[0].target=='기초'||result.data[0].target=='의료급여'){
                                                //     //errorcount++;
                                                //     errorarr[result.data[0].name+result.data[0].number] = '기초/의료급여수급자는 별도 계약';
                                                //     allarr.push(result.data[0].name+';'+result.data[0].number+';'+'기초');
                                                // }
                                            }else{
                                                Swal.fire(
                                                    '시스템오류',
                                                    '',
                                                    'error'
                                                );
                                            }
                                        }
                                    });
                                    console.log(con_chk_cnt,history_get_cnt);
                                    if(con_chk_cnt==history_get_cnt){
                                        if(allarr.length>0){
                                            $('.stitle').html('<br/>전체 계약 수급자 ['+rchkcnt+']명<br/>계약 [<span class="conaddcnt"></span>]명 진행중<br/>현재 계약 진행자 : <span class="conaddcnt2"></span>');

                                            // socket.emit('disconnect2', {'name': uid});
                                            // socket.emit('login', {'name': uid});
                                            // socket.emit('moneycontract', { 'name':uid, 'msg':allarr});
                                            buy_rent_contract_cef(allarr,buy_rent_contract_cef_re);
                                        }else{
                                            Swal.fire({
                                                icon: 'error',
                                                title: '계약가능한 주문서가 없습니다',
                                                text: '',
                                                showCancelButton: true,
                                            }).then((result) => {
                                                if (result.isConfirmed) {
                                                    window.parent.location.reload();
                                                }
                                            });
                                        }
                                    }
                                })
                            }
                        });
                    })()
                }else{
                    if(guide_chk==1){
                        guide_on_rent_4();
                    }
                }
            
            });
        
        }
    }

    function allstart3(){
        Swal.fire({
            title: '일괄 계약 변경',
            html: `
            <div style="text-align: center; font-size: 17px;">
                <div style="text-align: center; font-weight: bold; margin-bottom: 15px;">
                    선택한 수급자의 계약종료일을 수가변경일(2025-05-01)<br/>
                    이전일 2025-04-30로 일괄 변경합니다.
                </div>
                <div style="margin-bottom: 10px;">
                    선택하신 인원: <span class="selectcnt" style="color: #000; font-weight: bold;"></span>명
                </div>
                <div style="margin-bottom: 20px;">
                    취소 일자: <span style="color: #000; font-weight: bold;">2025-04-30</span>
                </div>
                <div style="font-weight: bold; margin-top: 10px;">
                    진행하시겠습니까?
                </div>
            </div>
            `,
            width: "40%",
            icon: 'question',
            showCancelButton: true,
            confirmButtonText: '진행',
            cancelButtonText: '닫기',
            cancelButtonColor: 'rgb(221, 51, 51)',
            didOpen: () => {
                 // 선택된 체크박스 개수 계산
                var selectedCount = $('input[name="chk4"]:checked').length;
                $('.selectcnt').text(selectedCount);
                
                if(selectedCount === 0) {
                    Swal.fire({
                        title: '알림',
                        text: '선택된 항목이 없습니다.',
                        icon: 'warning',
                        confirmButtonText: '확인'
                    });
                    return;
                }
                
                // 선택된 항목의 값 수집
                var selectedItems = [];
                $('input[name="chk4"]:checked').each(function() {
                    selectedItems.push({
                        number: $(this).parent().parent().children('input:eq(0)').val(),
                        rnum: $(this).parent().parent().children('input:eq(1)').val()
                    });
                });
                
            }
        }).then((result) => {
            if(result.isConfirmed){
                var rchk = $('.mchk');
                var rchkcnt = 0;
                var medichk = $('.medichk').val();
                var companyname = $('.companyname').val();
                var companynumber = $('.companynumber').val();
                var meditxt = $('.meditxt').val();
                var mediname = $('.mediname').val();
                var size = $('.size').val();
                $.each(rchk,function(i){
                    if(rchk.eq(i).is(':checked'))rchkcnt++;
                });
                
                Swal.fire({
                    title: '급여계약 진행중입니다.',
                    html:'<div class="stitle">계약대상자 생성중...</div>',
                    showCancelButton: true,
                    didOpen: () => {
                        sloading();
                    },
                    allowOutsideClick: false,
                }).then((result) => {
                    if (result.isConfirmed) {
                    }else{
                        fkill();
                    }
                });
                (async()=>{
                    await delay(300);
                    let con_chk_cnt = 0;
                    let history_get_cnt = 0;
                    let ajaxRequests = [];
                    
                    $.each(rchk,function(i){
                        if(rchk.eq(i).is(':checked')){
                            var rnum = $(this).parent().prev().prev().prev().val();
                            var rkey = $(this).parent().prev().prev().val();
                            var dstatus = $(this).parent().prev().prev().val();
                            let number = $(this).parent().prev().prev().prev().prev().val();
                            let name = $(this).parent().next().text();
                            let con_date = $(this).parent().next().next().next().next().text();
                            let h_ranker = '';
                            let h_rcgt = '';
                            let h_regident = '';
                            con_chk_cnt++;
                            
                            let ajaxPromise = new Promise((resolve, reject) => {
                                $.ajax({
                                    url: "/moneytodaycontract",
                                    data: "rnum=" + rnum + "&company=" + company,
                                    type: 'POST',
                                    dataType: "JSON",
                                    async: true,
                                    success: function (result) {
                                        if(result.code==200){
                                            var bchk = result.data[0].buychk;
                                            if(bchk=='null'||bchk==null)bchk='y';
                                            var bchkarr = [bchk];
                                            if(bchk.includes(','))bchkarr = bchk.split(',');
                                                var name = result.data[0].name;
                                                var number = result.data[0].number;
                                                var guardname = result.data[0].guardname;
                                                var manager = result.data[0].manager;
                                                var guardtarget = result.data[0].guardtarget;
                                                if(guardtarget==''||guardtarget==null)guardtarget='본인';
                                                var phone = result.data[0].phone1;
                                                var bcode = result.data[0].buybcode;
                                                var cdate = result.data[0].orderdate.split(' ')[0].replace(/-/g,'');
                                                var bcodelist = [];
                                                var pcodelist = [];
                                                var productnamelist = [];
                                                var productnamelist2 = [];
                                                var cdatelist = [];
                                                if(result.data[0].chk=='vok'){
                                                    errorcount++;
                                                    errorarr[result.data[0].name+result.data[0].number] = '부분계약건은 별도계약처리'+'(담당자:'+manager+')';
                                                    allarr.push(name+';'+number+';'+'nob');
                                                }else if(result.data[0].buybcode!=''&&!result.data[0].buybcode.includes('direct')&&result.data[0].buybcode!=null&&!result.data[0].buybcode.includes('미입력')&&result.data[0].status!='back'){
                                                    if(result.data[0].rentproduct==''||result.data[0].rentproduct==null){
                                                        if(result.data[0].product.replace(/(블루,레드)|(네이비,베이지)/g,'').replace(/\(오션블루, 버건디\)/g,'').includes(',')){
                                                            result.data[0].product = result.data[0].product.replace(/(블루,레드)|(네이비,베이지)/g,'').replace(/\(오션블루, 버건디\)/g,'');
                                                            var pcodelistsplit = result.data[0].product.split(',');
                                                            var bcodelistsplit = result.data[0].buybcode.split(',');
                                                            $.each(pcodelistsplit,function(y){
                                                                if(bchk[y]!='y'){
                                                                    console.log(result.data[0].name);
                                                                    if(bcodelistsplit[y].includes('|')){
                                                                        $.each(bcodelistsplit[y].split('|'),function(i){
                                                                            pcodelist.push(pcodelistsplit[y].split('|')[0]);
                                                                            bcodelist.push(bcodelistsplit[y].split('|')[i]);
                                                                            productnamelist.push(pcodelistsplit[y].split('|')[1]);
                                                                            cdatelist.push(result.data[0].orderdate.split(' ')[0].replace(/-/g,''));
                                                                            productnamelist2.push(all_product_list[pcodelistsplit[y].split('|')[0]]);
                                                                        });
                                                                    }else{
                                                                        bcodelist.push(bcodelistsplit[y]);
                                                                        pcodelist.push(pcodelistsplit[y].split('|')[0]);
                                                                        productnamelist.push(pcodelistsplit[y].split('|')[1]);
                                                                        cdatelist.push(result.data[0].orderdate.split(' ')[0].replace(/-/g,''));
                                                                        productnamelist2.push(all_product_list[pcodelistsplit[y].split('|')[0]]);
                                                                    }
                                                                }
                                                            });
                                                        }else{
                                                            if(bchk!='y'){
                                                                if(result.data[0].buybcode.includes('|')){
                                                                    $.each(result.data[0].buybcode.split('|'),function(i){
                                                                        pcodelist.push(result.data[0].product.split('|')[0]);
                                                                        bcodelist.push(result.data[0].buybcode.split('|')[i]);
                                                                        productnamelist.push(result.data[0].product.split('|')[1]);
                                                                        cdatelist.push(result.data[0].orderdate.split(' ')[0].replace(/-/g,''));
                                                                        productnamelist2.push(all_product_list[result.data[0].product.split('|')[0]]);
                                                                    });
                                                                }else{
                                                                    pcodelist.push(result.data[0].product.split('|')[0]);
                                                                    bcodelist.push(result.data[0].buybcode.replace(/ /g,''));
                                                                    productnamelist.push(result.data[0].product.split('|')[1]);
                                                                    cdatelist.push(result.data[0].orderdate.split(' ')[0].replace(/-/g,''));
                                                                    productnamelist2.push(all_product_list[result.data[0].product.split('|')[0]]);
                                                                }
                                                            }
                                                        }
                                                        allarr.push(name+';'+number+';'+guardname+';'+guardtarget+';'+phone+';'+bcodelist+";"+productnamelist+";"+pcodelist+";"+cdatelist+";"+productnamelist2+";;;;;;;;;;;;"+rnum+';;'+manager+';'+h_ranker+';'+h_rcgt+';'+h_regident);
                                                    }else{
                                                        if(result.data[0].rentproduct.includes(',')){
                                                            var pcodelistsplit = result.data[0].rentproduct.split(',');
                                                            var bcodelistsplit = result.data[0].buybcode.split(',');
                                                            $.each(pcodelistsplit,function(y){
                                                                pcodelist.push(pcodelistsplit[y].split('|')[0]);
                                                                productnamelist.push(pcodelistsplit[y].split('|')[1]);
                                                                bcodelist.push(bcodelistsplit[y]);
                                                                productnamelist2.push(all_product_list[pcodelistsplit[y].split('|')[0]]);
                                                            });
                                                        }else{
                                                            pcodelist.push(result.data[0].rentproduct.split('|')[0]);
                                                            productnamelist.push(result.data[0].rentproduct.split('|')[1]);
                                                            bcodelist.push(result.data[0].buybcode.replace(/ /g,''));
                                                            productnamelist2.push(all_product_list[result.data[0].rentproduct.split('|')[0]]);
                                                        }
                                                        var now = new Date(result.data[0].rentstart);
                                                        var yesterday = new Date(now.setDate(now.getDate() - 1));
                                                        var yyear = yesterday.getFullYear();
                                                        var ymon = (yesterday.getMonth() + 1) > 9 ? '' + (yesterday.getMonth() + 1) : '0' + (yesterday.getMonth() + 1);
                                                        var yday = yesterday.getDate() > 9 ? '' + yesterday.getDate() : '0' + yesterday.getDate();
                                                        var cleandate = yyear+ymon+yday;
                                                        let companynumber2 = '';
                                                        if(medichk=='nomedi'){
                                                            let clean_data = get_clean_history(rnum);
                                                            if(clean_data.responseJSON.code==200){
                                                                companynumber2 = clean_data.responseJSON.data[0].cnum;
                                                            }
                                                        }
                                                        let endDate = "20250430";
                                                        if(company=="광명메디칼") {
                                                            endDate = "20250531";
                                                        }
                                                        allarr.push(name+';'+number+';'+guardname+';'+guardtarget+';'+phone+';'+bcodelist+';'+productnamelist2+';'+pcodelist+';'+result.data[0].rentstart.replace(/-/g,'')+';'+endDate+';'+companyname+';'+companynumber+';'+companynumber2+';'+meditxt+';'+mediname+';'+size+';'+medichk+';;;'+ cleandate+';'+ cleandate+';'+rnum+';'+rkey+';'+manager+';'+h_ranker+';'+h_rcgt+';'+h_regident);
                                                    }
                                                }else{
                                                    errorcount++;
                                                    errorarr[result.data[0].name+result.data[0].number] = '바코드 미입력'+'(담당자:'+manager+')';
                                                    allarr.push(name+';'+number+';'+'nob');
                                                }
                                        }else{
                                            Swal.fire(
                                                '시스템오류',
                                                '',
                                                'error'
                                            );
                                        }
                                        resolve();
                                    },
                                    error: function(err) {
                                        reject(err);
                                    }
                                });
                            });
                            
                            ajaxRequests.push(ajaxPromise);
                        }
                    });
                    
                    // 모든 Ajax 요청이 완료된 후 실행
                    Promise.all(ajaxRequests).then(() => {
                        if(allarr.length>0){
                            $('.stitle').html('<br/>전체 계약 수급자 ['+rchkcnt+']명<br/>계약 [<span class="conaddcnt"></span>]명 진행중<br/>현재 계약 진행자 : <span class="conaddcnt2"></span>');
                            rent_cancle_contract_cef(allarr,rentcontractadd_cef_re);
                        }else{
                            Swal.fire({
                                icon: 'error',
                                title: '계약가능한 주문서가 없습니다',
                                text: '',
                                showCancelButton: true,
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    window.parent.location.reload();
                                }
                            });
                        }
                    }).catch(error => {
                        console.error("Ajax 요청 중 오류 발생:", error);
                        Swal.fire({
                            icon: 'error',
                            title: '시스템 오류',
                            text: '데이터 처리 중 오류가 발생했습니다.',
                            showCancelButton: true,
                        });
                    });
                })()
            }
        });
    }

    function tdclick(x, y) {
        if (x == 'renttable' || x == 'zerotable' || x== 'deliverytable') var pagename = 'rentmodify';
        if (x == 'ordertable') var pagename = 'ordermodify';
        var tab_td = $('.' + x + ' tr td');//tb 테이블의 td들 불러오기
        if(x=='zerotable' || x== 'deliverytable'){
            x='renttable';
        }
        $(tab_td).click(async function () {
            if($(this).hasClass('chkbox')){
                //$(this).children('input').prop('checked',1);
            }
            if ($(this).parent().hasClass('tablemenu') != 1&&$(this).hasClass('chkbox') != 1) {
                //window.frames[x].location.reload();
                await $('.' + x).attr('src', "//localhost:802/" + pagename + "/1/<%=firstData%>/" + $(this).parent().children('input:eq(0)').val() + "/" + $(this).parent().children('input:eq(1)').val());
                window.frames[x].src = "//localhost:802/" + pagename + "/1/<%=firstData%>/" + $(this).parent().children('input:eq(0)').val() + "/" + $(this).parent().children('input:eq(1)').val();
                var targeted_popup_class = $('[data-popup-open' + y + ']').attr('data-popup-open' + y);
                $('[data-popup="' + targeted_popup_class + '"]').fadeIn(350);
                document.getElementById(x).onload = function() {
                    $('.'+x).contents().find('.reloading').css({'display':'none'});
                }
                window.frames[x].focus();
            
            
                                        
                //e.preventDefault();
            }
        });

        $(tab_td).hover(function () {
            if ($(this).parent().hasClass('tablemenu') != 1) $(this).parent().css({ 'border': '2px solid #000000', "cursor": "pointer" });
        }, function () {
            if ($(this).parent().hasClass('tablemenu') != 1) $(this).parent().css({ 'border': '1px solid #bebebe', "opacity": "1" });
        });
    }

    var g_obj = {
        bcode_sale_obj : {}
    }
    async function bcode_sale_obj_get(){
        return axios({
            method:'post',
            url:'/BcodeSaleObjGet',
            data:{
                company:company
            }
        }).then(res=>{
            const data = res.data;
            if(data.code==200){
                
                data.data.forEach(function(obj,index){
                    let salecnt = 5;
                    if(obj.name=='전동침대')salecnt=10;
                    else if(obj.name=='욕창예방 매트리스')salecnt=3;
                    let newsaledates = new Date(obj.date);
                    newsaledates.setFullYear(newsaledates.getFullYear() + salecnt);
                    newsaledates.setDate(newsaledates.getDate() - 1);
                    newsaledates = dateFormat(newsaledates);
                    g_obj.bcode_sale_obj[obj.pcode+'-'+obj.bcode] = newsaledates;
                });
                console.log("global_obj",g_obj)
            }
        });
    }
    
    function renttoday(x, y) {
        $.ajax({
            url: "/renttoday",
            data: "id=" + uid + "&company=" + company + "&sdate=" + x + "&edate=" + y,
            type: 'POST',
            dataType: "JSON",
            success: function (result) {
                $('.renttr').remove();
                var str = "";
                var cnt1 = 0;
                var cnt2 = 0;
                var zstr = "";
                if (result.data.length < 1) {
                    str = "<tr class='renttr' height='50' style='border:none;'><td style='font-weight:bold; font-size:17px;'>대여연장 내역이 없습니다</td></tr>";
                } else {
                    $.each(result.data, function (i) {
                        var rentdata = result.data[i];
                        var rentdatasplit = rentdata.split('|');
                        console.log("rentdatasplit",rentdatasplit)
                        if (rentdatasplit[4] == 'null') {
                            var deliveryend = '미배송';
                        } else {
                            var deliveryend = rentdatasplit[4];
                        }
                        let pcode = rentdatasplit[11];
                        let bcode = rentdatasplit[12];
                        if(rentdatasplit[10]!='기초'&&rentdatasplit[10]!='의료급여'){
                            cnt1++;
                            str += "<tr class='flex-around renttr renttr_1' style='height:45px;'><input type='hidden' value='" + rentdatasplit[7] + "'><input type='hidden' value='" + rentdatasplit[8] + "'><input type='hidden' value='" + rentdatasplit[9] + "'><td class='chkbox'><input type='checkbox' class='listcheckbox listcheckbox2 rchk' name='chk' placeholder='X' value='" + i + "'></td><td>" + rentdatasplit[0] + "</td><td>" + rentdatasplit[7].replace(/(\-)/g,'') + "</td><td style='width:20%;'>"+rentdatasplit[14]+"</td><!--td>" + rentdatasplit[2] + "</td--><!--td>" + rentdatasplit[10] + "</td--><td style='width:40%;'>" + rentdatasplit[3]
                            + "</td><td>"+rentdatasplit[13]+"</td><td style='background:#fff; color:#000000; height:30px;'>" + rentdatasplit[5].replace(/(\d{4})(\d{2})(\d{2})/g, '$1-$2-$3') + "</td><td style='background:#fff; color:#000000; height:30px;'>" + rentdatasplit[6].replace(/(\d{4})(\d{2})(\d{2})/g, '$1-$2-$3') + "</td><td style='background:#fff; color:#000000; height:30px;'>"+(g_obj.bcode_sale_obj[pcode+'-'+bcode]||"")+"</td></tr>";
                        }else{
                            cnt2++;
                            zstr += "<tr class='flex-around renttr zerotr' style='height:45px;'><input type='hidden' value='" + rentdatasplit[7] + "'><input type='hidden' value='" + rentdatasplit[8] + "'><input type='hidden' value='" + rentdatasplit[9] + "'><td class='chkbox'><input type='checkbox' class='listcheckbox listcheckbox2 rchk' name='chk3' placeholder='X' value='" + i + "'></td><td>" + rentdatasplit[0] + "</td><td>" + rentdatasplit[7].replace(/(\-)/g,'') + "</td><td style='width:20%;'>"+rentdatasplit[14]+"</td><!--td>" + rentdatasplit[2] + "</td--><!--td>" + rentdatasplit[10] + "</td--><td style='width:40%;' data-pcode='"+pcode+"' data-bcode='"+bcode+"'>" + rentdatasplit[3]
                            + "</td><td>"+rentdatasplit[13]+"</td><td style='background:#fff; color:#000000; height:30px;'>" + rentdatasplit[5].replace(/(\d{4})(\d{2})(\d{2})/g, '$1-$2-$3') + "</td><td style='background:#fff; color:#000000; height:30px;'>" + rentdatasplit[6].replace(/(\d{4})(\d{2})(\d{2})/g, '$1-$2-$3') + "</td><td style='background:#fff; color:#000000; height:30px;'>"+(g_obj.bcode_sale_obj[pcode+'-'+bcode]||"")+"</td></tr>";
                        }
                    });
                }
                $('#renttable').append(str);
                $('#zerotable').append(zstr);
                $('.rentcnt').text(cnt1);
                $('.zerocnt').text(cnt2);
                tdclick('renttable', 1);
                tdclick('zerotable', 1);
            }
        });
    }

    function truncateString(str, maxLength) {
        if (str.length > maxLength) {
            return str.substring(0, maxLength - 3) + "...";
        } else {
            return str;
        }
    }
    
    function moneytoday(x, y) {
        $.ajax({
            url: "/moneytoday",
            data: "id=" + uid + "&company=" + company + "&sdate=" + x + "&edate=" + y,
            type: 'POST',
            dataType: "JSON",
            success: function (result) {
                $('.moneytr').remove();
                var str = "";
                if (result.data.length < 1) {
                    str = "<tr class='moneytr' height='50' style='border:none;'><td style='font-weight:bold; font-size:17px;'>미계약 내역이 없습니다</td></tr>";
                } else {
                    $.each(result.data, function (i) {
                        var moneydata = result.data[i];
                        var moneydatasplit = moneydata.split('|');
                        var deliveryend = '';
                        if (moneydatasplit[3] == 'null') {
                            deliveryend = '미배송';
                        } else {
                            deliveryend = moneydatasplit[3];
                        }
                        let chk_icon = '<span class="material-icons" style="color:#ff0000">clear</span>';
                        if(moneydatasplit[11]=='vok')chk_icon='<span class="material-icons" style="color:#e2a219">star</span>';
                        else if(moneydatasplit[11]=='ok')chk_icon='<span class="material-icons" style="color:#00923d">done</span>';
                        let delivery = '';
                        if(moneydatasplit[10]=='end')delivery='배송완료';
                        else if(moneydatasplit[10]=='back')delivery='회수중';
                        else if(moneydatasplit[10]=='wait')delivery='배송대기';
                        else if(moneydatasplit[10]=='backend')delivery='회수완료';
                        str += "<tr class='flex-around moneytr' style='height:45px;'><input type='hidden' value='" + moneydatasplit[7] + "'><input type='hidden' value='" + moneydatasplit[8] + "'><input type='hidden' value='" + moneydatasplit[9] + "'><input type='hidden' value='" + moneydatasplit[10] + "'><td class='chkbox'><input type='checkbox' class='listcheckbox listcheckbox2 mchk' name='chk2' value='" + i + "'></td><td>" + moneydatasplit[0] + "</td><!--td>" + moneydatasplit[1] + "</td--><td style='width:30%;'>" + truncateString(moneydatasplit[2],25) + "</td><td style='background:#fff; color:#000000; height:30px;'>" + moneydatasplit[4].split(' ')[0] + "</td><!--td style='background:#fff; color:#000000; height:30px; font-size:13px;'>" + moneydatasplit[5] + "</td--><td>" + ((moneydatasplit[6]=='null')?'미입력':moneydatasplit[6]) + "</td><td>" + delivery + "</td><td>" + chk_icon + "</td></tr>";
                    });
                }
                $('.moneycnt').text(result.data.length);
                $('.moneytable').append(str);
                tdclick('ordertable', 2);
            }
        });
    }

    function moneytoday2(x, y) {
        let moneytoday2_link = '/moneytoday2';
        if(company=="건강한복지용구"){
            moneytoday2_link = '/moneytoday_custum';
        }else if(company=="광명메디칼"){
            moneytoday2_link = '/moneytoday_custum2';
        }
        $.ajax({
            url: moneytoday2_link,
            data: "id=" + uid + "&company=" + company + "&sdate=" + x + "&edate=" + y,
            type: 'POST',
            dataType: "JSON",
            success: function (result) {
                $('.moneytr2').remove();
                var str = "";
                if (result.data.length < 1) {
                    str = "<tr class='moneytr2' height='50' style='border:none;'><td style='font-weight:bold; font-size:17px;'>미계약 내역이 없습니다</td></tr>";
                } else {
                    $.each(result.data, function (i) {
                        var moneydata = result.data[i];
                        var moneydatasplit = moneydata.split('|');
                        var deliveryend = '';
                        if (moneydatasplit[3] == 'null') {
                            deliveryend = '미배송';
                        } else {
                            deliveryend = moneydatasplit[3];
                        }
                        let chk_icon = '<span class="material-icons" style="color:#ff0000">clear</span>';
                        if(moneydatasplit[11]=='vok')chk_icon='<span class="material-icons" style="color:#e2a219">star</span>';
                        else if(moneydatasplit[11]=='ok')chk_icon='<span class="material-icons" style="color:#00923d">done</span>';
                        let delivery = '';
                        if(moneydatasplit[10]=='end')delivery='배송완료';
                        else if(moneydatasplit[10]=='back')delivery='회수중';
                        else if(moneydatasplit[10]=='wait')delivery='배송대기';
                        else if(moneydatasplit[10]=='backend')delivery='회수완료';
                        str += "<tr class='flex-around moneytr2' style='height:45px;'>" +
                               "<input type='hidden' value='" + moneydatasplit[7] + "'>" +
                               "<input type='hidden' value='" + moneydatasplit[8] + "'>" +
                               "<input type='hidden' value='" + moneydatasplit[9] + "'>" +
                               "<input type='hidden' value='" + moneydatasplit[10] + "'>" +
                               "<td class='chkbox'><input type='checkbox' class='listcheckbox listcheckbox2 mchk' name='chk4' value='" + i + "'></td>" +
                               "<td>" + moneydatasplit[0] + "</td>" +
                               "<td>" + moneydatasplit[7] + "</td>" +
                               "<td style='width:30%;'>" + truncateString(moneydatasplit[2],25) + "</td>" +
                               "<td style='background:#fff; color:#000000; height:30px;'>" + moneydatasplit[3].split(' ')[0] + "</td>" +
                               "<td style='background:#fff; color:#000000; height:30px;'>" + moneydatasplit[4].split(' ')[0] + "</td>" +
                               "<!--td style='background:#fff; color:#000000; height:30px; font-size:13px;'>" + moneydatasplit[5] + "</td-->" +
                               "<td>" + ((moneydatasplit[6]=='null')?'미입력':moneydatasplit[6]) + "</td>" +
                               "<td>" + delivery + "</td>" +
                               "<td>" + chk_icon + "</td>" +
                               "</tr>";
                    });
                }
                $('.moneycnt2').text(result.data.length);
                $('.moneytable2').append(str);
                tdclick('ordertable', 2);
            }
        });
    }
    
    function deliverytoday(x, y) {
        $.ajax({
            url: "/deliverytoday",
            data: "id=" + uid + "&company=" + company + "&sdate=" + x + "&edate=" + y,
            type: 'POST',
            dataType: "JSON",
            success: function (result) {
                var str = "";
                var pname = [];
                if(result.code==200){
                    $('.stoptr').remove();
                    $.each(result.data,function(i){
                        pname = [];
                        if(result.data[i].product.includes(',')){
                            var psplit = result.data[i].product.split(',');
                            $.each(psplit,function(j){
                                pname.push(psplit[j].split('|')[1]);
                            });
                        }else{
                            pname.push(result.data[i].product.split('|')[1]);
                        }
                        str += '<tr class="stoptr flex-around" style="height:45px;"><input type="hidden" value="'+result.data[i].number+'"><input type="hidden" value="'+result.data[i].rnum+'"><td>'+result.data[i].name2+'</td><td>'+result.data[i].number+'</td><td>'+result.data[i].target+'</td><td>'+pname+'</td><td>'+result.data[i].stopdates+'</td><td>'+result.data[i].text+'</td></tr>'
                    });
                    $('.deliverytable').append(str);
                    tdclick('deliverytable', 1);
                }
                /*
                var str2 = "";
                var deliveryproduct = "";
                var deliverystate = "";
                $.each(result.data, function (i) {
                    var deliverydata = result.data[i];
                    var deliverydatasplit = deliverydata.split('|');
                    if (deliverydatasplit[8] == 'none') {
                        if (deliverydatasplit[6] == "wait") { deliverystate = "배송대기"; deliverystatecolor = "#ff0000;" } else { deliverystate = "배송완료"; deliverystatecolor = "#1f994e;" }
                        var deliverydatasplit2 = deliverydatasplit[3].split(',');
                        if (deliverydatasplit2.length > 1) {
                            deliveryproduct = String(deliverydatasplit2[0]) + "외" + String(deliverydatasplit2.length - 1) + "개";
                        } else {
                            deliveryproduct = deliverydatasplit2;
                        }
                        if (deliverydatasplit[7] == 'null') deliverydatasplit[7] = '미완료';
                        str2 += "<tr class='flex-around deliverytr' style='height:60px;'><td>" + deliverydatasplit[0] + "</td><td>" + deliverydatasplit[1] + "</td><td style='width:20%'>" + deliverydatasplit[2] + "</td><td style='width:20%'>" + deliveryproduct
                            + "</td><td style='color:" + deliverystatecolor + "'>" + deliverystate + "</td><td>" + deliverydatasplit[5] + "</td><td>" + deliverydatasplit[4] + "</td><td>" + deliverydatasplit[7] + "</td></tr>";
                    }
                });
                $('.deliverytable').append(str2);
                */
            }
        });
    }

    function table_search2(year,month,id,tr){
        let data = (year+"-"+month).split(" ");
        
        if (year == "" && month == "") {
            $("."+tr).show();
            return;
        }
        $("."+tr).hide();
        console.log(data);
        $("."+tr).filter(function (i, v) {
            var $t = $(this);
            for (var d = 0; d < data.length; ++d) {
                if ($t.is(":contains('" + data[d] + "')")||$t.is(":contains('" + data[d].toUpperCase() + "')")||$t.is(":contains('" + data[d].toLowerCase() + "')")) {
                    return true;
                }
            }
            return false;
        }).show();
    }

    function table_search(x,id,tr){
        console.log($(x)[0].value);
        var data = $(x)[0].value.split(" ");
        if ($(x)[0].value == "") {
            $("."+tr).show();
            return;
        }
        $("."+tr).hide();
        
        $("."+tr).filter(function (i, v) {
            var $t = $(this);
            for (var d = 0; d < data.length; ++d) {
                if ($t.is(":contains('" + data[d] + "')")||$t.is(":contains('" + data[d].toUpperCase() + "')")||$t.is(":contains('" + data[d].toLowerCase() + "')")) {
                    return true;
                }
            }
            return false;
        }).show();
        
    }
    
    function guide_toggle_on(x){
        guide_interval = setInterval(function() {
            x.fadeTo(500, 0.2,function(){
                $(x).css({"opacity":1});
            }).fadeTo(500, 1);
        }, 1000);
    }

    async function guide_toggle_off(guide_interval){
        await clearInterval(guide_interval);
    }

    function video_sign_url_get(video_name){
        $('.hanbang_video').remove();
        let str = `
            <video class="hanbang_video ${video_name}" width="1250px" height="800px" controls>
        `;
        fetch('/S3GetVideo?directory=HanBangVideo&bucketname=hanq&name='+video_name+'&type=webm') // 서버에서 서명된 URL을 가져오는 엔드포인트로 수정해야 합니다.
        .then(response => response.text())
        .then(url => {
            console.log(url)
            str+=`<source id='HanBang_video1' class="HanBang_video1" src="${url}" type="video/webm">`;
            str+=`
                </video>
            `;
            $('.video_area').append(str);
        })
        .catch(error => console.error('Error fetching signed URL:', error));
    }

    function guide_on_click(obj,video_name){
        video_sign_url_get(video_name);
        $(obj).addClass("guide_on");
        $('.guide_swal_button').not($(obj)).removeClass("guide_on");
        
    }

    function guide_show(){
        Swal.fire({
            width:"75%",
            icon: 'info',
            title: '화면 학습 선택',
            html: `
            <div class="guide_swal">
                <div class="guide_swal_button guide_on" onclick="guide_on_click(this,'HanBang_video1')">1.일괄대여연장</div>
                <div class="guide_swal_button" onclick="guide_on_click(this,'HanBang_video2')">2.기초대여연장</div>
                <div class="guide_swal_button" onclick="guide_on_click(this,'HanBang_video3')">3.일괄계약</div>
                <div class="guide_swal_button" onclick="guide_on_click(this,'HanBang_video4')">4.엑셀변환</div>
                <div class="guide_swal_button" onclick="guide_on_click(this,'HanBang_video5')">5.대여연장계약서출력</div>

                <!--div class="guide_swal_button" onclick="guide_on_rent()">1.일괄대여연장</div>
                <div class="guide_swal_button" onclick="guide_on_zrent()">2.일괄기초대여연장</div>
                <div class="guide_swal_button" onclick="guide_on_buy()">3.일괄계약</div>
                <div class="guide_swal_button" onclick="guide_on_excel()">4.엑셀변환</div-->
            </div>
            <br/>
            <div class="video_area" style="width:100%; height:900px; display:flex; justify-content:center;">
                
            </div>
            `,
            showConfirmButton:false,
            didOpen:()=>{
                video_sign_url_get("HanBang_video1");
            }
        });
    }

    function guide_on_rent(){
        Swal.close();
        $('.listcheckbox').prop('checked',false);
        guide_chk = 1;
        var targeted_guide_class = $('[data-guide-open]').attr('data-guide-open');
        $('[data-guide="' + targeted_guide_class + '"]').fadeIn(350);
        $('.containerbox1-1').css({"position":"relative","z-index":"9999999","background":"#fff"});
        $('body').append("<div class='guide_txt' style='top:55%'><div class='guide_txt_inner'><div>해당 위치에 대여연장내역이 표시됩니다.</div><div>내역을 클릭하여 상세정보를 확인할수있습니다.</div><div class='guide_next' onclick='guide_on_rent_1()'>다음></div></div></div>");
    }

    function guide_on_rent_1(){
        if($('.renttr_1').length>0){
            $('.guide_txt').remove();
            guide_toggle_on($('.rchk'));
            $('body').append("<div class='guide_txt' style='top:55%'><div class='guide_txt_inner'><div>일괄연장할 주문서를 선택해줍니다.</div><div class='guide_next' onclick='guide_on_rent_2()'>다음></div></div></div>");
        }else{
            guide_chk = 0;
            $('.guide_txt').remove();
            $('.containerbox1-1').css({"position":"relative","z-index":""});
            var targeted_guide_class = $('[data-guide-open]').attr('data-guide-open');
            $('[data-guide="' + targeted_guide_class + '"]').fadeOut(350);
            Swal.fire({
                icon: 'warning',
                title: '당월 연장 내역 없음',
            });
        }
    }

    function guide_on_rent_2(){
        let chk_len = 0;
        let total_len = $('.listcheckbox').length;
        $.each($('.listcheckbox'),function(i){
            if($('.listcheckbox').eq(i).is(':checked')==0){
                chk_len++;
            }
        });
        console.log(chk_len);
        if(chk_len==total_len){
            $('.guide_txt').remove();
            $('body').append("<div class='guide_txt' style='top:55%'><div class='guide_txt_inner'><div>선택하지않았습니다.</div><div>일괄연장할 주문서를 선택해주세요.</div><div class='guide_next' onclick='guide_on_rent_2()'>다음></div></div></div>");

        }else{
            $('.guide_txt').remove();
            guide_toggle_off(guide_interval);
            $('.containerbox1-1').css({"position":"relative","z-index":""});
            $('.allrent').css({"position":"relative","z-index":"9999999","background":"#fff"});
            guide_toggle_on($('.allrent'));
            $('body').append("<div class='guide_txt' style='top:55%'><div class='guide_txt_inner'><div>'선택일괄연장' 버튼을 클릭합니다.</div></div></div>");
        }
    }

    function guide_on_rent_3(){
        $('.guide_txt').remove();
        guide_toggle_off(guide_interval);
        var targeted_guide_class = $('[data-guide-open]').attr('data-guide-open');
        $('[data-guide="' + targeted_guide_class + '"]').fadeOut(350);
        $('.containerbox1-1,.containerbox1-2').css({"position":"relative","z-index":""});
        $('.allrent').css({"position":"relative","z-index":"1"});
        $('body').append("<div class='guide_txt' style='top:27%'><div class='guide_txt_inner'><div>일괄연장 확인창이 팝업되고 수급자 별 최대유효기간까지 자동연장합니다.</div><div>'계약' 버튼을 클릭합니다.</div></div></div>");
    }

    function guide_on_rent_4(){
        guide_chk = 0;
        $('.guide_txt').remove();
        var targeted_guide_class = $('[data-guide-open]').attr('data-guide-open');
        $('[data-guide="' + targeted_guide_class + '"]').fadeOut(350);
    }

    function guide_on_zrent(){
        Swal.close();
        $('.listcheckbox').prop('checked',false);
        guide_chk = 1;
        var targeted_guide_class = $('[data-guide-open]').attr('data-guide-open');
        $('[data-guide="' + targeted_guide_class + '"]').fadeIn(350);
        $('.containerbox1-2').css({"position":"relative","z-index":"9999999","background":"#fff"});
        $('body').append("<div class='guide_txt' style='top:55%'><div class='guide_txt_inner'><div>해당 위치에 기초대여연장내역이 표시됩니다.</div><div>내역을 클릭하여 상세정보를 확인할수있습니다.</div><div class='guide_next' onclick='guide_on_zrent_1()'>다음></div></div></div>");
    }

    function guide_on_zrent_1(){
        if($('.zerotr').length>0){
            $('.guide_txt').remove();
            guide_toggle_on($('.rchk'));
            $('body').append("<div class='guide_txt' style='top:55%'><div class='guide_txt_inner'><div>일괄연장할 주문서를 선택해줍니다.</div><div class='guide_next' onclick='guide_on_rent_2()'>다음></div></div></div>");
        }else{
            guide_chk = 0;
            $('.guide_txt').remove();
            $('.containerbox1-2').css({"position":"relative","z-index":""});
            var targeted_guide_class = $('[data-guide-open]').attr('data-guide-open');
            $('[data-guide="' + targeted_guide_class + '"]').fadeOut(350);
            Swal.fire({
                icon: 'warning',
                title: '당월 연장 내역 없음',
            });
        }
    }

    function guide_on_zrent_2(){
        let chk_len = 0;
        let total_len = $('.listcheckbox').length;
        $.each($('.listcheckbox'),function(i){
            if($('.listcheckbox').eq(i).is(':checked')==0){
                chk_len++;
            }
        });
        console.log(chk_len);
        if(chk_len==total_len){
            $('.guide_txt').remove();
            $('body').append("<div class='guide_txt' style='top:55%'><div class='guide_txt_inner'><div>선택하지않았습니다.</div><div>일괄연장할 주문서를 선택해주세요.</div><div class='guide_next' onclick='guide_on_rent_2()'>다음></div></div></div>");

        }else{
            $('.guide_txt').remove();
            guide_toggle_off(guide_interval);
            $('.containerbox1-2').css({"position":"relative","z-index":""});
            $('.allrent').css({"position":"relative","z-index":"9999999","background":"#fff"});
            guide_toggle_on($('.allrent'));
            $('body').append("<div class='guide_txt' style='top:55%'><div class='guide_txt_inner'><div>'선택일괄연장' 버튼을 클릭합니다.</div></div></div>");
        }
    }

    function guide_on_buy(){
        Swal.close();
        guide_chk = 1;
        var targeted_guide_class = $('[data-guide-open]').attr('data-guide-open');
        $('[data-guide="' + targeted_guide_class + '"]').fadeIn(350);
        $('.containerbox2-1').css({"position":"relative","z-index":"9999999","background":"#fff"});
        $('body').append("<div class='guide_txt' style='top:30%'><div class='guide_txt_inner'><div>해당 위치에 미계약 내역이 표시됩니다.</div><div>내역을 클릭하여 상세정보를 확인할수있습니다.</div><div class='guide_next' onclick='guide_on_buy_1()'>다음></div></div></div>");
    }

    function guide_on_buy_1(){
        if($('.moneytr').length>0){
            $('.guide_txt').remove();
            guide_toggle_on($('.mchk'));
            $('body').append("<div class='guide_txt' style='top:30%'><div class='guide_txt_inner'><div>일괄계약할 주문서를 선택해줍니다.</div><div class='guide_next' onclick='guide_on_buy_2()'>다음></div></div></div>");
        }else{
            guide_chk = 0;
            $('.guide_txt').remove();
            $('.containerbox2-1').css({"position":"relative","z-index":""});
            var targeted_guide_class = $('[data-guide-open]').attr('data-guide-open');
            $('[data-guide="' + targeted_guide_class + '"]').fadeOut(350);
            Swal.fire({
                icon: 'warning',
                title: '당월 미계약 내역 없음',
            });
        }
    }

    function guide_on_buy_2(){
        let chk_len = 0;
        let total_len = $('.mchk').length;
        $.each($('.mchk'),function(i){
            if($('.mchk').eq(i).is(':checked')==0){
                chk_len++;
            }
        });
        console.log(chk_len);
        if(chk_len==total_len){
            $('.guide_txt').remove();
            $('body').append("<div class='guide_txt' style='top:30%'><div class='guide_txt_inner'><div>선택하지않았습니다.</div><div>일괄연장할 주문서를 선택해주세요.</div><div class='guide_next' onclick='guide_on_buy_2()'>다음></div></div></div>");

        }else{
            $('.guide_txt').remove();
            guide_toggle_off(guide_interval);
            $('.containerbox2-1').css({"position":"relative","z-index":""});
            $('.allpay').css({"position":"relative","z-index":"9999999","background":"#fff"});
            guide_toggle_on($('.allpay'));
            $('body').append("<div class='guide_txt' style='top:30%'><div class='guide_txt_inner'><div>'선택일괄계약' 버튼을 클릭합니다.</div></div></div>");
        }
    }

    function guide_on_buy_3(){
        $('.guide_txt').remove();
        guide_toggle_off(guide_interval);
        var targeted_guide_class = $('[data-guide-open]').attr('data-guide-open');
        $('[data-guide="' + targeted_guide_class + '"]').fadeOut(350);
        $('.containerbox2-1').css({"position":"relative","z-index":""});
        $('.allpay').css({"position":"relative","z-index":"1"});
        $('body').append("<div class='guide_txt' style='top:15%'><div class='guide_txt_inner'><div>일괄계약 확인창이 팝업되고 대여 계약 소독내역을 확인 후 선택해줍니다.</div><div>'계약' 버튼을 클릭합니다.</div></div></div>");
    }

    function guide_on_excel(){
        Swal.close();
        guide_chk = 1;
        var targeted_guide_class = $('[data-guide-open]').attr('data-guide-open');
        $('[data-guide="' + targeted_guide_class + '"]').fadeIn(350);
        $('.claimexcel').eq(0).css({"position":"relative","z-index":"9999999"});
        guide_toggle_on($('.claimexcel').eq(0));
        $('body').append("<div class='guide_txt' style='top:40%'><div class='guide_txt_inner'><div>연장,미계약,대여중지 내역 별 엑셀변환이 가능합니다.</div><div>'엑셀변환' 버튼을 클릭해주세요</div></div></div>");
    }

    function guide_on_excel_1(){
        $('.guide_txt').remove();
        $('.claimexcel').eq(0).css({"position":"relative","z-index":"1"});
        guide_toggle_off(guide_interval);
        var targeted_guide_class = $('[data-guide-open]').attr('data-guide-open');
        $('[data-guide="' + targeted_guide_class + '"]').fadeOut(350);
        $('body').append("<div class='guide_txt' style='top:22%'><div class='guide_txt_inner'><div>대여연장 엑셀변환의 경우 엑셀변환 알림이 뜨며</div><div>미연장, 연장내역을 선택하여 변환가능합니다.</div></div></div>");
    }
    var all_product_list = {};
    function product_list_get(){
        $.ajax({
            url: "/ProductListGetSchedule",
            data: "",
            type: 'POST',
            dataType: "JSON",
            success: function (result) {
                if(result){
                    result.data.forEach(function(obj,index){
                        all_product_list[obj.code] = obj.name;
                    });
                    console.log(all_product_list);
                }
            }
        });
    }

    $(document).ready(function () {
        
        var now = new Date();
        var year = now.getFullYear();
        var mon = (now.getMonth() + 1) > 9 ? '' + (now.getMonth() + 1) : '0' + (now.getMonth() + 1);
        var day = now.getDate() > 9 ? '' + now.getDate() : '0' + now.getDate();
        const lastdate = new Date(2022, mon, 0).getDate()
        var chan_val = year + '-' + mon + '-' + (lastdate);
        var chan_val2 = year + '-' + mon + '-01';
        $('.date1').val(chan_val2);
        $('.date2').val(chan_val);
        socket.on('delivery', function (data) {
            deliverytoday(chan_val2, chan_val+" 23:59:59");
            moneytoday(chan_val2, chan_val+" 23:59:59");
        });
        $.datepicker.setDefaults({
            dateFormat: 'yy-mm-dd',
            prevText: '이전 달',
            nextText: '다음 달',
            monthNames: ['1월', '2월', '3월', '4월', '5월', '6월', '7월', '8월', '9월', '10월', '11월', '12월'],
            monthNamesShort: ['1월', '2월', '3월', '4월', '5월', '6월', '7월', '8월', '9월', '10월', '11월', '12월'],
            dayNames: ['일', '월', '화', '수', '목', '금', '토'],
            dayNamesShort: ['일', '월', '화', '수', '목', '금', '토'],
            dayNamesMin: ['일', '월', '화', '수', '목', '금', '토'],
            showMonthAfterYear: true,
            yearSuffix: '년'
        });
        $("#datepicker,#datepicker2,#datepicker3,#datepicker4,#datepicker5,#datepicker6,#datepicker7,#datepicker8").datepicker({
            changeMonth: true,
            changeYear: true
        });
        $("#datepicker,#datepicker2,#datepicker3,#datepicker4,#datepicker5,#datepicker6,#datepicker7,#datepicker8").datepicker("option", "showAnim", "slide");
        bcode_sale_obj_get().then(res=>{
            renttoday(chan_val2+' 00:00:00', chan_val+" 23:59:59");
        });
        moneytoday(chan_val2+' 00:00:00', chan_val+" 23:59:59");
        moneytoday2(chan_val2+' 00:00:00', chan_val+" 23:59:59");
        deliverytoday(chan_val2, chan_val);

        //----- OPEN
        $('[data-popup-open]').on('click', function (e) {
            var targeted_popup_class = jQuery(this).attr('data-popup-open');
            $('[data-popup="' + targeted_popup_class + '"]').fadeIn(350);
            e.preventDefault();
        });

        //----- CLOSE
        $('[data-popup-close]').on('click', function (e) {
            var targeted_popup_class = jQuery(this).attr('data-popup-close');
            $('[data-popup="' + targeted_popup_class + '"]').fadeOut(350);
            e.preventDefault();
        });
        product_list_get();

    });//e:document.ready
    
    function zerotable_print(){
        
        // 선택된 행이 있는지 확인
        let selectedRows = $('.zerotable .zerotr input[type="checkbox"]:checked');
        if(selectedRows.length === 0) {
            Swal.fire({
                title: '알림',
                text: '선택된 항목이 없습니다. 하나 이상의 항목을 선택해주세요.',
                icon: 'warning',
                confirmButtonText: '확인'
            });
            return;
        }
        $('.rent_add_iframe').css({"top":"0px","z-index":9999});
        $('.rent_add_iframe').contents().find('body').html(`
            <div class="rent_add_preview">
                <div style="font-size:18px; font-weight:bold; text-align:center;">
                    이용내역서 미리보기화면입니다.
                    <br/>
                    '이용내역서 생성'을 진행해주세요
                </div>
            </div>
        `);
        // 선택된 데이터 수집
        let tableRows = '';
        let selectedData = [];
        
        $('.zerotable .zerotr input[type="checkbox"]:checked').each(function() {
            let row = $(this).closest('tr');
            let name = row.find('td:eq(1)').text();
            let number = row.find('td:eq(2)').text();
            let phone = row.find('td:eq(3)').text();
            let product = row.find('td:eq(4)').text();
            let manager = row.find('td:eq(5)').text();
            let startDate = row.find('td:eq(6)').text();
            let endDate = row.find('td:eq(7)').text();
            let durableDate = row.find('td:eq(8)').text();
            let pcode = row.find('td:eq(4)').data('pcode');
            let bcode = row.find('td:eq(4)').data('bcode');
            
            // 날짜 형식 변환 (YYYYMMDD -> YYYY-MM-DD)
            let formattedStartDate = startDate.replace(/(\d{4})(\d{2})(\d{2})/, '$1-$2-$3');
            let formattedEndDate = endDate.replace(/(\d{4})(\d{2})(\d{2})/, '$1-$2-$3');
            
            // 데이터 저장
            selectedData.push({
                name, number, phone, product, manager, 
                startDate, endDate, durableDate,
                formattedStartDate, formattedEndDate
            });
            
            // 테이블 행 추가
            tableRows += `
                <tr class="modal-row" data-index="${selectedData.length - 1}" style="height: 40px;">
                    <td><input type="checkbox" class="row-select" style="height:20px; width:20px;" checked></td>
                    <td style="font-size:15px; font-weight:bold;">${name}</td>
                    <td style="font-size:15px; font-weight:bold;">${number}</td>
                    <td style="font-size:15px; font-weight:bold;">${phone}</td>
                    <td style="font-size:15px; font-weight:bold;" data-pcode="${pcode}" data-bcode="${bcode}">${product}</td>
                    <td style="font-size:15px; font-weight:bold;">${manager}</td>
                    <td><input type="text" class="date-start" value="${formattedStartDate}" style="height:30px; width:130px; font-size:15px; font-weight:bold; text-align:center;"></td>
                    <td><input type="text" class="date-end" value="${formattedEndDate}" style="height:30px; width:130px; font-size:15px; font-weight:bold; text-align:center;"></td>
                    <td style="font-size:15px; font-weight:bold;">${durableDate ? durableDate.replace(/(\d{4})(\d{2})(\d{2})/, '$1-$2-$3') : ''}</td>
                </tr>
            `;
        });
        
        // Swal로 모달 표시
        Swal.fire({
            title: '기초 이용내역서',
            width:'50%',
            position:"center-end",
            html: `
                <div style="max-height: 800px; min-height: 500px; overflow-y: auto;">
                    <table id="contract-table" style="width: 100%; border-collapse: collapse; text-align: center;">
                        <thead>
                            <tr style="background-color: #f0f0f0;">
                                <th style="padding: 10px; border: 1px solid #ddd; position: sticky; top: -1; background-color: #f0f0f0;"><input type="checkbox" id="check-all" style="height:20px; width:20px;" checked></th>
                                <th style="padding: 10px; border: 1px solid #ddd; position: sticky; top: -1; background-color: #f0f0f0;">수급자</th>
                                <th style="padding: 10px; border: 1px solid #ddd; position: sticky; top: -1; background-color: #f0f0f0;">인정번호</th>
                                <th style="padding: 10px; border: 1px solid #ddd; position: sticky; top: -1; background-color: #f0f0f0;">연락처</th>
                                <th style="padding: 10px; border: 1px solid #ddd; position: sticky; top: -1; background-color: #f0f0f0;">품목명</th>
                                <th style="padding: 10px; border: 1px solid #ddd; position: sticky; top: -1; background-color: #f0f0f0;">담당자</th>
                                <th style="padding: 10px; border: 1px solid #ddd; position: sticky; top: -1; background-color: #f0f0f0;">계약시작일</th>
                                <th style="padding: 10px; border: 1px solid #ddd; position: sticky; top: -1; background-color: #f0f0f0;">계약종료일</th>
                                <th style="padding: 10px; border: 1px solid #ddd; position: sticky; top: -1; background-color: #f0f0f0;">내구연한 만료일</th>
                            </tr>
                        </thead>
                        <tbody>
                            ${tableRows}
                        </tbody>
                    </table>
                    <div class="" style="width:100%; display:flex; justify-content:center; align-items:center;">
                        <div class="flex_space" style="width:50%; font-weight:bold; background:#fff; border-radius:10px;">
                            <div class="flexcolumn" style="padding: 20px;"><input type="checkbox" class="print_chk_box" data-id="doc1" checked><div>입소이용의뢰서</div></div>
                            <div class="flexcolumn" style="padding: 20px;"><input type="checkbox" class="print_chk_box" data-id="doc2" checked><div>이용내역서</div></div>

                        </div>
                    </div>
                    <div style="">
                        <iframe id="print1" class="print1 iprint_zero ion" name="print1" src="//localhost:802/zero" frameborder="0" style="position:absolute; width:912px; top:-1500px;" ></iframe>
                        <iframe id="print2" class="print2 iprint_zero ion" name="print2" src="//localhost:802/zero2" frameborder="0" style="position:absolute; width:912px; top:-1500px;" ></iframe>
                    </div>
                </div>
            `,
            showCancelButton: true,
            showConfirmButton: true,
            cancelButtonText: '닫기',
            confirmButtonText: '이용내역서<br/> 생성',
            confirmButtonColor: '#3085d6',
            denyButtonText: '이용내역서<br/> 출력',
            showDenyButton: true,
            denyButtonColor: 'rgb(16, 49, 71)',
            cancelButtonColor: 'rgb(221, 51, 51)',
            customClass: {
                container: 'contract-modal'
            },
            preConfirm:()=>{
                product_get_money().then(p_obj=>{
                    rent_add_make_doc_zero($('#contract-table'),p_obj);
                })
                return false;
            },
            preDeny:()=>{
                rent_add_doc_print()
                return false;
            },
            didDestroy:()=>{
                $('.rent_add_iframe').css({"top":"-2000px"});
            },
            didOpen: () => {
                // 모든 날짜 입력 필드에 datepicker 적용
                $(".date-start, .date-end").datepicker({
                    dateFormat: 'yy-mm-dd',
                    changeMonth: true,
                    changeYear: true,
                    showAnim: "slide"
                });
                
                // 전체 선택 체크박스 이벤트
                $('#check-all').on('click', function() {
                    $('.row-select').prop('checked', $(this).is(':checked'));
                });
                
                // 개별 체크박스 변경 시 전체 선택 체크박스 상태 업데이트
                $(document).on('change', '.row-select', function() {
                    $('#check-all').prop('checked', $('.row-select:checked').length === $('.row-select').length);
                });

                axios.post('/zerotable_print',{
                    selectedData:selectedData.map(item => item.number),
                    company:company,
                }).then(res=>{
                    zerotable_data = res.data;
                })
                
            }
        });
    }

    // 날짜 유효성 검사 함수
    function isValidDate(dateString) {
        if (!/^\d{4}-\d{2}-\d{2}$/.test(dateString)) return false;
        
        const parts = dateString.split('-');
        const year = parseInt(parts[0], 10);
        const month = parseInt(parts[1], 10) - 1;
        const day = parseInt(parts[2], 10);
        
        const date = new Date(year, month, day);
        return date.getFullYear() === year && 
            date.getMonth() === month && 
            date.getDate() === day;
    }

    function scrollToFeeChangeSection() {
        $('html, body').animate({
            scrollTop: $('.containerbox2-1').offset().top
        }, 800);
    
        Swal.fire({
            title: '수가변경 품목 계약 안내',
            icon: 'info',
            html: `
                <div style="text-align: left; padding: 10px; line-height: 1.6; font-size: 16px;">
                    <p><strong>■ 일괄취소계약 진행 안내</strong></p>
                    <p>• 선택일괄취소계약 진행 시 계약종료일이 자동으로 <strong style="color: #ff4500;">2025-04-30</strong>로 설정됩니다.</p>
                    <p>• 취소된 계약은 4월 연장내역에 표시되며, 이후 재계약이 필요합니다.</p>
                    <br>
                    <p><strong>■ 재계약 방법</strong></p>
                    <p>• <strong>선택일괄연장</strong> 기능을 통해 일괄적으로 계약연장 진행</p>
                    <p>• 또는 개별 품목별로 연장 진행 가능</p>
                    <br>
                    <p><strong>■ 참고사항</strong></p>
                    <p style="color: #ff4500; font-weight: bold;">• 일괄취소계약 진행 시 공단창 반응이 없으시면 프로그램 재실행 업데이트 진행 하시면됩니다.</p>
                    <p style="color: #ff4500; font-weight: bold;">• 일괄연장 진행 시 수급자 현재 적용구간까지 연장으로 권장합니다.</p>
                    <p style="font-weight: bold;">• 당일 취소 후 당일 계약연장 시 '동일품목 계약건 알림'이 발생할 수 있습니다.<br/>
                        <strong>24시간 경과 후</strong> 재계약을 진행하시기 바랍니다.</p>
                </div>
            `,
            confirmButtonText: '확인',
            confirmButtonColor: '#3085d6',
            width: '800px'
        });
    
    }
</script>

<body>
    <div class="topline mobile"></div>
    <table class="excelbody" style="position:fixed; bottom:99999999px;">

    </table>
    <a style="display:none;" class="btn" data-popup-open="popup-1" href="#">Open Popup #1</a>
    <a style="display:none;" class="btn" data-popup-open2="popup-2" href="#">Open Popup #1</a>
    <div class="maincontainer">
        <div class="guide_show" onclick="guide_show()">화면 학습 하기</div>
        <div class="fee_change_notice" onclick="scrollToFeeChangeSection()" style="position: absolute; top: 40px; left: 250px; background-color: #333; color: white; padding: 10px 15px; border-radius: 5px; cursor: pointer; font-weight: bold; box-shadow: 0 2px 5px rgba(0,0,0,0.2); animation: blink 1s infinite;" onmouseover="this.style.backgroundColor='#555'; this.style.transform='scale(1.05)';" onmouseout="this.style.backgroundColor='#333'; this.style.transform='scale(1)';">
            수가변경품목 일괄취소계약하기 <span style="background-color: #ff4500; color: white; padding: 2px 5px; border-radius: 3px; font-size: 12px; margin-left: 5px;">이동</span>
        </div>
        <style>
            @keyframes blink {
                0% { opacity: 1; }
                50% { opacity: 0.3; }
                100% { opacity: 1; }
            }
        </style>
        <h1 class="title" onclick="location.reload();"><span
                class="material-icons">pending_actions</span>&nbsp;&nbsp;&nbsp;&nbsp;한방에 큐</h1>
        <form style="display:none;" action="<%=firstData%>" method="get" class="search-form">
            <input type="text" class="search-bar" name="query" placeholder=" 검색어를 입력하세요.">
            <input type="submit" class="search-button material-icons" value="search">
            <input type="submit" class="search-button material-icons" value="cached">
        </form>
        <table class="topmenu">
        </table>
        <div class="containerbox">
            <div class="containerbox1">
                <div class="containerbox1-1">
                    <div class="flex-around">
                        <div class="allrent" onclick="allstart();">
                            <span>선택일괄연장</span>
                        </div>
                        <div>
                            <span class="material-icons containericons">more_time</span><span>대여연장관리</span>[<span class="rentcnt" style="color:#030000;"></span>]명<span class="claimexcel" onclick="excelchange('.renttable')" style="background:rgb(69 126 167);">연장내역</span>
                        </div>
                        <div>
                            <input style="width:120px; height:30px;" id="form1" type="text" placeholder="수급자 검색 Enter" onchange="table_search(this,'#form1','renttr_1')"/>
                        </div>
                        <div class="datesearch">
                            <input class="date1 datepickerall" type="text" id="datepicker" autocomplete='off'
                                value="2022-01-01">
                            &nbsp;~&nbsp;
                            <input class="date2 datepickerall" type="text" id="datepicker2" autocomplete='off'>
                            <span class="material-icons refresh"
                                onclick="renttoday($('#datepicker').val(),$('#datepicker2').val()+' 23:59:59');">search</span>
                        </div>

                    </div>
                    <div class="containerbox1-1t">
                        <table class="containertable renttable" id="renttable">
                            <tbody>
                                <tr class="flex-around tablemenu">
                                    <td><input type="checkbox" class="listcheckbox allchk" onclick="allchk(this,'chk')">
                                        <div class="fixed-tooltip" style="position: fixed; display: none; background-color: #333; color: white; padding: 5px; border-radius: 3px; z-index: 1000;">최대 100명까지 선택 됩니다</div>
                                        <script>
                                            $(document).ready(function() {
                                                $('.allchk').hover(
                                                    function() {
                                                        var tooltip = $(this).next('.fixed-tooltip');
                                                        var pos = $(this).offset();
                                                        tooltip.css({
                                                            top: pos.top + 20,
                                                            left: pos.left,
                                                            display: 'block'
                                                        });
                                                    },
                                                    function() {
                                                        $(this).next('.fixed-tooltip').hide();
                                                    }
                                                );
                                            });
                                        </script>
                                    </td>
                                    <td>수급자</td>
                                    <td>인정번호</td>
                                    <td>연락처</td>
                                    <!-- <td>대상</td> -->
                                    <td style='width:40%;'>품목명</td>
                                    <td>담당자</td>
                                    <td>계약시작일</td>
                                    <td>계약종료일</td>
                                    <td>내구연한<br/>만료일</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
                <div class="containerbox1-2">
                    <div class="flex">
                        <span style="font-size: 18px; border-radius: 5px; box-shadow: 0 8px 9px -4px rgba(0, 0, 0, 0.3), 0 4px 18px 0 rgba(0, 0, 0, 0.2); cursor: pointer; padding: 5px 10px; background:rgb(69 126 167); color:white;" onclick="zerotable_print()">기초 이용내역서 출력</span>
                        <span class="material-icons containericons">emoji_people</span>
                        <span>기초미연장</span>[<span class="zerocnt" style="color:#030000;"></span>]명<span class="claimexcel" onclick="excelchange('.zerotable')">엑셀변환</span>
                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        <input style="width:120px; height:30px;" id="form2" type="text" placeholder="수급자 검색 Enter" onchange="table_search(this,'#form2','zerotr')"/>
                        <!--div class="datesearch">
                            <input class="date1 datepickerall" type="text" id="datepicker3" autocomplete='off'
                                value="2022-01-01">
                            &nbsp;~&nbsp;
                            <input class="date2 datepickerall" type="text" id="datepicker4" autocomplete='off'>
                            <span class="material-icons refresh" onclick="">search</span>
                        </div-->
                    </div>
                    <div>
                        <table class="containertable zerotable" id="zerotable">
                            <tbody>
                                <tr class="flex-around tablemenu">
                                    <td><input type="checkbox" class="listcheckbox allchk" onclick="allchk(this,'chk3')">
                                    </td>
                                    <td>수급자</td>
                                    <td>인정번호</td>
                                    <td>연락처</td>
                                    <!-- <td>대상</td> -->
                                    <td style='width:40%;'>품목명</td>
                                    <td>담당자</td>
                                    <td>계약시작일</td>
                                    <td>계약종료일</td>
                                    <td>내구연한<br/>만료일</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            <div class="containerbox2">
                <div class="containerbox2-1">
                    <div class="flex-around">
                        <div class="allpay" onclick="allstart2()">
                            <span>선택일괄계약</span>
                        </div>
                        <div>
                            <span class="material-icons containericons">money_off</span>
                            <span>미계약</span>[<span class="moneycnt" style="color:#030000;"></span>]명<span class="claimexcel" onclick="excelchange('.ordertable')">엑셀변환</span>
                        </div>
                        <input id="form3" style="width:120px; height:30px;" type="text" placeholder="수급자 검색 Enter" onchange="table_search(this,'#form3','moneytr')"/>
                        <div class="datesearch">
                            <input class="date1 datepickerall" type="text" id="datepicker5" autocomplete='off'
                                value="2022-01-01">
                            &nbsp;~&nbsp;
                            <input class="date2 datepickerall" type="text" id="datepicker6" autocomplete='off'>
                            <span class="material-icons refresh"
                                onclick="moneytoday($('#datepicker5').val()+' 00:00:00',$('#datepicker6').val()+' 23:59:59');">search</span>
                        </div>
                    </div>
                    <div class="containerbox2-1t">
                        <table class="containertable moneytable ordertable" id="zerotable">
                            <tbody>
                                <tr class="flex-around tablemenu">
                                    <td><input type="checkbox" class="listcheckbox allchk"
                                            onclick="allchk(this,'chk2')"></td>
                                    <td>수급자</td>
                                    <!-- <td>연락처</td> -->
                                    <td style='width:30%;'>품목명</td>
                                    <td>계약시작일</td>
                                    <!--td>메모</td-->
                                    <td>담당자</td>
                                    <td>배송상태</td>
                                    <td>계약여부</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
                <div class="containerbox2-2">
                    <div class="flex">
                        <span class="material-icons containericons">pause</span>
                        <span>대여중지</span><span class="claimexcel" onclick="excelchange('.renttable')">엑셀변환</span>
                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        <input id="form4" style="width:120px; height:30px;" type="text" placeholder="수급자 검색 Enter" onchange="table_search(this,'#form4','stoptr')"/>
                        <!--div class="datesearch">
                            <input class="date1 datepickerall" type="text" id="datepicker7" autocomplete='off'
                                value="2022-01-01">
                            &nbsp;~&nbsp;
                            <input class="date2 datepickerall" type="text" id="datepicker8" autocomplete='off'>
                            <span class="material-icons refresh"
                                onclick="deliverytoday($('#datepicker7').val(),$('#datepicker8').val());">search</span>
                        </div-->
                    </div>
                    <div>
                        <table class="containertable deliverytable">
                            <tbody>
                                <tr class="flex-around tablemenu">
                                    <td>수급자</td>
                                    <td>인정번호</td>
                                    <td>대상</td>
                                    <td>품목명</td>
                                    <td>중지일</td>
                                    <td>사유</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            <div class="containerbox3">
                <div class="containerbox2-1">
                    <div class="flex-around">
                        <div class="allpay" onclick="allstart3()">
                            <span>선택일괄취소계약</span>
                        </div>
                        <div style="position: relative;">
                            <span class="material-icons containericons"></span>
                            <span>수가변경 대여중인 품목</span>[<span class="moneycnt2" style="color:#030000;"></span>]명
                            <div style="position: absolute; left:95px; top:-55px; background-color: #fff; border-radius: 10px; padding: 10px; box-shadow: 0 2px 5px rgba(0,0,0,0.2); border: 1px solid #ccc; color:#ff5100; font-weight:bold; margin:5px 0; max-width: 250px;">
                                일괄취소 전 꼭 엑셀 변환해주세요
                            </div>
                            <span class="claimexcel" onclick="excelchange('.moneytable2')">엑셀변환</span>
                        </div>
                        <input id="form5" style="width:120px; height:30px;" type="text" placeholder="수급자 검색 Enter" onchange="table_search(this,'#form5','moneytr2')"/>
                        <div class="datesearch">
                            <input class="date1 datepickerall" type="text" id="datepicker5" autocomplete='off'
                                value="2022-01-01" readonly disabled>
                            &nbsp;~&nbsp;
                            <input class="date2 datepickerall" type="text" id="datepicker6" autocomplete='off' readonly disabled>
                            <!--span class="material-icons refresh"
                                onclick="moneytoday2($('#datepicker9').val()+' 00:00:00',$('#datepicker10').val()+' 23:59:59');">search</span-->
                        </div>
                    </div>
                    <div class="containerbox2-1t">
                        <table class="containertable moneytable2 ordertable" id="zerotable">
                            <tbody>
                                <tr class="flex-around tablemenu">
                                    <td><input type="checkbox" class="listcheckbox allchk"
                                            onclick="allchk(this,'chk4')"></td>
                                    <td>수급자</td>
                                    <td>인정번호</td>
                                    <td style='width:30%;'>품목명</td>
                                    <td>계약시작일</td>
                                    <td>계약종료일</td>
                                    <!--td>메모</td-->
                                    <td>담당자</td>
                                    <td>배송상태</td>
                                    <td>계약여부</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <a style="display:none;" class="btn" data-popup-open1="popup-1" href="#">Open Popup #1</a>
    <a style="display:none;" class="btn" data-popup-open1="popup-2" href="#">Open Popup #2</a>
    <div class="popup1" data-popup="popup-1">
        <div class="popup1-inner">
            <iframe id="renttable" class='renttable' name="renttable" src="" frameborder="0"></iframe>
            <a class="popup1-close" data-popup-close="popup-1" href="#">x</a>
        </div>
    </div>
    <div class="popup2" data-popup="popup-2">
        <div class="popup2-inner">
            <iframe id="ordertable" class='ordertable' name="ordertable" src="" frameborder="0"></iframe>
            <a class="popup2-close" data-popup-close="popup-2" href="#">x</a>
        </div>
    </div>
    <a style="display:none;" class="btn" data-guide-open="guide-1" href="#">Open guide #1</a>

    <div class="guide" data-guide="guide-1">
        <div class="guide-inner" style="display:none;">
            <a class="guide-close" data-guide-close="guide-1" href="#">x</a>
        </div>
    </div>

    <iframe id="rent_add_iframe" class='rent_add_iframe' name="rent_add_iframe" src="/rentaddiframe" frameborder="0"></iframe>    <!-- <div class="rent_add_dom">

    </div> -->
    <div class="mobile">
        <%- include('channeltalk') %>
    </div>
</body>

</html>