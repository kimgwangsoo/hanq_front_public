<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title><%= title %></title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script  src="//code.jquery.com/jquery-latest.min.js"></script>
    <script src="https://code.jquery.com/ui/1.13.1/jquery-ui.js"></script>
    <link rel="stylesheet" href="//code.jquery.com/ui/1.13.1/themes/base/jquery-ui.css">
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>  
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <script src="/socket.io/socket.io.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/less@4" ></script>
    <!--script src="/ndrop.js"></script-->
    <link rel="stylesheet" type="text/css" href="/css/guide.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/1.0.272/jspdf.debug.js"></script>
    <script src="https://cdn.rawgit.com/eligrey/FileSaver.js/5ed507ef8aa53d8ecfea96d96bc7214cd2476fd2/FileSaver.min.js"></script> 
    <script src="//cdn.rawgit.com/rainabba/jquery-table2excel/1.1.0/dist/jquery.table2excel.min.js"></script>
    <!-- <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script> -->
    <script src="/axios/dist/axios.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.15.5/xlsx.full.min.js"></script>
    <script src="https://fastly.jsdelivr.net/npm/sweetalert2@10"></script>
    <script src="/js/ajax_before_send.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.js"></script>
</head>

<script>
    function Mobile() {return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);}
    // const Toast2 = Swal.mixin({
    //     toast: true,
    //     position: 'top',
    //     showConfirmButton: false,
    //     timer: 1500,
    //     timerProgressBar: true,
    //     didOpen: (toast) => {
    //         toast.addEventListener('mouseenter', Swal.stopTimer)
    //         toast.addEventListener('mouseleave', Swal.resumeTimer)
    //     }
    // });

    // Toast2.fire({
    //     icon: 'info',
    //     title: '시스템 정상화 안내(13:00 이후 정상화)',
    //     text:`
    //         일부 외부 연동 모듈 서비스 장애가 발생하여 불편을 드려 대단히 죄송합니다. 현재 문제에 대한 조치가 완료되어 시스템이 정상화되었음을 안내드립니다. 모든 서비스가 정상적으로 작동하며, 이용에 불편이 없도록 최선을 다하겠습니다. 또한, 추가로 문제 발생시 일부 서비스의 기능이 제한될 수 있으니 참고 부탁드립니다
    //     `
    // });
    
</script>

<style>
    .mbody{
        font-weight:bold;
        /*border:1px solid #000;*/
        width: 21cm;
        min-height: 29.7cm;
        padding: 1.5cm 1.5cm 2cm 1.5cm;
    }
    .rent_add_iframe{
        /* position:absolute;
        top:500px; */
        /* width: 210mm; */
        width:100%;
        /* height: 297mm; */
        height:675px;
        border: 1px solid black;
    }
    @font-face {
        font-family: 'Source Sans Pro';
        font-style: normal;
        font-weight: 200;
        src: url(https://fonts.gstatic.com/s/sourcesanspro/v21/6xKydSBYKcSV-LCoeQqfX1RYOo3i94_wlxdr.ttf) format('truetype');
    }
    @font-face {
        font-family: 'Source Sans Pro';
        font-style: normal;
        font-weight: 300;
        src: url(https://fonts.gstatic.com/s/sourcesanspro/v21/6xKydSBYKcSV-LCoeQqfX1RYOo3ik4zwlxdr.ttf) format('truetype');
    }
    * {
        box-sizing: border-box;
        margin: 0;
        padding: 0;
        font-weight: 300;
    }
    body {
        font-family: 'Source Sans Pro', sans-serif;
        font-weight: 300;
    }

    .wrapper {
        background: #f1f1f1;
        background: linear-gradient(to top right, #fdfdfd 0%, #ffffff 100%);
        position: absolute;
        top: 50%;
        left: 0;
        width: 100%;
        height: 1000px;
        margin-top: -500px;
        overflow: hidden;
        color: white;
        z-index:-999;
    }
    
    
    body{
        background: linear-gradient( to right, #ffffff, #ffffff);
    }
    @font-face { 
            font-family: 'Material Icons'; 
            font-style: normal; 
            font-weight: 400; 
            src: url(path/to/MaterialIcons-Regular.eot); 
            /* For IE6-8 */ 
            src: 
            local('Material Icons'), 
            local('MaterialIcons-Regular'), 
        }
    .material-icons { 
            font-family: 'Material Icons'; 
            font-weight: normal; 
            font-style: normal; 
            font-size: 16px; /* Preferred icon size */ 
            display: inline-block; 
            line-height: 1; 
            text-transform: none; 
            letter-spacing: normal; 
            word-wrap: normal; 
            white-space: nowrap; 
            direction: ltr; /* Support for all WebKit browsers. */ 
            -webkit-font-smoothing: antialiased; /* Support for Safari and Chrome. */ 
            text-rendering: optimizeLegibility; /* Support for Firefox. */ 
            -moz-osx-font-smoothing: grayscale; /* Support for IE. */ 
            font-feature-settings: 'liga'; }
    .title {
        display:flex;
        align-items: center;
        font-size:20px;
        font-weight: bold;
    }
    .title span{
        font-size:30px;
    }
    .search-form{
        display: flex;
        justify-content: center;
        padding:20px;
    }
    .search-form input:nth-child(1){
        width:250px;
        border:1px solid #000000;
        background:#ffffff;
        border-radius: 5px;
        height:40px;
    }
    .search-form input:nth-child(2),.search-form input:nth-child(3){
        background:#ffffff;
        border-radius: 5px;
        border:2px solid #000000;
        width:60px;
        margin-left: 5px;
        font-size:18px;
    }
    .search-form input:nth-child(2):hover,.search-form input:nth-child(3):hover{
        border:2px solid #CC414D;
        background:#fff;
        width:60px;
    }
    .maincontainer{
        display:flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        width:100%;
        position: relative;
        padding-top:50px;
        padding-left:50px;
        padding-right:50px;
        padding-bottom: 100px;
    }
    /*.maincontainer::before{
        content : "";
        display: block;
        position: absolute;
        background-size: cover;
        top: 0;
        left: 0;
        background-image: url( "/img3" );
        width: 100%;
        height: 100%;
        opacity : 0.1;
        z-index: -1;
    }*/

    .topmenu{
        width:100%;
        font-size:15px;
    }
    .topmenu tr td{
        padding-bottom:15px;
    }
    .topmenu tr td:nth-child(1) span{
        width:100px;
        padding:10px;
        /*border:1px solid #000000;*/
        border-radius: 5px;
        font-weight:bold;
        cursor: pointer;
        box-shadow: 0 8px 9px -4px rgba(0, 0, 0, 0.3), 0 4px 18px 0 rgba(0, 0, 0, 0.2);
    }
    .footerbutton1{
        width:180px;
        padding:10px;
        border:1px solid #000000;
        border-radius: 5px;
        background:#ffffff;
        font-weight:bold;
        cursor: pointer;
    }
    .footerbutton1 span{
        font-size:15px;
    }
    .footerbutton1 span:nth-child(2){
        padding-left: 3%;
        font-size: 20px;
        color:#646464;
    }

    .footerbutton1{
        background:#1a2136;
        color:#fff;
    }

    .footerbutton1:hover{
        border:1px solid #CC414D;
        background:#fff;
        color:#000;
    }

    .topmenu tr td:nth-child(3) span{
        padding-right:15px;
        font-size:11px;
        background:#ffffff;
        font-weight:bold;
        text-align: center;
    }

    .topmenu tr td:nth-child(3) .material-icons{
        font-size:25px;
    }

    .topmenu tr td:nth-child(3){
        display:flex;
        justify-content:flex-end;
        align-items: center;
        font-weight: bold;
        width:30%;
    }
    .table{
        border-collapse: collapse;
        border:2px solid #000000;
    }
    .center td{
        text-align: center;
        font-weight:bold;
    }
    .table tr:nth-child(1){
        font-size:20px;
        background: #1a2136;
    }
    .table tr:nth-child(2){
        font-size:15px;
        background: #F2F2F2;
    }
    .pagingnum{
        border:1px solid #ffffff;
        padding:5px;
        border-radius: 4px;
        background:#ffffff;
    }
    .table tr:nth-child(1),.table tr:nth-child(2){
        /*border:2px solid #000000;*/
        font-weight: bold;
    }
    .table>tbody>tr>td{
        padding:3px;
        vertical-align: middle;
    }
    .footer{
        width:100%;
    }
    .flex{
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .flexbetween{
        display: flex;
        justify-content: space-around;
        align-items: center;
    }

    /* Outer */
    .popup {
        width:100%;
        height:100%;
        display:none;
        position:fixed;
        top:0px;
        left:0px;
        background:rgba(0,0,0,0.3);
        z-index:99999999999999;
    }

    /* Inner */
    .popup-inner {
        max-width:1800px;
        height:750px;
        width:100%;
        /*padding:40px;*/
        position:absolute;
        top:50%;
        left:50%;
        -webkit-transform:translate(-50%, -50%);
        transform:translate(-50%, -50%);
        box-shadow:0px 2px 6px rgba(0,0,0,1);
        border-radius:3px;
        background:#fff;
    }

    /* Close Button */
    .popup-close {
        width:30px;
        height:30px;
        padding-top:4px;
        display:inline-block;
        position:absolute;
        top:0px;
        right:0px;
        transition:ease 0.25s all;
        -webkit-transform:translate(50%, -50%);
        transform:translate(50%, -50%);
        border-radius:1000px;
        background:rgba(0,0,0,0.8);
        font-family:Arial, Sans-Serif;
        font-size:20px;
        text-align:center;
        line-height:100%;
        color:#fff;
    }

    .popup-close:hover {
        -webkit-transform:translate(50%, -50%) rotate(180deg);
        transform:translate(50%, -50%) rotate(180deg);
        background:rgba(0,0,0,1);
        text-decoration:none;
    }

    /* Outer */
    .popup2 {
        width:100%;
        height:100%;
        display:none;
        position:fixed;
        top:0px;
        left:0px;
        background:rgba(0,0,0,0.3);
        z-index: 9999;
    }

    /* Inner */
    .popup2-inner {
        max-width:1800px;
        height:750px;
        width:100%;
        /*padding:40px;*/
        position:absolute;
        top:50%;
        left:50%;
        -webkit-transform:translate(-50%, -50%);
        transform:translate(-50%, -50%);
        box-shadow:0px 2px 6px rgba(0,0,0,1);
        border-radius:3px;
        background:#fff;
    }

    /* Close Button */
    .popup2-close {
        width:30px;
        height:30px;
        padding-top:4px;
        display:inline-block;
        position:absolute;
        top:0px;
        right:0px;
        transition:ease 0.25s all;
        -webkit-transform:translate(50%, -50%);
        transform:translate(50%, -50%);
        border-radius:1000px;
        background:rgba(0,0,0,0.8);
        font-family:Arial, Sans-Serif;
        font-size:20px;
        text-align:center;
        line-height:100%;
        color:#fff;
    }

    .popup2-close:hover {
        -webkit-transform:translate(50%, -50%) rotate(180deg);
        transform:translate(50%, -50%) rotate(180deg);
        background:rgba(0,0,0,1);
        text-decoration:none;
    }


    iframe{
        width:100%;
        height:100%;
    }

    .listcheckbox{
        width:40px;
        transform: scale(1.7);
        -ms-transform: scale(1.7); /* IE */
        -moz-transform: scale(1.7); /* FF */
        -webkit-transform: scale(1.7); /* Safari and Chrome */
        -o-transform: scale(1.7); /* Opera */
    }
    .red{
        color:#ff0000;
    }
    .green{
        color:#00923d;
    }
    .orange{
        color:#e2a219;
    }
    .tablemenutop{
            width:100%;
            display:flex;
            justify-content: space-between;
            align-items: center;
        }
    .tablemenutop div{
        width:100%;
        display:flex;
        justify-content: center;
    }
    .tablemenutop ul{
        width:50%;
        display:flex;
        justify-content: center;
    }
    .flex{
        width:100%;
        display:flex;
        justify-content: center;
        align-items: center;
    }
    .topmenuright{
        color:#ffffff;
    }

    .topmenuright div span{
        font-size:15px;
        font-weight: bold;
        padding-right:10px;
    }
    .menu1 {
    display: block;
    position: relative;
    margin-bottom: 12px;
    cursor: pointer;
    font-size: 18px;
    
    }
    .pagination{
        cursor: pointer;
    }
    /* Hide the browser's default checkbox */
    .menu1 input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
    }
    
    /* Create a custom checkbox */
    .checkmark {
    position: absolute;
    top: -7px;
    left: 0;
    height: 25px;
    width: 25px;
    background-color: #eee;
    }
    
    /* On mouse-over, add a grey background color */
    .menu1:hover input ~ .checkmark {
    background-color: #ccc;
    }
    
    /* When the checkbox is checked, add a "red" background */
    .menu1 input:checked ~ .checkmark {
    background-color: #e91b00e8;
    }
    
    /* Create the checkmark/indicator (hidden when not checked) */
    .checkmark:after {
    content: "";
    position: absolute;
    display: none;
    }
    
    /* Show the checkmark when checked */
    .menu1 input:checked ~ .checkmark:after {
    display: block;
    }
    
    /* Style the checkmark/indicator */
    .menu1 .checkmark:after {
    left: 9px;
    top: 5px;
    width: 6px;
    height: 11px;
    border: solid white;
    border-width: 0 3px 3px 0;
    -webkit-transform: rotate(45deg);
    -ms-transform: rotate(45deg);
    transform: rotate(45deg);
    } 
    .swal2-popup {
    font-size: 1.3rem !important;
    }
    textarea{
    z-index: -99999;
    /* opacity: 0; */
    }
    .don{
        background:#fff;
        color:#000;
    }
    .doff{
        background:#1a2136;
        color:#fff;
    }
    .clientupbtn:hover{
        background:#fff;
        color:#000;
    }
    .clientup{
        width:100%;
    }
    .topmenu2 div{
        margin-top:10px;
        margin-bottom:10px;
        margin-right: 10px;
        padding:5px;
        border:1px solid #122459;
        background: #1a2136;
        border-radius: 5px;
        color:#ffffff;
        cursor: pointer;
        padding-bottom:10px;
        padding-top:10px;
        font-weight: bold;
    }

    .topmenu2 div:hover{
        background: #fff;
        color:#000;
        border:1px solid #CC414D;
    }
    .ordertr{
        height:45px;
    }
    .dragmark {
            width: 100%;
            position: absolute;
            text-align: center;
            top: 40%;
            opacity: 0.3;
    }

    .dragmark span {
        font-size: 30px;
    }
    .excellistbox {
        position: relative;
        border: 1px solid #000;
        width: 100%;
        height: 150px;
        cursor: grab;
        overflow-y: auto;
    }
    .faxbtn {
        background: #ffffff;
        width: 400px;
        height: 50px;
        margin: 5px;
        border: 1px solid #000000;
        border-radius: 3px;
        box-shadow: 1px 1px 1px 1px #000000;
        font-size: 20px;
        cursor: pointer;
    }
    .flexcolumn {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
    }
    #checkboxList {
    position: absolute;
    right: 0px;
    top: 0px;
    padding: 10px;
    background-color: #f1f1f1;
    }
    .citem{
        flex: 1 1 27%;
    }
    .filtercls{
        display:flex;
        justify-content: center;
        align-items: center;
        margin:1px;
        padding:3px;
        border:1px solid #000;
        border-radius: 5px;
        font-weight: bold;
    }

    .filterarr{
        display:flex;
        align-items: center;
        margin-bottom:5px;
    }

    .orderexcel{
        margin-left: 10px;
        margin-bottom:5px;
        background: rgb(48, 110, 72);
        padding: 3px;
        color: #fff;
        font-size: 15px;
        border-radius: 5px;
        /*box-shadow: 0 8px 9px -4px rgba(0, 0, 0, 0.3), 0 4px 18px 0 rgba(0, 0, 0, 0.2);*/
        cursor:pointer;
    }
    .orderexcel:hover,
    .sms_send_history:hover
    {
        
        box-shadow: 0 8px 9px -4px rgba(129, 216, 129, 0.3), 0 4px 18px 0 rgba(14, 78, 2, 0.2);
    }

    .sms_send_history,.fax_send_history,.order_excel_batch,.order_claim_alert{
        margin-left: 10px;
        margin-bottom:5px;
        background: #1a2136;
        padding: 3px;
        color: #fff;
        font-size: 15px;
        border-radius: 5px;
        /*box-shadow: 0 8px 9px -4px rgba(0, 0, 0, 0.3), 0 4px 18px 0 rgba(0, 0, 0, 0.2);*/
        cursor:pointer;
    }

    .searchdetail{
        background: #ffffff;
        z-index: 999;
        width: 100%;
        display: flex;
        justify-content: center;
        position: absolute;
        width:550px;
        padding:20px;
        border:2px solid #003866;
        border-radius: 4px;
    }

    .searchdetail div table tr{
        display: flex;
    }
    .searchdetail div table tr td{
        padding:5px;
    }

    .searchdetail div table tr td:nth-child(1){
        width:100px;
    }

    .searchdetail div div{
        width:100%;
        margin-top:15px;
        padding:5px;
        border:1px solid #003866;
        background: #1a2136;
        border-radius: 5px;
        color:#ffffff;
        cursor: pointer;
    }
    
    .datepickerall{
    font-weight: bold;
    height:35px;
    width:11%;
    border-radius: 5px;
    text-align: center;
    }
    .topline{
        position: fixed;
        top:0;
        width:100%;
        height:32px;
        background: #1a2136;
        z-index: 999;
    }
    .cnttd{
        font-size:16px;
        width:50px;
    }
    .mname{
        width:100px;
    }
    .datetd{
        width:100px;
    }
    .topcls{
        display:flex;
        justify-content: space-between;
    }
    @media (max-width: 1400px) {
            .popup2-inner {
                max-width:92%;
                height:600px;
            }
            .popup-inner{
                max-width:92%;
                height:600px;
            }
    }
    @media (max-width: 600px) {
        body{
            font-size:10px;
        }
        .cnttd{
                font-size:13px;
                width:40px;
            }
        .contd{
            width:50px;
        }
        .search-form input:nth-child(1) {
            width: 140px;
        }
        .topmenu{
            width:100%;
            font-size:10px;
            text-align: center;
        }
        .datepickerall {
            width:20%;
        }
        .table tr:nth-child(1){
            font-size: 16px;
        }
        .table tr:nth-child(2) {
            font-size: 10px;
        }
        .deliverytxtm{
            text-overflow: ellipsis;
            overflow: hidden;
            white-space: nowrap;
        }
        .maincontainer {
            padding-left: 20px;
            padding-right: 20px;
        }
        .tablemenutop {
            width: 100%;
            display: flex;
            justify-content: center;
            align-items: center;
        }
        .table>tbody>tr>td {
            padding: 3px;
            vertical-align: middle;
        }
        .mname{
            width:60px;
        }
        .datetd{
            width:65px;
        }

        .popup2-inner {
            max-width:355px;
            height:500px;
        }
        .popup-inner{
            max-width:360px;
            height:500px;
        }
        .listcheckbox{
            width:20px;
            transform:scale(1.3);
            -webkit-transform:scale(1.3);
        }
        .pagination>li>a, .pagination>li>span {
            padding: 4px 10px;
        }
    }

    .statustabtable{
        width:100%;
    }
    .statustab{
        width:100%;
        display:flex;
        justify-content: center;
    }
    .statustab td{
        width:25%;
        display:flex;
        align-items: center;
        justify-content: center;
        height:40px;
        font-size:15px;
        font-weight: bold;
        cursor: pointer;
        border-top:1px solid rgba(110, 110, 110, 0.39);
        border-right:1px solid rgba(110, 110, 110, 0.39);
        border-left:1px solid rgba(110, 110, 110, 0.39);
        border-top-left-radius: 5px;
        border-top-right-radius: 5px;
    }
    .statustab td:hover{
        background:#1f28448c;
        color:#fff;
    }
    .tablemenu,.table{
        border-top-width: 0px;
        border-bottom-width: 0px;
        border-left-width: 0px;
        border-right-width: 0px;
    }
    .table>tbody>tr>td{
        border:0px;
    }
    .statuson{
        background:#1a2136; 
        color:#fff;
    }
    .statusoff{
        background: #fff;
        color:#000;
    }
    .delrow{
        border-radius: 5px;
        box-shadow: 0 8px 9px -4px rgba(0, 0, 0, 0.3), 0 4px 18px 0 rgba(0, 0, 0, 0.2);
        cursor:pointer;
    }
    .guide_exit{
        position:fixed;
        top:3%;
        right:1%;
        width:70px;
        height: 35px;
        background:#ee6464;
        color:#fff;
        padding:5px;
        border-radius: 5px;
        z-index: 999999;
        font-weight: bold;
        text-align: center;
        font-size:20px;
        cursor:pointer;
    }

    .sms_table {
        /* width: 100%; */
        border-collapse: collapse;
        table-layout: fixed;
        font-size:18px;
        height:450px;
        font-weight:bold;
    }

  .sms_table thead {
    display:block;
  }

  .sms_table thead tr th {
    padding: 8px;
    border: 1px solid #ddd;
    text-align: center;
    font-weight:bold;
    /* width:100px; */
  }

  .sms_table tbody tr td {
    padding: 8px;
    border: 1px solid #ddd;
    text-align: center;
    font-weight:bold;
  }

  .sms_table thead tr th:nth-child(1), .sms_table tbody tr td:nth-child(1) {
    width:100px;
  }

  .sms_table thead tr th:nth-child(2), .sms_table tbody tr td:nth-child(2) {
    width:100px;
  }

  .sms_table thead tr th:nth-child(3), .sms_table tbody tr td:nth-child(3) {
    width:150px;
  }

  .sms_table thead tr th:nth-child(4), .sms_table tbody tr td:nth-child(4) {
    width:100px;
  }

  .sms_table thead tr th:nth-child(5), .sms_table tbody tr td:nth-child(5) {
    width:640px;
  }

  .sms_table thead tr th:nth-child(6), .sms_table tbody tr td:nth-child(6) {
    width:112px;
  }

  .sms_table thead tr th:nth-child(7), .sms_table tbody tr td:nth-child(7) {
    width:112px;
  }
  .sms_table thead tr th:nth-child(8), .sms_table tbody tr td:nth-child(8) {
    width:150px;
  }

  .sms_table th {
    position: sticky;
    top: 0;
    background-color: #f2f2f2;
    text-align: center;
  }

  .sms_table tbody {
    max-height: 400px;
    overflow-y: auto;
    display: block;
    font-weight:bold;
  }

  .sms_search_area{
    margin-bottom:15px;
  }

  .sms_search_input{
    height:40px;
    width:150px;
    border-radius: 5px;
    font-size:17px;
    font-weight:bold;
  }

  .sms_search_option{
    display:flex;
    justify-content: center;
    align-items: center;
  }

  .option_on,
  .tab_on{
    background:#333;
    color:#fff;
  }
  
  .sms_search_option_btn,
  .sms_tab_menu{
    display: flex;
    align-items: center;
    justify-content: center;
    width:120px;
    height:40px;
    /* background:#122459; */
    box-shadow: 0 8px 9px -4px rgba(0, 0, 0, 0.3), 0 4px 18px 0 rgba(0, 0, 0, 0.2);
    border-radius: 5px;
    font-size:17px;
    font-weight:bold;
    cursor:pointer;
  }

  .sms_tab_menu{
    margin:10px;
  }

  .sms_search_btn{
    width:100px;
    height:40px;
    /* background:#122459; */
    box-shadow: 0 8px 9px -4px rgba(0, 0, 0, 0.3), 0 4px 18px 0 rgba(0, 0, 0, 0.2);
    border-radius: 5px;
    font-size:17px;
    font-weight:bold;
    cursor:pointer;
  }

  .sms_search_ctn_area{
    display:flex;
    justify-content: center;
    align-items: center;
    font-weight:bold;
    font-size:20px;
  }

  .sms_search_btn:hover{
    opacity:0.8;
  }

  .sms_data:hover{
    opacity:0.8;
    background:rgb(212, 212, 212);
    /* border:2px solid #333; */
    cursor:pointer;
  }

  .sms_tr:hover{
    opacity:0.7;
    background:rgb(231, 231, 231);
    cursor:pointer;
  }

  .ordersignimg{
    width:60%;
  }

  .order_excel_btn{
    width:210px;
    height:50px;
    box-shadow: 0 8px 9px -4px rgba(0, 0, 0, 0.3), 0 4px 18px 0 rgba(0, 0, 0, 0.2);
    font-size:16px;
    font-weight:bold;
    padding: 10px;
    margin:10px;
    border-radius:5px;
  }

  .order_excel_btn:hover{
    cursor:pointer;
    opacity:0.6;
  }

  .table_search_btn{
    width:110px;
    height:30px;
    box-shadow: 0 8px 9px -4px rgba(0, 0, 0, 0.3), 0 4px 18px 0 rgba(0, 0, 0, 0.2);
    font-size:16px;
    font-weight:bold;
    padding: 10px;
    margin:10px;
    border-radius:5px;
    line-height: 10px;
  }

  .table_search_btn:hover{
    cursor:pointer;
    opacity:0.6;
  }

  .chk_print_area{
    /* color:#fff; */
    
  }

  .chk_print{
    width:200px;
    box-shadow: 0 8px 9px -4px rgba(255, 255, 255, 0.082), 0 4px 18px 0 rgba(253, 253, 253, 0.089);
    border-radius:5px;
    background:#fff;
    color:#000;
    font-weight:bold;
    height:40px;
    line-height: 40px;
    cursor:pointer;
  }

  .flex_space{
    display:flex;
    justify-content: space-around;
    align-items: center;
  }
  .print_chk_box,.print_chk_box_zero{
    width:20px;
    height:20px;
  }

  .print_prev{
    width: 100px;
    height: 30px;
    margin: 5px;
    background:#fff;
    box-shadow: 0 8px 9px -4px rgba(0, 0, 0, 0.3), 0 4px 18px 0 rgba(0, 0, 0, 0.2);
    border-radius:5px;
  }
  .print_next{
    width: 100px;
    height: 30px;
    margin: 5px;
    background:#fff;
    box-shadow: 0 8px 9px -4px rgba(0, 0, 0, 0.3), 0 4px 18px 0 rgba(0, 0, 0, 0.2);
    border-radius:5px;
  }
  .make_print{
    cursor:pointer;
    width:200px;
    height:40px;
    line-height:40px;
    box-shadow: 0 8px 9px -4px rgba(0, 0, 0, 0.3), 0 4px 18px 0 rgba(0, 0, 0, 0.2);
    font-weight:bold;
    font-size:17px;
    border-radius:5px;
    margin:0px 0px 5px 0px;
    background:#fff;
  }

  .order_excel_thead{
    display: block;
    width: 100%;
    background:#333;
    color:#fff;
  }

  .order_excel_thead tr th{
    text-align:center;
    height:50px;
    font-weight:bold;
    font-size:15px;
    border-right: 1px solid #ffffff;
  }

  .order_excel_tbody{
    display: block;
    height: 530px;
    overflow: auto;
    width: 100%;
    
  }

  .exceltr td{
    border:1px solid #000;
    font-weight:bold;
  }

  .exceltr{
    height:30px;
  }

  /* .order_excel_tbody .exceltr:hover{
    opacity:0.7;
    cursor:pointer;
  } */

  /* .exceltr td:nth-child(1), .order_excel_thead tr th:nth-child(1){
    width:100px;
  }
  .exceltr td:nth-child(2), .order_excel_thead tr th:nth-child(2){
    width:100px;
  }
  .exceltr td:nth-child(3), .order_excel_thead tr th:nth-child(3){
    width:120px;
  }
  .exceltr td:nth-child(4), .order_excel_thead tr th:nth-child(4){
    width:120px;
  }
  .exceltr td:nth-child(5), .order_excel_thead tr th:nth-child(5){
    width:100px;
  }
  .exceltr td:nth-child(6), .order_excel_thead tr th:nth-child(6){
    width:80px;
  }
  .exceltr td:nth-child(7), .order_excel_thead tr th:nth-child(7){
    width:120px;
  }
  .exceltr td:nth-child(8), .order_excel_thead tr th:nth-child(8){
    width:120px;
  }
  .exceltr td:nth-child(9), .order_excel_thead tr th:nth-child(9){
    width:100px;
  }
  .exceltr td:nth-child(10), .order_excel_thead tr th:nth-child(10){
    width:120px;
  }
  .exceltr td:nth-child(11), .order_excel_thead tr th:nth-child(11){
    width:150px;
  }
  .exceltr td:nth-child(12), .order_excel_thead tr th:nth-child(12){
    width:150px;
  }
  .exceltr td:nth-child(13), .order_excel_thead tr th:nth-child(13){
    width:120px;
    font-weight:bold;
  } */
  .t_on{
    background:#333;
    color:#fff;
  }

  /* 오름차순 화살표 스타일 */
    .asc::after {
    content: '\25b2'; /* 화살표 상단 방향 */
    margin-left: 5px; /* 화살표와 텍스트 사이 여백 */
    }

    /* 내림차순 화살표 스타일 */
    .desc::after {
    content: '\25bc'; /* 화살표 하단 방향 */
    margin-left: 5px; /* 화살표와 텍스트 사이 여백 */
    }

    .sort_tr{
        cursor:pointer;
    }

    .doc_tab_on{
        background:#333;
        color:#fff;
    }

    .rent_add_table{
        width:100%;
        font-size:14px;
        font-weight:bold;
    }

    .rent_add_table tbody{
        display: block;
        height: 500px;
        overflow: auto;
        width: 100%;
    }

    .rent_add_table thead{
        display: block;
        width: 100%;
    }

    .rent_add_table thead tr th{
        text-align: center;
        width:95px;
        font-weight:bold;

    }

    .rent_add_table tbody tr td{
        text-align: center;
        width:95px;
        font-weight:bold;
    }

    .rent_add_chk{
        width:30px;
        height:30px;
    }

    .add_on{
        background:#333;
        color:#fff;
    }
    .order_excel_batch_btn{
        width:200px;
        box-shadow: 0 8px 9px -4px rgba(0, 0, 0, 0.3), 0 4px 18px 0 rgba(0, 0, 0, 0.2);
        border-radius:5px;
        background:#fff;
        color:#000;
        font-weight:bold;
        height:40px;
        line-height: 40px;
        cursor:pointer;
        margin:10px;
    }

    .chk_payment_btn{
        width:200px;
        box-shadow: 0 8px 9px -4px rgba(0, 0, 0, 0.3), 0 4px 18px 0 rgba(0, 0, 0, 0.2);
        border-radius:5px;
        background:#fff;
        color:#000;
        font-weight:bold;
        height:40px;
        line-height: 40px;
        cursor:pointer;
        margin:10px;
    }

    .chk_payment_btn:hover{
        opacity:0.6;
    }
</style>

<%- include('alert2') %>
<% if(firstData=="zoa"){%>
    <%- include('webtopmenu_w') %>
<% }else{ %>
    <%- include('webtopmenu') %>
<% } %>

<%- include('popbillModal') %>
<script>
    var uid = '<%=username%>';
    var gongchk = '<%=gongchk2%>';
    var deliverychk = '<%=deliverychk2%>';
    var deliveryend = '<%=deliveryend2%>';
    var deliveryending = '<%=deliveryending2%>';
    var bchk2 = '<%=bchk2%>';
    var query = '';
    var product = '<%=product%>';
    var centername = '<%=centername%>';
    var manager = '<%=manager%>';
    var phone = '<%=phone%>';
    var delivery = "<%=delivery%>";
    var contract = "<%=contract%>";
    var company = "<%=company%>";
    var printchk = "<%=printchk%>";
    var confirm1 = "<%=confirm1%>";
    var confirm2 = "<%=confirm2%>";
    var deliverycar = "<%=deliverycar%>";
    var member_target = "<%=membertarget%>";
    var buyrentview = "";
    var memo = "";
    var contents_size = 10;
    var bcode = "";
    var guide_chk = 0;
    var guide_interval = '';
    var managerall = '<%=function(){ var mresult = []; for(m of managerarr){mresult.push(m.name);} return mresult;}()%>';
    var managerarr = [];
    for(m of managerall.split(',')){
        managerarr.push(m);
    }
    managerarr = managerarr.filter((v, i) => managerarr.indexOf(v) === i);
    var bcodesaleall = '<%=function(){ var mresult = []; for(m of bcodesale){mresult.push(m.pcode+"|"+m.bcode+"|"+m.date);} return mresult;}()%>';
    var bcodesalearr = {};
    for(m of bcodesaleall.split(',')){
        let m_split = m.split("|");
        let pcode_bcode = m_split[0] +"|"+m_split[1];
        bcodesalearr[pcode_bcode]=m_split[2];
    }
    var managerinfoall = '<%=function(){ var mresult = []; for(m of managerinfo){mresult.push(m.name+"|"+m.banknum+"|"+m.email);} return mresult;}()%>';
    var managerinfoarr = {};
    for(m of managerinfoall.split(',')){
        let m_split = m.split("|");
        let manager_name = m_split[0];
        managerinfoarr[manager_name]=m_split[1]+"|"+m_split[2];
    }
    var now = new Date();
    var year= now.getFullYear();
    var mon = (now.getMonth()+1)>9 ? ''+(now.getMonth()+1) : '0'+(now.getMonth()+1);
    var day = now.getDate()>9 ? ''+now.getDate() : '0'+now.getDate();
    var chan_val = year+'-'+mon+'-'+day;
    socket.on('quickclientups', function(data) {
        orderup();
        var datasplit=data.split(";");
        $('#clientup').load(function(){
            //if(uid=="soo")alert(datasplit[1]);
            $('#clientup').get(0).contentWindow.orderuproad(datasplit[1]);
        });
    });
</script>

<script>
    //socket.emit('login', {'name': uid});
    function s2ab(s) {
        var buf = new ArrayBuffer(s.length); //convert s to arrayBuffer
        var view = new Uint8Array(buf);  //create uint8array as viewer
        for (var i = 0; i < s.length; i++) view[i] = s.charCodeAt(i) & 0xFF; //convert to octet
        return buf;
    }
    function exportExcel(etype) {
        let filename = '<%=company%> 제품관리대장.xlsx';
        if(etype=='m'){
            filename = '<%=company%> 본인부담금수납대장.xlsx';
        }else if(etype=='i'){
            filename = '<%=company%> 제품설치대장.xlsx';
        }else if(etype=='g'){
            filename = '<%=company%> 주문서목록.xlsx';
        }
        // step 1. workbook 생성
        var wb = XLSX.utils.book_new();

        // step 2. 시트 만들기 
        var newWorksheet = excelHandler.getWorksheet();
        
        // step 3. workbook에 새로만든 워크시트에 이름을 주고 붙인다.  
        XLSX.utils.book_append_sheet(wb, newWorksheet, excelHandler.getSheetName());

        var sheet = wb.Sheets[wb.SheetNames[0]];
        Object.keys(sheet).forEach(function(s) {
            if(s.includes('G')) {
                delete sheet[s].w;
                sheet[s].z = '0';
            }
        });
        // step 4. 엑셀 파일 만들기 
        var wbout = XLSX.write(wb, { bookType: 'xlsx', type: 'binary' });

        axios({
            url:'/exceldownlog',
            method:'post',
            data:{
                company:"<%=company%>",
                filename:filename,
                id:uid,
            }
        })

        // step 5. 엑셀 파일 내보내기 
        saveAs(new Blob([s2ab(wbout)], { type: "application/octet-stream" }), excelHandler.getExcelFileName(filename));
    }

    var excelHandler = {
        getExcelFileName: function (filename) {
            return filename;
        },
        getSheetName: function () {
            return 'Sheet';
        },
        getExcelData: function () {
            return document.getElementById('excelbody');
        },
        getWorksheet: function () {
            return XLSX.utils.table_to_sheet(this.getExcelData());
        }
    }
    
    function exelchange(type){
        
        exportExcel(type);
        Swal.hideLoading();
        Swal.enableButtons();
        // $('.excelbody').table2excel({
        //     exclude: ".excludeThisClass",
        //     name: '주문 및 발주',
        //     filename: '주문 및 발주', 
        //     preserveColors: false 
        // });
        $('.exceltr').remove();
    }


    function getMonthsBetweenDates(startDate, endDate) {
        var startYear = startDate.getFullYear();
        var startMonth = startDate.getMonth();
        var endYear = endDate.getFullYear();
        var endMonth = endDate.getMonth();

        var months = [];
        for (var year = startYear; year <= endYear; year++) {
            var start = (year === startYear) ? startMonth : 0;
            var end = (year === endYear) ? endMonth : 11;
            for (var month = start; month <= end; month++) {
                months.push({ year: year, month: month });
            }
        }
        return months;
    }

    function formatMonth(month) {
        return ('0' + (month + 1)).slice(-2);
    }

    function daysBetweenDates(startDate, endDate) {
        // 시작 날짜와 종료 날짜 간의 밀리초 차이 계산
        var diff = new Date(endDate).getTime() - new Date(startDate).getTime();
        // 일로 변환
        var days = Math.floor(diff / (1000 * 60 * 60 * 24));
        return days;
    }

    function makeLastDigitZero(number) {
        // 숫자의 마지막 자릿수를 0으로 만들어 반환합니다.
        return Math.floor(number / 10) * 10;
    }


    function dateFormat(date) {
        let month = date.getMonth() + 1;
        let day = date.getDate();
        let hour = date.getHours();
        let minute = date.getMinutes();
        let second = date.getSeconds();

        month = month >= 10 ? month : '0' + month;
        day = day >= 10 ? day : '0' + day;
        hour = hour >= 10 ? hour : '0' + hour;
        minute = minute >= 10 ? minute : '0' + minute;
        second = second >= 10 ? second : '0' + second;

        return date.getFullYear() + '-' + month + '-' + day;
    }

    let bcode_sale_obj = {};
    async function bocdesalelist(){
        
        return axios({
            method:'post',
            url:'/bcodesalelistexcel',
            data:{
                company:"<%=company%>",
            }
        }).then(res=>{
            const data = res.data;
            if(data.data!=''){
                data.data.forEach(function(obj,index){
                    let salecnt = 5;
                    if(obj.name=='전동침대')salecnt=10;
                    else if(obj.name=='욕창예방 매트리스')salecnt=3;
                    let newsaledates = new Date(obj.date);
                    newsaledates.setFullYear(newsaledates.getFullYear() + salecnt);
                    newsaledates.setDate(newsaledates.getDate() - 1);
                    newsaledates = dateFormat(newsaledates);
                    bcode_sale_obj[obj.pcode+'|'+obj.bcode] = newsaledates;
                });
            }else{
                console.log(300);
                return 300;
            }
        });
        
    }
    bocdesalelist();


    function loadDataEfficiently(data) {
        // 데이터를 행으로 분할하고 빈 행은 필터링
        const rows = data.split('</tr>').filter(item => item.trim() !== '');
        // 한 번에 처리할 행의 수 설정 - 더 작은 값으로 설정하여 더 부드럽게 처리
        const chunkSize = 50;
        
        // Swal 창이 닫혔는지 확인하는 변수
        let isSwalClosed = false;
        
        // 청크 단위로 데이터 처리하는 함수
        function processChunk(startIndex) {
            // Swal이 닫혔으면 처리 중단
            if (isSwalClosed) {
                return;
            }
            
            // 현재 청크의 끝 인덱스 계산 (전체 행 수를 초과하지 않도록)
            const endIndex = Math.min(startIndex + chunkSize, rows.length);
            // 현재 처리할 청크 추출
            const chunk = rows.slice(startIndex, endIndex);
            
            // HTML 문자열 생성
            let str = '';
            chunk.forEach(row => {
                if (row.includes('<thead') || row.includes('<tbody')) {
                    str += row + '</tr>';
                } else if (row.trim().startsWith('<tr')) {
                    // 이미 <tr> 태그가 있는 경우 그대로 사용
                    str += row + '</tr>';
                } else {
                    // <tr> 태그가 없는 경우에만 추가
                    str += `<tr>${row}</tr>`;
                }
            });
            
            // 생성된 HTML을 테이블에 추가
            $('#excelbody').append(str);
            
            // 진행 상황 표시
            const progress = Math.floor((endIndex / rows.length) * 100);
            
            // Swal이 닫혔는지 확인
            if (document.querySelector('.swal2-container') === null) {
                isSwalClosed = true;
                return;
            }
            
            Swal.showValidationMessage(`<span style="font-size: 16px; font-weight: bold; color: #333;">데이터 로딩 중... ${progress}% 완료</span>`);
            
            // 아직 처리할 행이 남아있으면 다음 청크 처리를 예약
            // 시간 간격을 늘려 브라우저가 렌더링할 시간을 더 확보
            if (endIndex < rows.length && !isSwalClosed) {
                setTimeout(() => processChunk(endIndex), 10);
            } else if (endIndex >= rows.length) {
                // 모든 데이터 로딩이 완료되면 메시지 숨김
                Swal.resetValidationMessage();
                window.isProcessing = false;
            }
        }
        
        // Swal 닫힘 이벤트 감지
        document.addEventListener('click', function(e) {
            if (e.target.classList.contains('swal2-close') || 
                e.target.classList.contains('swal2-cancel') ||
                e.target.classList.contains('swal2-backdrop-show')) {
                isSwalClosed = true;
            }
        });
        
        // 첫 번째 청크부터 처리 시작
        processChunk(0);
    }

    //현재 테이블 양식 그대로 엑셀변환
    async function orderlistexcel(page,username,dates,datee,query,ccontract,ddelivery,pproduct,ccentername,mmanager,pphone,bbcode,pprintchk,cconfirm1,cconfirm2,ddeliverycar,ccontentssize,bbuyrentview,mmemo,t_obj){
        if (window.isProcessing) return;
        window.isProcessing = true;
        Swal.showLoading();  
        if(daysBetweenDates(dates,datee)>60){
            Swal.fire({
                title: '최대 60일까지만 조회가 가능합니다.',
                icon: 'error',
                showCancelButton: false,
                showConfirmButton: true,
                confirmButtonText: '확인'
            });
            return;
        }
        $('.exceltr,.order_excel_thead,.order_excel_tbody').remove();
        $('.exceltr').remove();
        console.log(page,username,dates,datee,query,ccontract,ddelivery,pproduct,ccentername,mmanager,pphone,bbcode,pprintchk,cconfirm1,cconfirm2,ddeliverycar,ccontentssize,bbuyrentview,mmemo,t_obj);
        $(t_obj).addClass('t_on');
        $('.order_excel_btn').not($(t_obj)).removeClass('t_on');
        return axios({
            method:'post',
            url:'/orderlookupExcelOrigin',
            data:{
                company:"<%=company%>",
                page:page,
                username:username,
                dates:dates,
                datee:datee,
                query:query,
                ccontract:ccontract,
                ddelivery:ddelivery,
                pproduct:pproduct,
                ccentername:ccentername,
                mmanager:mmanager,
                pphone:pphone,
                bbcode:bbcode,
                pprintchk:pprintchk,
                cconfirm1:cconfirm1,
                cconfirm2:cconfirm2,
                ddeliverycar:ddeliverycar,
                ccontentssize:ccontentssize,
                bbuyrentview:bbuyrentview,
                mmemo:mmemo,
                // share_chk_obj:[]
            }
        }).then(res=>{
            const data = res.data;
            // 테이블 헤더 생성
            let str = '<thead class="order_excel_thead"><tr class="exceltr">';
            str += '<th>주문일자</th><th>수급자명</th><th>장기요양인정번호</th><th>생년월일</th>';
            str += '<th>대상</th><th>품목명</th><th>품목수량</th><th>배송주소</th><th>보호자성함</th>';
            str += '<th>구분</th><th>센터명</th><th>담당자</th><th>배송방법</th><th>배송상태</th><th>공단계약</th>';
            str += '</tr></thead>';
            
            // 테이블 바디 생성
            str += '<tbody class="order_excel_tbody">';
            
            // 데이터 행 추가
            if(data.rows && data.rows.length > 0) {
                data.rows.forEach((item, index) => {
                    str += `<tr class="exceltr">`;
                    str += `<td>${item.cancled ? item.cancled.substring(0, 10) : ''}</td>`;
                    str += `<td>${item.name || ''}</td>`;
                    str += `<td>${item.number || ''}</td>`;
                    str += `<td>${item.regident || ''}</td>`;
                    str += `<td>${item.target || ''}</td>`;
                    str += `<td>${item.product ? (item.product.includes(',') ? item.product.split(',')[0].split('|')[1] + ` 외 ${item.product.split(',').length - 1}개` : item.product.includes('|') ? item.product.split('|')[1] : item.product) : ''}</td>`;
                    str += `<td>${item.product ? (item.product.includes(',') ? item.product.split(',').length : 1) : 0}</td>`;
                    str += `<td>${item.address || ''}</td>`;
                    str += `<td>${item.guardname || ''}</td>`;
                    str += `<td>${item.rentproduct ? '대여' : '판매'}</td>`;
                    str += `<td>${item.centername || ''}</td>`;
                    str += `<td>${item.manager || ''}</td>`;
                    str += `<td>${item.deliverymanager === 'none' ? '물류(기관배송)' : item.deliverymanager === 'not' ? '내방' : item.deliverymanager === 'basic' ? '택배' : item.deliverymanager === 'supply' ? '공급업체' : item.deliverymanager || ''}</td>`;
                    str += `<td>${item.status === 'end' ? '배송완료' : item.status === 'wait' ? '배송대기' : item.status === 'back' ? '회수중' : item.status === 'backend' ? '회수완료' : item.status || ''}</td>`;
                    str += `<td>${item.chk === 'ok' ? '계약완료' : item.chk === 'cok' ? '취소계약완료' : item.chk === 'vok' ? '부분계약완료' : item.chk === 'n' ? '미계약' : ''}</td>`;
                    str += `</tr>`;
                });
            } else {
                str += '<tr class="exceltr"><td colspan="14" style="text-align:center;">데이터가 없습니다.</td></tr>';
            }
            
            str += '</tbody>';
            
            loadDataEfficiently(str);

            // 스타일 적용
            const orderlistexcel_styles = {
                ".exceltr td:nth-child(1), .order_excel_thead tr th:nth-child(1)": "100px",
                ".exceltr td:nth-child(2), .order_excel_thead tr th:nth-child(2)": "100px",
                ".exceltr td:nth-child(3), .order_excel_thead tr th:nth-child(3)": "100px", 
                ".exceltr td:nth-child(4), .order_excel_thead tr th:nth-child(4)": "110px",
                ".exceltr td:nth-child(5), .order_excel_thead tr th:nth-child(5)": "100px",
                ".exceltr td:nth-child(6), .order_excel_thead tr th:nth-child(6)": "150px",
                ".exceltr td:nth-child(7), .order_excel_thead tr th:nth-child(7)": "50px",
                ".exceltr td:nth-child(8), .order_excel_thead tr th:nth-child(8)": "200px",
                ".exceltr td:nth-child(9), .order_excel_thead tr th:nth-child(9)": "90px",
                ".exceltr td:nth-child(10), .order_excel_thead tr th:nth-child(10)": "100px",
                ".exceltr td:nth-child(11), .order_excel_thead tr th:nth-child(11)": "100px",
                ".exceltr td:nth-child(12), .order_excel_thead tr th:nth-child(12)": "150px",
                ".exceltr td:nth-child(13), .order_excel_thead tr th:nth-child(13)": "100px",
                ".exceltr td:nth-child(14), .order_excel_thead tr th:nth-child(14)": "150px",
                ".exceltr td:nth-child(14), .order_excel_thead tr th:nth-child(14)": "150px"
            };
            
            // 스타일 적용
            for(const selector in orderlistexcel_styles) {
                $(selector).css("width", orderlistexcel_styles[selector]);
            }
            Swal.hideLoading();
        });

    }


    
    async function installexcel(page,username,dates,datee,query,ccontract,ddelivery,pproduct,ccentername,mmanager,pphone,bbcode,pprintchk,cconfirm1,cconfirm2,ddeliverycar,mmemo,t_obj){ 
        if (window.isProcessing) return;
        window.isProcessing = true;
        Swal.showLoading();
        $('#form').val('');
        $('.money_excel_option').hide();
        $('.money_excel_info_area').hide();
        const installexcel_styles = {
            ".exceltr td:nth-child(1), .order_excel_thead tr th:nth-child(1)": "100px",
            ".exceltr td:nth-child(2), .order_excel_thead tr th:nth-child(2)": "100px",
            ".exceltr td:nth-child(3), .order_excel_thead tr th:nth-child(3)": "100px",
            ".exceltr td:nth-child(4), .order_excel_thead tr th:nth-child(4)": "110px",
            ".exceltr td:nth-child(5), .order_excel_thead tr th:nth-child(5)": "120px",
            ".exceltr td:nth-child(6), .order_excel_thead tr th:nth-child(6)": "150px",
            ".exceltr td:nth-child(7), .order_excel_thead tr th:nth-child(7)": "100px",
            ".exceltr td:nth-child(8), .order_excel_thead tr th:nth-child(8)": "120px",
            ".exceltr td:nth-child(9), .order_excel_thead tr th:nth-child(9)": "350px",
            ".exceltr td:nth-child(10), .order_excel_thead tr th:nth-child(10)": "100px",
            ".exceltr td:nth-child(11), .order_excel_thead tr th:nth-child(11)": "100px",
            ".exceltr td:nth-child(12), .order_excel_thead tr th:nth-child(12)": "80px",
            ".exceltr td:nth-child(13), .order_excel_thead tr th:nth-child(13)": "80px",
        };
        $('.exceltr,.order_excel_thead,.order_excel_tbody').remove();
        $('.exceltr').remove();
        $(t_obj).addClass('t_on');
        $('.order_excel_btn').not($(t_obj)).removeClass('t_on');
        $.ajax({
            url:"/orderlookupexcel",
            data:"company="+company+'&page='+page+'&username='+username+'&dates='+dates+'&datee='+datee+'&query='+query+'&contract='+ccontract+'&delivery='+ddelivery+'&product='+pproduct+'&centername='+ccentername+'&manager='+mmanager+'&phone='+pphone+'&bcode='+bbcode.replace(/ /g,'')+'&printchk='+pprintchk+'&confirm1='+cconfirm1+'&confirm2='+cconfirm2+'&deliverycar='+ddeliverycar+'&exceltype=install',
            type:'POST',
            dataType:"JSON",
            async:true,
            success:function(results){
                var str = '<thead class="order_excel_thead"><tr class="exceltr"><th>설치일자</th><th>수급자성명</th><th>장기요양인정번호</th><th>성별</th><th>제품코드</th><th>품목명</th><th>제품명</th><th>설치자</th><th>배송구분</th><th>설치장소</th><th>확인자</th><th>관계</th><th>방법</th><th>제품설명</th></tr></thead>';
                str += '<tbody class="order_excel_tbody">';
                const od = results.result;
                const od2 = results.result2;
                const od3 = results.result3;
                var plist = results.plist;
                var plistdic = {};
                let plistdic_name ={};
                for(pl of plist){
                    plistdic_name[pl.code]=[pl.name];
                    if(pl.target=='대여'){
                        plistdic[pl.code]=[pl.rentprice];
                        
                    }else if(pl.target=='구입'){
                        plistdic[pl.code]=[pl.buyprice];
                    }else if(pl.target=='구입 또는 대여'){
                        plistdic[pl.code]=[pl.buyprice,pl.rentprice];
                    }
                    
                }
                var str1 = '';
                var str2 = '';
                var cdate = '';
                var money = 0;
                let install_pname = '';
                $.each(od,function(i){
                    money=0;
                    
                    if(od[i].rentproduct==''){
                        str2 = '판매'; 
                        cdate = od[i].cancled.split(' ')[0];
                    }else{
                        str2 = '대여';
                        cdate = od[i].rentstart + '~' + od[i].rentend;
                    } 
                    if(od[i].chk=='ok'){
                        str1 = '계약완료';
                    }else if(od[i].chk=='n'){
                        str1 = '미계약';
                    }else if(od[i].chk=='cok'){
                        str1 = '취소계약';
                        str2 += '회수';
                    }
                    var prn = od[i].product.replace(/((블루,레드)|(네이비,베이지)|(오션블루, 버건디)|(오션블루,버건디))/g,'');
                    
                    if(od[i].target=='기초'){
                        if(str2 == '판매'){
                            if(prn.includes(',')){
                                var psp = prn.split(',');
                                for(fpsp of psp){
                                    //console.log(fpsp.split('|')[0])
                                    money = parseInt(plistdic[fpsp.split('|')[0]][0]);
                                    install_pname = plistdic_name[fpsp.split('|')[0]];
                                }
                                //console.log(money);
                            }else{
                                money = parseInt(plistdic[prn.split('|')[0]][0]);
                                install_pname = plistdic_name[prn.split('|')[0]];
                                //console.log(money);
                            }
                        }else if(str2 =='대여'){


                        }
                    }else{
                        if(od[i].money!=0&&od[i].money!=''){
                            //money = parseInt(od[i].money)/(parseInt(od[i].sale.replace('%',''))/100);
                            money = parseInt(plistdic[prn.split('|')[0]][0]);
                            install_pname = plistdic_name[prn.split('|')[0]];
                        }else{
                            money = parseInt(plistdic[prn.split('|')[0]][0]);
                            install_pname = plistdic_name[prn.split('|')[0]];
                        }
                        //console.log(money);
                    }
                    let od_delivery = od[i].deliverymanager;
                    let od_deliverytxt = '';
                    let info_type = '방문';
                    if(od_delivery=="none"){
                        od_deliverytxt = '물류(기관배송)';
                    }else if(od_delivery=='basic'){
                        od_deliverytxt = '택배배송';
                        info_type = '방문';
                    }else if(od_delivery=='not'){
                        od_deliverytxt = '내방';
                        info_type = '내방'
                    }else if(od_delivery=='clean'){
                        od_deliverytxt = '소독업체직배송';
                    }else if(od_delivery=='supply'){
                        od_deliverytxt = '공급업체직배송';
                        info_type = '유선'
                    }
                    let as_receipt_date = '';
                    let as_receipt_txt = '';
                    let as_receipt_enddate = '';
                    let as_receipt_endtxt = '';
                    
                    od3.forEach(function(obj,index){
                        if(obj.orderkey==od[i].num){
                            as_receipt_date += obj.receiptdate+'<br/>';
                            as_receipt_txt += obj.receipttxt+'<br/>';
                            as_receipt_enddate += obj.receiptenddate+'<br/>';
                            as_receipt_endtxt += obj.receiptendtxt+'<br/>';
                        }
                    });
                    var odr = od[i].product.replace(/((블루,레드)|(네이비,베이지)|(오션블루, 버건디)|(오션블루,버건디))/g,'');
                    var odbc = '';
                    let client_address = od[i].address +' '+ od[i].addressdetail;
                    let client_guardname = (od[i].guardname!=''&&od[i].guardname!='본인')?od[i].guardname:od[i].name;
                    let client_guardtarget = (od[i].guardname!=''&&od[i].guardname!='본인')?od[i].guardtarget:"본인";
                    if(client_guardtarget==null||client_guardtarget=="null")client_guardtarget='본인';
                    if(odr.includes(',')){
                        $.each(odr.split(','),function(z){
                            if(parseInt(od[i].buycnt.split(',')[z])>1){
                                $.each(od[i].buybcode.split(',')[z].split('|'),function(y){
                                    odbc = od[i].buybcode.split(',')[z].split('|')[y];
                                    if(odbc=='direct'||odbc==''||!odbc||odbc==null)odbc="미입력";
                                    str += '<tr class="exceltr" onclick="excel_table_click(this,'+od[i].num+',\''+od[i].number+'\')"><td>'+cdate+'</td><td>'+od[i].name+'</td><td>'+od[i].number+'</td><td>'+od[i].gender+'</td><td>'+odr.split(',')[z].split('|')[0]+'</td><td>'+plistdic_name[odr.split(',')[z].split('|')[0]]+'</td><td>'+odr.split(',')[z].split('|')[1]+'</td><td>'+((company=="콤슨경기사업소"||company=="케어팜")?((odr.split(',')[z].split('|')[1]=='CV200'||odr.split(',')[z].split('|')[1]=='CE460'||odr.split(',')[z].split('|')[1]=='CE460'||odr.split(',')[z].split('|')[1]=='CE400'||odr.split(',')[z].split('|')[1]=='CL300'||odr.split(',')[z].split('|')[1]=='CW400'||odr.split(',')[z].split('|')[1]=='CE600'||odr.split(',')[z].split('|')[1]=='CE440'||od[i].product.split('|')[1]=='CV100')?"제조사":od[i].installer):od[i].manager)+'</td><td>'+od_deliverytxt+'</td><td>'+client_address+'</td><td>'+client_guardname+'</td><td>'+client_guardtarget+'</td><td>'+info_type+'</td><td>설명함</td></tr>';
                                });
                            }else{
                                
                                odbc = od[i].buybcode.split(',')[z];
                                if(odbc=='direct'||odbc==''||!odbc||odbc==null)odbc="미입력";
                                str += '<tr class="exceltr" onclick="excel_table_click(this,'+od[i].num+',\''+od[i].number+'\')"><td>'+cdate+'</td><td>'+od[i].name+'</td><td>'+od[i].number+'</td><td>'+od[i].gender+'</td><td>'+odr.split(',')[z].split('|')[0]+'</td><td>'+plistdic_name[odr.split(',')[z].split('|')[0]]+'</td><td>'+odr.split(',')[z].split('|')[1]+'</td><td>'+((company=="콤슨경기사업소"||company=="케어팜")?((odr.split(',')[z].split('|')[1]=='CV200'||odr.split(',')[z].split('|')[1]=='CE460'||odr.split(',')[z].split('|')[1]=='CE460'||odr.split(',')[z].split('|')[1]=='CE400'||odr.split(',')[z].split('|')[1]=='CL300'||odr.split(',')[z].split('|')[1]=='CW400'||odr.split(',')[z].split('|')[1]=='CE600'||odr.split(',')[z].split('|')[1]=='CE440'||od[i].product.split('|')[1]=='CV100')?"제조사":od[i].installer):od[i].manager)+'</td><td>'+od_deliverytxt+'</td><td>'+client_address+'</td><td>'+client_guardname+'</td><td>'+client_guardtarget+'</td><td>'+info_type+'</td><td>설명함</td></tr>';
                            }
                        });
                    }else{
                        if(parseInt(od[i].buycnt)>1){
                            $.each(od[i].buybcode.split('|'),function(y){
                                odbc = od[i].buybcode.split('|')[y];
                                if(odbc=='direct'||odbc==''||!odbc||odbc==null)odbc="미입력";
                                str += '<tr class="exceltr" onclick="excel_table_click(this,'+od[i].num+',\''+od[i].number+'\')"><td>'+cdate+'</td><td>'+od[i].name+'</td><td>'+od[i].number+'</td><td>'+od[i].gender+'</td><td>'+od[i].product.split('|')[0]+'</td><td>'+plistdic_name[od[i].product.split('|')[0]]+'</td><td>'+od[i].product.split('|')[1]+'</td><td>'+((company=="콤슨경기사업소"||company=="케어팜")?((od[i].product.split('|')[1]=='CV200'||od[i].product.split('|')[1]=='CE460'||od[i].product.split('|')[1]=='CE460'||od[i].product.split('|')[1]=='CE400'||od[i].product.split('|')[1]=='CL300'||od[i].product.split('|')[1]=='CW400'||od[i].product.split('|')[1]=='CE600'||od[i].product.split('|')[1]=='CE440'||od[i].product.split('|')[1]=='CV100')?"제조사":od[i].installer):od[i].manager)+'</td><td>'+od_deliverytxt+'</td><td>'+client_address+'</td><td>'+client_guardname+'</td><td>'+client_guardtarget+'</td><td>'+info_type+'</td><td>설명함</td></tr>';

                            });
                        }else{
                            odbc = od[i].buybcode;
                            if(odbc=='direct'||odbc==''||!odbc||odbc==null)odbc="미입력";
                            str += '<tr class="exceltr" onclick="excel_table_click(this,'+od[i].num+',\''+od[i].number+'\')"><td>'+cdate+'</td><td>'+od[i].name+'</td><td>'+od[i].number+'</td><td>'+od[i].gender+'</td><td>'+od[i].product.split('|')[0]+'</td><td>'+plistdic_name[od[i].product.split('|')[0]]+'</td><td>'+od[i].product.split('|')[1]+'</td><td>'+((company=="콤슨경기사업소"||company=="케어팜")?((od[i].product.split('|')[1]=='CV200'||od[i].product.split('|')[1]=='CE460'||od[i].product.split('|')[1]=='CE460'||od[i].product.split('|')[1]=='CE400'||od[i].product.split('|')[1]=='CL300'||od[i].product.split('|')[1]=='CW400'||od[i].product.split('|')[1]=='CE600'||od[i].product.split('|')[1]=='CE440'||od[i].product.split('|')[1]=='CV100')?"제조사":od[i].installer):od[i].manager)+'</td><td>'+od_deliverytxt+'</td><td>'+client_address+'</td><td>'+client_guardname+'</td><td>'+client_guardtarget+'</td><td>'+info_type+'</td><td>설명함</td></tr>';
                        }
                    }                    
                });
                //str += '<tr class="exceltr"><td colspan="11"></td></tr>';
                var odbc = '';
                $.each(od2,function(i){
                    
                    str2 = '대여';
                    cdate = od2[i].rentstart;
                    if(od2[i].chk=='ok'){
                        str1 = '계약완료';
                    }else if(od2[i].chk=='n'){
                        str1 = '미계약';
                    }else if(od2[i].chk=='cok'){
                        str1 = '취소계약';
                        str2 += '회수';
                    }
                    var odrp = od2[i].product;
                    let od_delivery = od2[i].deliverymanager;
                    let od_deliverytxt = '';
                    let info_type = '방문';
                    if(od_delivery=="none"){
                        od_deliverytxt = '물류(기관배송)';
                    }else if(od_delivery=='basic'){
                        od_deliverytxt = '택배배송';
                        info_type = '유선';
                    }else if(od_delivery=='not'){
                        od_deliverytxt = '내방';
                        info_type = '내방';
                    }else if(od_delivery=='clean'){
                        od_deliverytxt = '소독업체직배송';
                    }else if(od_delivery=='supply'){
                        od_deliverytxt = '공급업체직배송';
                    }
                    let as_receipt_date = '';
                    let as_receipt_txt = '';
                    let as_receipt_enddate = '';
                    let as_receipt_endtxt = '';
                    od3.forEach(function(obj,index){
                        if(obj.orderkey==od2[i].num){
                            as_receipt_date += obj.receiptdate+'<br/>';
                            as_receipt_txt += obj.receipttxt+'<br/>';
                            as_receipt_enddate += obj.receiptenddate+'<br/>';
                            as_receipt_endtxt += obj.receiptendtxt+'<br/>';
                        }
                    });
                    let client_address = od2[i].address +' '+ od2[i].addressdetail;
                    let client_guardname = (od2[i].guardname!=''&&od2[i].guardname!='본인')?od2[i].guardname:od2[i].name;
                    let client_guardtarget = (od2[i].guardname!=''&&od2[i].guardname!='본인')?od2[i].guardtarget:"본인";
                    if(client_guardtarget==null||client_guardtarget=="null")client_guardtarget='본인';
                    if(odrp.includes(',')){
                        $.each(odrp.split(','),function(z){
                            odbc = od2[i].buybcode.split(',')[z];
                            if(odbc=='direct'||odbc==''||!odbc||odbc==null)odbc="미입력";
                            str += '<tr class="exceltr" onclick="excel_table_click(this,'+od2[i].num+',\''+od2[i].number+'\')"><td>'+cdate+'</td><td>'+od2[i].name+'</td><td>'+od2[i].number+'</td><td>'+od2[i].gender+'</td><td>'+odrp.split(',')[z].split('|')[0]+'</td><td>'+plistdic_name[odrp.split(',')[z].split('|')[0]]+'</td><td>'+odrp.split(',')[z].split('|')[1]+'</td><td>'+((company=="콤슨경기사업소"||company=="케어팜")?od2[i].installer:od2[i].manager)+'</td><td>'+od_deliverytxt+'</td><td>'+client_address+'</td><td>'+client_guardname+'</td><td>'+client_guardtarget+'</td><td>'+info_type+'</td><td>설명함</td></tr>';
                        });
                    }else{
                        odbc = od2[i].buybcode;
                        if(odbc=='direct'||odbc==''||!odbc||odbc==null)odbc="미입력";
                        str += '<tr class="exceltr" onclick="excel_table_click(this,'+od2[i].num+',\''+od2[i].number+'\')"><td>'+cdate+'</td><td>'+od2[i].name+'</td><td>'+od2[i].number+'</td><td>'+od2[i].gender+'</td><td>'+od2[i].product.split('|')[0]+'</td><td>'+plistdic_name[od2[i].product.split('|')[0]]+'</td><td>'+od2[i].product.split('|')[1]+'</td><td>'+((company=="콤슨경기사업소"||company=="케어팜")?od2[i].installer:od2[i].manager)+'</td><td>'+od_deliverytxt+'</td><td>'+client_address+'</td><td>'+client_guardname+'</td><td>'+client_guardtarget+'</td><td>'+info_type+'</td><td>설명함</td></tr>';

                    }

                });
                str+="</tbody>";
                // $('.excelbody').append(str);
                loadDataEfficiently(str);
                //exelchange('i');
                applyStyles(installexcel_styles);
                Swal.hideLoading();
            }
        });
    }
    
    // 스타일을 적용하는 함수
    function applyStyles(styles) {
        for (const selector in styles) {
            const elements = document.querySelectorAll(selector);
            elements.forEach(element => {
                element.style.width = styles[selector];
            });
        }
    }

    async function excel_table_click(tab_td,key,number){
        // $(tab_td).click(function(){
            if(($(tab_td).hasClass('tablemenu')!=1&&$(tab_td).hasClass('chkbox')!=true&&$(tab_td).hasClass('copyclip')!=true)){
                var targeted_popup_class = $('[data-popup-open2]').attr('data-popup-open2');
                $('[data-popup="' + targeted_popup_class + '"]').fadeIn(350);
                await $('.clientmodify').attr('src',"//localhost:802/ordermodify/1/"+uid+"/"+number+"/"+key+"?relid="+uid);
                window.frames['clientmodify'].src="//localhost:802/ordermodify/1/"+uid+"/"+number+"/"+key+"?relid="+uid;
                //document.getElementById('clientmodify').onload = await function() {
                    //$('[data-popup="' + targeted_popup_class + '"]').fadeIn(350);
                window.frames['clientmodify'].focus();
                //}
                
                //e.preventDefault();
            }
        // });
    }

    function payment_history_remove(num,key){
        axios({
            method:'post',
            url:'/pay_delete',
            data:{
                company:company,
                key:num
            }
        }).then(res=>{
            const data = res.data;
            if(data.code==200){
                pay_lookup(key).then(res=>{
                    // if($('.rentcls').length>0){
                    //     $('.pay_date_area,.payment_rent_date').show();
                    //     $('.pay_input').prop('readonly', true);
                    // }
                });
            }
        })
    }

    async function pay_lookup(key){
        console.log("pay_lookup",key)
        return axios({
            method:"post",
            url:"/pay_lookup",
            data:{
                key:key,
                company:company
            }
        }).then(res=>{
            const data = res.data;
            if(data.code==200){
                $(".payment_history_tr").remove();
                let str = {
                    tr : ``
                };

                data.data.forEach(function(obj,index){
                    str.tr += ` <tr class="payment_history_tr">
                                    <td>${obj.dw == "" ? "입금" : "환불"}</td><td>${obj.type == 0 ? "현금" : obj.type == 1 ? "카드" : "이체"}</td><td>${parseInt(obj.price).toLocaleString()}원</td><td class="payment_rent_date" style="display:none;">~${obj.rentdate}</td><td>${obj.date}</td><td>${obj.txt}</td><td><!--div class="material-icons payment_history_remove" onclick="payment_history_remove(${obj.num},${key})">close</div--></td>
                                </tr>`;
                });
                $('.payment_history_tbody').append(str.tr);
            }
            return data;
        });
    }

    function pay_confirm_btn(key,btn_obj){
        let pay_money = $('.pay_input').val().replace(/[^0-9]/g,'');
        let pay_type = $('.pay_type').val();
        let pay_sdate = $('#pay_date1').val();
        let pay_edate = $('#pay_date2').val();
        let pay_insert_date = $('.pay_insert_date').val();
        let pay_txt = $('.pay_txt').val();
        let originalInput = $(btn_obj).closest('.payment-modal-background').data('originalInput');
        console.log("originalInput",pay_sdate,pay_edate)
        if(pay_money!='' && pay_money!='0' && parseInt(pay_money)>0){
            let return_data = {
                'paymoney':parseInt(pay_money),
                'paytype':pay_type,
                'paysdate':pay_sdate||"",
                'paydate':pay_edate||"",
                'payinsertdate':pay_insert_date,
                'key':key,
                'company':company,
                'paytxt':pay_txt,
                'action':0
            }
            pay_return_data(return_data,originalInput);
            // product_return_data(return_data);
        }else{
            // Swal.fire(
            //     '입금처리액이 0원입니다.',
            //     '',
            //     'error'
            // );
        }
    }

    function pay_return_data(x,txt_obj){
        axios.post('/pay_return',x).then((result)=>{
            if(result.data.code==200){
                console.log("txt_obj",txt_obj)
                $(txt_obj).text(parseInt($(txt_obj).text())+parseInt(x.paymoney));
                // Swal.fire(
                //     '입금처리완료',
                //     '',
                //     'success'
                // ).then((result)=>{
                //     location.reload();
                // });
                document.querySelector('.payment-modal-background').remove();
                // location.reload();
            }else{
                Swal.fire(
                    '입금처리실패',
                    '',
                    'error'
                );
            }
        });
    }

    function payment_input_modal(key,name,number,txt_obj,type){
        
        // 모달 배경 생성
        const modalBackground = document.createElement('div');
        modalBackground.style.position = 'fixed';
        modalBackground.style.top = '0';
        modalBackground.style.left = '0';
        modalBackground.style.width = '100%';
        modalBackground.style.height = '100%';
        modalBackground.style.backgroundColor = 'rgba(0,0,0,0.5)';
        modalBackground.style.zIndex = '9999';
        modalBackground.className = 'payment-modal-background';

        $(modalBackground).data('originalInput', txt_obj);

        // 모달 컨테이너 생성
        const modalContainer = document.createElement('div');
        modalContainer.style.position = 'fixed';
        modalContainer.style.top = '50%';
        modalContainer.style.left = '70%';
        modalContainer.style.transform = 'translate(-50%, -50%)';
        modalContainer.style.backgroundColor = '#fff';
        modalContainer.style.padding = '20px';
        modalContainer.style.borderRadius = '5px';
        modalContainer.style.minWidth = '550px';
        modalContainer.style.display = 'flex';
        modalContainer.style.flexDirection = 'column';
        modalContainer.style.alignItems = 'center';
        modalContainer.style.justifyContent = 'center';

        let orderdate = $(txt_obj).parents("tr").children("td").eq(1).text();
        // 모달 내용 생성
        const modalContent = document.createElement('div');
        modalContent.innerHTML = `
           <style>
            .payment-form {
                margin-bottom: 20px;
                text-align: center;
            }
            .payment-form .form-row {
                display: flex;
                align-items: center;
                justify-content: center;
                margin-bottom: 15px;
                font-weight: bold;
            }
            .payment-form .form-label {
                margin-right: 10px;
            }
            .payment-form .form-input {
                width: 100px;
                height: 30px;
                font-size: 15px;
                font-weight: bold;
                text-align: center;
            }
            .payment-history {
                margin-top: 20px;
                text-align: center;
            }
            .payment-history-title {
                font-weight: bold;
                margin-bottom: 15px;
                text-align: center;
            }
            .payment-history table {
                width: 100%;
                border-collapse: collapse;
                margin: 0 auto;
            }
            .payment-history th {
                padding: 8px;
                text-align: center;
                border-bottom: 2px solid #ddd;
            }
            .payment-history td {
                padding: 8px;
                border-bottom: 1px solid #eee;
                text-align: center;
            }
            .payment_history_tbody{
                text-align: center;
                font-weight: bold;
            }
            .payment_history_tr{
                font-weight:bold;
                font-size:18px;
            }
           </style>

           <div class="payment-form">
                <div>
                    <span class="form-label">수급자명 :</span>
                    <span class="form-input">${name}</span>
                    
                </div>
                <div>
                    <span class="form-label">장기요양인정번호 :</span>
                    <span class="form-input">${number}</span>
                </div>
                <br/>
                <div class="form-row">
                    <span class="form-label">방식 :</span>
                    <select class="form-input pay_type">
                        <option value="0">현금</option>
                        <option value="1">카드</option>
                        <option value="2">이체</option>
                    </select>
                </div>
                
                <div class="form-row" style="display:${type=='rent'?'block':'none'}">
                    <span class="form-label">대여입금기간 :</span>
                    <input type="text" id="pay_date1" class="form-input pay_date" value="${orderdate.split('~')[0]}" onchange="if(this.value > document.getElementById('pay_date2').value) document.getElementById('pay_date2').value = this.value">~
                    <input type="text" id="pay_date2" class="form-input pay_date" value="${orderdate.split('~')[1]}" onchange="if(this.value < document.getElementById('pay_date1').value) this.value = document.getElementById('pay_date1').value">
                </div>

                <div class="form-row">
                    <span class="form-label">금액 :</span>
                    <input type="number" class="form-input pay_input" value="0">
                </div>

                <div class="form-row">
                    <span class="form-label">일자 :</span>
                    <input type="text" id="pay_insert_date" class="form-input pay_insert_date" value="<%= new Date().toISOString().slice(0,10) %>">
                </div>
                <div>
                    <span class="form-label">비고 :</span>
                    <textarea class="form-input pay_txt" style="width:150px; height:100px; font-size:13px;"></textarea>
                </div>
           </div>

           <div class="payment-history">
                <div class="payment-history-title">[ 주문서 입금내역 ]</div>
                <table>
                    <thead class="payment_history_thead">
                        <tr>
                            <th>구분</th>
                            <th>방식</th>
                            <th>금액</th>
                            <th class="payment_rent_date" style="display:none;">기간</th>
                            <th>입금일</th>
                            <th>비고</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody class="payment_history_tbody">
                    </tbody>
                </table>
           </div>

        <div class="payment-buttons" style="text-align: center; margin-top: 15px;">
            <button class="pay_confirm" style="padding: 8px 20px; margin: 0 5px; background-color: rgb(48, 133, 214); color: white; border: none; border-radius: 4px; cursor: pointer;" onclick="pay_confirm_btn(${key},this)">입금</button>
            <!--button class="pay_return" style="padding: 8px 20px; margin: 0 5px; background-color: #f44336; color: white; border: none; border-radius: 4px; cursor: pointer;">환불</button-->
        </div>
        `;

        // 닫기 버튼 생성
        const closeButton = document.createElement('button');
        closeButton.innerText = '닫기';
        closeButton.style.marginTop = '15px';
        closeButton.style.padding = '5px 15px';
        closeButton.style.backgroundColor = '#ddd';
        closeButton.style.border = 'none';
        closeButton.style.borderRadius = '3px';
        closeButton.style.cursor = 'pointer';

        // 모달 조립
        modalContainer.appendChild(modalContent);
        modalContainer.appendChild(closeButton);
        modalBackground.appendChild(modalContainer);
        document.body.appendChild(modalBackground);

        // 닫기 이벤트
        closeButton.onclick = function() {
            document.body.removeChild(modalBackground);
        }

        modalBackground.onclick = function(e) {
            if (e.target === modalBackground) {
                document.body.removeChild(modalBackground);
            }
        }

        $("#pay_date1, #pay_date2, #pay_insert_date" ).datepicker({
            changeMonth: true,
            changeYear: true
        });
        $("#pay_date1, #pay_date2, #pay_insert_date" ).datepicker( "option", "showAnim", "slide" );
        $('.pay_input, .pay_insert_date').prop('readonly', false);
        pay_lookup(key).then(res=>{

        });
    }

    const filter_obj = {
        // 현재 필터 상태를 저장
        currentFilters: {
            payment: 'all',
            product: 'all'
        },

        // 행이 현재 필터 조건에 맞는지 확인하는 함수
        shouldShowRow: function(row) {
            const paymentCell = row.querySelector('td:nth-child(14)');
            const productCell = row.querySelector('td:nth-child(12)');
            const dateCell = row.querySelector('td:nth-child(2)');
            
            // 결제 필터 체크
            let showByPayment = true;
            if (this.currentFilters.payment !== 'all' && paymentCell) {
                const paymentAmount = parseInt(paymentCell.textContent.replace(/,/g, '')) || 0;
                showByPayment = this.currentFilters.payment === 'paid' ? 
                            paymentAmount > 0 : 
                            paymentAmount === 0;
            }

            // 제품 필터 체크
            let showByProduct = true;
            if (this.currentFilters.product !== 'all' && productCell) {
                const productText = productCell.textContent;
                if (this.currentFilters.product === 'buy') {
                    showByProduct = [
                        "간이변기", "경사로(실내용)", "미끄럼 방지용품", "목욕의자",
                        "안전손잡이", "욕창예방 매트리스", "욕창예방방석", "이동변기",
                        "지팡이", "자세변환용구", "성인용보행기", "요실금팬티"
                    ].some(product => productText.includes(product)) && !dateCell.textContent.includes("~");
                } else if (this.currentFilters.product === 'rent') {
                    showByProduct = [
                        "전동침대", "수동휠체어", "경사로(실외용)", 
                        "이동욕조", "배회감지기", "욕창예방 매트리스"
                    ].some(product => productText.includes(product)) && dateCell.textContent.includes("~");
                }
            }

            return showByPayment && showByProduct;
        },

        // 필터 적용
        applyFilters: function() {
            const rows = document.querySelectorAll('.order_excel_tbody .exceltr');
            
            // 이미 처리된 행을 추적하기 위한 Set
            const processedRows = new Set();
            
            // rowspan이 있는 행들을 그룹화
            const rowGroups = [];
            rows.forEach(row => {
                if (processedRows.has(row)) return;
                
                // 병합된 셀이 있는지 확인 (예: 셀이 rowspan 속성을 가지고 있는지)
                const hasRowspan = Array.from(row.querySelectorAll('td')).some(cell => cell.hasAttribute('rowspan'));
                
                if (hasRowspan) {
                    // rowspan 값을 찾음
                    const rowspanCell = Array.from(row.querySelectorAll('td')).find(cell => cell.hasAttribute('rowspan'));
                    const rowspan = parseInt(rowspanCell.getAttribute('rowspan'));
                    const group = [];
                    let currentRow = row;
                    
                    for (let i = 0; i < rowspan && currentRow; i++) {
                        group.push(currentRow);
                        processedRows.add(currentRow);
                        currentRow = currentRow.nextElementSibling;
                    }
                    rowGroups.push(group);
                } else {
                    rowGroups.push([row]);
                    processedRows.add(row);
                }
            });
            
            // 각 그룹에 필터 적용
            rowGroups.forEach(group => {
                const show = this.shouldShowRow(group[0]); // 그룹의 첫 번째 행으로 판단
                
                // 그룹 내의 모든 행에 표시 여부 적용
                group.forEach(row => {
                    row.style.display = show ? '' : 'none';
                });
            });
        },

        // 결제 필터
        filterPaymentRows: function(value) {
            this.currentFilters.payment = value;
            this.applyFilters();
            // 모든 체크박스 해제
            document.querySelectorAll('.excel_all_check').forEach(checkbox => {
                checkbox.checked = false;
            });
        },

        // 제품 필터
        filterProductRows: function(value) {
            this.currentFilters.product = value;
            this.applyFilters();
            // 모든 체크박스 해제
            document.querySelectorAll('.excel_all_check').forEach(checkbox => {
                checkbox.checked = false;
            });
        },

        filterNameRows: function(value) {
            this.currentFilters.name = value;
            
            // 정렬 전 테이블 상태 저장
            const tbody = document.querySelector('.order_excel_tbody');
            const originalHTML = tbody.innerHTML;
            
            // 정렬 실행
            try {
                let rows = Array.from(document.querySelectorAll('.order_excel_tbody .exceltr'));
                
                // 이미 처리된 행을 추적하기 위한 Set
                const processedRows = new Set();
                
                // rowspan이 있는 행들을 그룹화
                const rowGroups = [];
                rows.forEach(row => {
                    if (processedRows.has(row)) return;
                    
                    // 병합된 셀이 있는지 확인 (예: 셀이 rowspan 속성을 가지고 있는지)
                    const hasRowspan = Array.from(row.querySelectorAll('td')).some(cell => cell.hasAttribute('rowspan'));
                    
                    if (hasRowspan) {
                        // rowspan 값을 찾음
                        const rowspanCell = Array.from(row.querySelectorAll('td')).find(cell => cell.hasAttribute('rowspan'));
                        const rowspan = parseInt(rowspanCell.getAttribute('rowspan'));
                        const group = [];
                        let currentRow = row;
                        
                        for (let i = 0; i < rowspan && currentRow; i++) {
                            group.push(currentRow);
                            processedRows.add(currentRow);
                            currentRow = currentRow.nextElementSibling;
                        }
                        rowGroups.push(group);
                    } else {
                        rowGroups.push([row]);
                        processedRows.add(row);
                    }
                });
                
                // 그룹을 수급자명(td:nth-child(3))으로 정렬
                rowGroups.sort((a, b) => {
                    const aElement = a[0].querySelector('td:nth-child(3)');
                    const bElement = b[0].querySelector('td:nth-child(3)');
                    const aText = aElement && aElement.textContent ? aElement.textContent : '';
                    const bText = bElement && bElement.textContent ? bElement.textContent : '';
                    
                    const aDateElement = a[0].querySelector('td:nth-child(2)');
                    const bDateElement = b[0].querySelector('td:nth-child(2)');
                    const aDateText = aDateElement && aDateElement.textContent ? aDateElement.textContent : '';
                    const bDateText = bDateElement && bDateElement.textContent ? bDateElement.textContent : '';
                    const aDate = aDateText.split('~')[0] || '';
                    const bDate = bDateText.split('~')[0] || '';
                    
                    if (value === "asc") {
                        return aText.localeCompare(bText, 'ko');
                    } else if (value === "desc") {
                        return bText.localeCompare(aText, 'ko');
                    } else if (value === "all"){
                        return bDate.localeCompare(aDate);
                    }
                    return 0;
                });
                
                // 정렬된 그룹을 다시 tbody에 추가
                tbody.innerHTML = '';
                rowGroups.forEach(group => {
                    group.forEach(row => tbody.appendChild(row));
                });
                
            } catch (error) {
                console.error('정렬 중 오류 발생:', error);
                // 오류 발생 시 원래 상태로 복원
                tbody.innerHTML = originalHTML;
            }
            
            // 필터 적용
            this.applyFilters();
            
            // 모든 체크박스 해제
            document.querySelectorAll('.excel_all_check').forEach(checkbox => {
                checkbox.checked = false;
            });
        }
    };

    async function moneyexcel(page,username,dates,datee,query,ccontract,ddelivery,pproduct,ccentername,mmanager,pphone,bbcode,pprintchk,cconfirm1,cconfirm2,ddeliverycar,mmemo,t_obj){  
        if (window.isProcessing) return;
        window.isProcessing = true;
        Swal.showLoading();  
        if(daysBetweenDates(dates,datee)>60){
            Swal.fire({
                title: '최대 60일까지만 조회가 가능합니다.',
                icon: 'error',
                showCancelButton: false,
                showConfirmButton: true,
                confirmButtonText: '확인'
            });
            return;
        }
        $('#form').val(''); 
        $('.money_excel_option').show();    
        $('.money_excel_info_area').show();
        const moneyexcel_styles = {
            ".exceltr td:nth-child(1), .order_excel_thead tr th:nth-child(1)": "30px",
            ".exceltr td:nth-child(2), .order_excel_thead tr th:nth-child(2)": "100px",
            ".exceltr td:nth-child(3), .order_excel_thead tr th:nth-child(3)": "100px", 
            ".exceltr td:nth-child(4), .order_excel_thead tr th:nth-child(4)": "110px",
            ".exceltr td:nth-child(5), .order_excel_thead tr th:nth-child(5)": "100px",
            ".exceltr td:nth-child(6), .order_excel_thead tr th:nth-child(6)": "100px",
            ".exceltr td:nth-child(7), .order_excel_thead tr th:nth-child(7)": "80px",
            ".exceltr td:nth-child(8), .order_excel_thead tr th:nth-child(8)": "90px",
            ".exceltr td:nth-child(9), .order_excel_thead tr th:nth-child(9)": "90px",
            ".exceltr td:nth-child(10), .order_excel_thead tr th:nth-child(10)": "100px",
            ".exceltr td:nth-child(11), .order_excel_thead tr th:nth-child(11)": "100px",
            ".exceltr td:nth-child(12), .order_excel_thead tr th:nth-child(12)": "150px",
            ".exceltr td:nth-child(13), .order_excel_thead tr th:nth-child(13)": "150px",
            ".exceltr td:nth-child(14), .order_excel_thead tr th:nth-child(14)": "150px",
            ".exceltr td:nth-child(15), .order_excel_thead tr th:nth-child(15)": "80px",
            ".exceltr td:nth-child(16), .order_excel_thead tr th:nth-child(16)": "100px",
            ".exceltr td:nth-child(17), .order_excel_thead tr th:nth-child(17)": "120px",
            ".exceltr td:nth-child(18), .order_excel_thead tr th:nth-child(18)": "120px",
            ".exceltr td:nth-child(19), .order_excel_thead tr th:nth-child(19)": "18px",
        };
        
        $(t_obj).addClass('t_on');
        $('.order_excel_btn').not($(t_obj)).removeClass('t_on');
        //Swal.showLoading();
        //Swal.showValidationMessage("엑셀변환중입니다...");
        //Swal.disableButtons();
        let now = new Date();
        let year = now.getFullYear();
        let mon = (now.getMonth() + 1) > 9 ? '' + (now.getMonth() + 1) : '0' + (now.getMonth() + 1);
        let day = now.getDate() > 9 ? '' + now.getDate() : '0' + now.getDate();
        let chan_val = year + '-' + mon + '-' + day;
        

        let startDate = new Date(dates);
        let endDate = new Date(datee);
        let months = getMonthsBetweenDates(startDate, endDate);

        let money_option1 = $('.money_excel_option1').is(":checked");
        console.log("moeny_option1",money_option1)
        $('.exceltr,.order_excel_thead,.order_excel_tbody').remove();
        let share_chk_obj = [];
        $('.share_chk').each(function(){
            if($(this).is(':checked')){
                if("<%=company%>"!=$(this).val()){
                    share_chk_obj.push($(this).val());
                }
            }
        });
        $.ajax({
            url:"/orderlookupexcel",
            data:"company="+company+'&page='+page+'&username='+username+'&dates='+dates+'&datee='+datee+'&query='+query+'&contract='+ccontract+'&delivery='+ddelivery+'&product='+pproduct+'&centername='+ccentername+'&manager='+mmanager+'&phone='+pphone+'&bcode='+bbcode.replace(/ /g,'')+'&printchk='+pprintchk+'&confirm1='+cconfirm1+'&confirm2='+cconfirm2+'&deliverycar='+ddeliverycar+'&moneyoption1='+money_option1+'&share_chk_obj='+share_chk_obj,
            type:'POST',
            dataType:"JSON",
            async:true,
            success:function(results){
                let money_info_area = {
                    buy_total_money : 0,
                    buy_money : 0,
                    rent_total_money : 0,
                    rent_money : 0,
                    buy_nomoney : 0,
                    rent_nomoney : 0,
                }
                var str = '<thead class="order_excel_thead"><tr class="exceltr">' + 
                    '<th><input type="checkbox" class="" style="width:21px; height:21px;" onclick="$(\'.excel_all_check:visible\').prop(\'checked\', this.checked)"></th>' +
                    '<th>계약일자</th>' +
                    '<th>수급자명' +
                        '<div style="display:inline-block; margin-left:5px; cursor:pointer;">' +
                            '<select onchange="filter_obj.filterNameRows(this.value)" style="width:100%; padding:2px; color:#000;">' +
                                '<option value="all">계약일자</option>' +
                                '<option value="asc">오름차순</option>' +
                                '<option value="desc">내림차순</option>' +
                            '</select>' +
                        '</div>' +
                    '</th>' +
                    '<th>장기요양인정번호</th>' +
                    '<th>생년월일</th>' +
                    '<th>대상자구분</th>' +
                    '<th>본인부담율</th>' +
                    '<th>본인부담금</th>' +
                    '<th>공단부담금</th>'+
                    '<th>비급여</th>' +
                    '<th>담당자</th>' +
                    '<th>센터명</th>' +
                    '<th>품목' +
                        '<div style="display:inline-block; margin-left:5px; cursor:pointer;">' +
                            '<select onchange="filter_obj.filterProductRows(this.value)" style="width:100%; padding:2px; color:#000;">' +
                                '<option value="all">전체</option>' +
                                '<option value="buy">판매</option>' +
                                '<option value="rent">대여</option>' +
                            '</select>' +
                        '</div>' +
                    '</th>' +
                    '<th>품목명</th>' +
                    '<th>입금여부<br/>' +
                    '<select onchange="filter_obj.filterPaymentRows(this.value)" style="width:100%; padding:2px; color:#000;">' +
                        '<option value="all">전체</option>' +
                        '<option value="paid">입금</option>' +
                        '<option value="unpaid">미입금</option>' +
                    '</select>' +
                    '</th>' +
                    '<th>입금방식</th>' +
                    '<th>입금일자</th>' +
                    '<th>과세구분</th>' +
                    '<th></th>'
                '</tr></thead>';
                str += '<tbody class="order_excel_tbody">';
                const payment = results.payment;
                console.log(payment,"payment");
                const payment_obj_price = {};
                const payment_obj_type = {};
                payment.forEach(function(obj,index){
                    if(payment_obj_price.hasOwnProperty(obj.orderkey)){
                        payment_obj_price[obj.orderkey].price = (payment_obj_price[obj.orderkey].price || 0) + parseInt(obj.price || 0);
                        payment_obj_price[obj.orderkey].rentdate = obj.rentdate;
                        payment_obj_price[obj.orderkey].date = obj.date;
                    }else{
                        payment_obj_price[obj.orderkey] = {
                            price: parseInt(obj.price || 0),
                            rentdate: obj.rentdate,
                            date: obj.date
                        };
                    }
                    let type_text = "현금";
                    if(obj.type == 1){
                        type_text = "카드";
                    }else if(obj.type == 2){
                        type_text = "이체";
                    }else{
                        type_text = "현금";
                    }
                    if(payment_obj_type.hasOwnProperty(obj.orderkey)){
                        
                        
                        if(payment_obj_type[obj.orderkey]!=obj.type){
                            payment_obj_type[obj.orderkey] += "+"+type_text;
                        }
                    }else{
                        payment_obj_type[obj.orderkey] = type_text;
                    }
                    
                });
                console.log(payment_obj_price,payment_obj_type)
                const od = results.result;
                const od2 = results.result2;
                const od3 = results.result3;
                var plist = results.plist;
                var plistdic_rent = {};
                var plistdic_buy = {};
                var plistdic_name = {};
                var plistdic_tax = {};
                for(pl of plist){
                    plistdic_tax[pl.code] = [pl.tax];
                    plistdic_name[pl.code] = [pl.name,pl.name2];
                    if(pl.target=='대여'){
                        if(!Object.keys(plistdic_rent).includes(pl.code))plistdic_rent[pl.code] = [];
                        plistdic_rent[pl.code].push(pl.rentprice+'|'+pl.date);
                        // plistdic[pl.code+'|'+pl.date]=[pl.rentprice];
                    }else if(pl.target=='구입'){
                        if(!Object.keys(plistdic_buy).includes(pl.code))plistdic_buy[pl.code] = [];
                        plistdic_buy[pl.code].push(pl.buyprice+'|'+pl.date);
                    }else if(pl.target=='구입 또는 대여'){
                        if(!Object.keys(plistdic_buy).includes(pl.code))plistdic_buy[pl.code] = [];
                        plistdic_buy[pl.code].push(pl.buyprice+'|'+pl.date);
                        if(!Object.keys(plistdic_rent).includes(pl.code))plistdic_rent[pl.code] = [];
                        plistdic_rent[pl.code].push(pl.rentprice+'|'+pl.date);
                    }
                    
                }
                //console.log("plistdic_buy",plistdic_buy)
                var str1 = '';
                var str2 = '';
                var cdate = '';
                var money = [];
                $.each(od,function(i){
                    if (!payment_obj_price[od[i].num]) {
                        payment_obj_price[od[i].num] = {
                            price: 0
                        };
                    }
                    money=[];
                    
                    if(od[i].rentproduct==''){
                        str2 = '판매'; 
                        cdate = od[i].cancled.split(' ')[0];
                    }else{
                        str2 = '대여';
                        cdate = od[i].rentstart + '~' + od[i].rentend;
                    } 
                    if(od[i].chk=='ok'){
                        str1 = '계약완료';
                    }else if(od[i].chk=='n'){
                        str1 = '미계약';
                    }else if(od[i].chk=='cok'){
                        str1 = '취소계약';
                        str2 += '회수';
                    }
                    var prn = od[i].product.replace(/((블루,레드)|(네이비,베이지)|(오션블루, 버건디)|(오션블루,버건디))/g,'');
                    // if(str2 == '판매'){
                    //     if(prn.includes(',')){
                    //         var psp = prn.split(',');
                    //         for(fpsp of psp){
                    //             //console.log(fpsp.split('|')[0])
                    //             money.push(parseInt(plistdic[fpsp.split('|')[0]][0]));
                    //         }
                    //         //console.log(money);
                    //     }else{
                    //         money.push(parseInt(plistdic[prn.split('|')[0]][0]));
                    //         //console.log(money);
                    //     }
                    // }

                    // if(od[i].target=='기초'){
                    //     if(str2 == '판매'){
                    //         if(prn.includes(',')){
                    //             var psp = prn.split(',');
                    //             for(fpsp of psp){
                    //                 //console.log(fpsp.split('|')[0])
                    //                 money.push(parseInt(plistdic[fpsp.split('|')[0]][0]));
                    //             }
                    //             //console.log(money);
                    //         }else{
                    //             money.push(parseInt(plistdic[prn.split('|')[0]][0]));
                    //             //console.log(money);
                    //         }
                    //     }else if(str2 =='대여'){


                    //     }
                    // }else{
                    //     if(od[i].money!=0&&od[i].money!=''){
                    //         //money = parseInt(od[i].money)/(parseInt(od[i].sale.replace('%',''))/100);
                    //         money.push(parseInt(plistdic[prn.split('|')[0]][0]));
                    //     }else{
                    //         money.push(parseInt(plistdic[prn.split('|')[0]][0]));
                    //     }
                    //     //console.log(money);
                    // }
                    let od_delivery = od[i].deliverymanager;
                    let od_deliverytxt = '';
                    if(od_delivery=="none"){
                        od_deliverytxt = '물류(기관배송)';
                    }else if(od_delivery=='basic'){
                        od_deliverytxt = '택배배송';
                    }else if(od_delivery=='not'){
                        od_deliverytxt = '내방';
                    }else if(od_delivery=='clean'){
                        od_deliverytxt = '소독업체직배송';
                    }else if(od_delivery=='supply'){
                        od_deliverytxt = '공급업체직배송';
                    }
                    let as_receipt_date = '';
                    let as_receipt_txt = '';
                    let as_receipt_enddate = '';
                    let as_receipt_endtxt = '';
                    od3.forEach(function(obj,index){
                        if(obj.orderkey==od[i].num){
                            as_receipt_date += obj.receiptdate+'<br/>';
                            as_receipt_txt += obj.receipttxt+'<br/>';
                            as_receipt_enddate += obj.receiptenddate+'<br/>';
                            as_receipt_endtxt += obj.receiptendtxt+'<br/>';
                        }
                    });
                    var odr = od[i].product.replace(/((블루,레드)|(네이비,베이지)|(오션블루, 버건디)|(오션블루,버건디))/g,'');
                    var odbc = '';
                    
                    let td_obj = {
                        order_date_td : '',
                        name_td : '',
                        number_td : '',
                        payment_input_td : '',
                        regident_td : '',
                        sale_td: '',
                        target_td : '',
                        manager_td : '',
                        center_td : '',
                        pbon_td : '',
                        pdan_td : '',
                        payment_type_td: '',
                        payment_date_td: '',
                    };
                    if(odr.includes(',')){
                        let pbon_sum = 0;
                        let pgong_sum = 0;
                        let pdan_sum = 0;
                        $.each(odr.split(','),function(z){
                            let pdan = 0;
                            for(var index=0; index<plistdic_buy[odr.split(',')[z].split('|')[0]].length; index++){
                                let obj_dan = plistdic_buy[odr.split(',')[z].split('|')[0]][index].split("|")[0];
                                let obj_date = plistdic_buy[odr.split(',')[z].split('|')[0]][index].split("|")[1];
                                if(new Date(obj_date) <= new Date(cdate)){
                                    pdan = obj_dan;
                                    //console.log(obj_dan, pdan, obj_date, cdate, index);
                                    break
                                }
                            }
                            if(parseInt(od[i].buycnt.split(',')[z])>1){
                                $.each(od[i].buybcode.split(',')[z].split('|'),function(y){
                                    pbon_sum += makeLastDigitZero((parseFloat(parseFloat(pdan)*parseFloat(od[i].sale))/100) || 0);
                                    pgong_sum += makeLastDigitZero((parseFloat(parseFloat(pdan)*(1-parseFloat(od[i].sale)/100))) || 0);
                                });
                            }else{
                                pbon_sum += makeLastDigitZero((parseFloat(parseFloat(pdan)*parseFloat(od[i].sale))/100) || 0);
                                pgong_sum += makeLastDigitZero((parseFloat(parseFloat(pdan)*(1-parseFloat(od[i].sale)/100))) || 0);

                            }
                        })
                        $.each(odr.split(','),function(z){
                            let pdan = 0;
                            for(var index=0; index<plistdic_buy[odr.split(',')[z].split('|')[0]].length; index++){
                                let obj_dan = plistdic_buy[odr.split(',')[z].split('|')[0]][index].split("|")[0];
                                let obj_date = plistdic_buy[odr.split(',')[z].split('|')[0]][index].split("|")[1];
                                if(new Date(obj_date) <= new Date(cdate)){
                                    pdan = obj_dan;
                                    //console.log(obj_dan, pdan, obj_date, cdate, index);
                                    break
                                }
                            }
                            // plistdic_buy[odr.split(',')[z].split('|')[0]].forEach(function(obj,index){
                            //     let obj_dan = obj.split("|")[0];
                            //     let obj_date = obj.split("|")[1];
                            //     if(new Date(obj_date) < new Date(cdate)){
                            //         pdan = obj_dan;
                            //         console.log(obj_dan, pdan, obj_date, cdate, index);
                            //     }
                            // });
                            // for (let index = 0; index < Object.keys(plistdic_buy).length; index++) {
                            //     let obj = Object.keys(plistdic_buy)[index];
                            //     let pcode = obj.split("|")[0];
                            //     let pdate = obj.split("|")[1];

                            //     if (pcode == odr.split(',')[z].split('|')[0] && new Date(pdate) < new Date(cdate)) {
                            //         pdan = plistdic_buy[obj];
                            //         console.log(pcode, pdan, pdate, cdate, index);
                            //         break;
                            //     }
                            // }
 

                            let total_cnt = 0;
                            
                            
                            // if(parseInt(od[i].buycnt.split(',')[z])>1){
                            //     $.each(od[i].buybcode.split(',')[z].split('|'),function(y){
                            //         pbon_sum += makeLastDigitZero((parseFloat(parseFloat(pdan)*parseFloat(od[i].sale))/100) || 0);
                            //     });
                            // }else{
                            //     pbon_sum += makeLastDigitZero((parseFloat(parseFloat(pdan)*parseFloat(od[i].sale))/100) || 0);
                            // }

                            od[i].buycnt.split(',').forEach(function(obj,index){
                                total_cnt+=parseInt(obj);
                            });


                            if(0==z){
                                //console.log("od[i].buybcode.split(',')[z].split('|')",od[i].buybcode.split(',')[z].split('|').length-1)
                                td_obj.check_td = '<td rowspan="'+total_cnt+'" onclick="event.stopPropagation(); this.querySelector(\'input\').click();"><input type="checkbox" class="excel_all_check" style="width:21px; height:21px;" onclick="event.stopPropagation();" data-orderkey="'+od[i].num+'" data-money="'+(pbon_sum||0)+'" data-date="'+cdate+'"></td>';
                                td_obj.name_td = '<td rowspan="'+total_cnt+'">'+od[i].name+'</td>';
                                td_obj.number_td = '<td rowspan="'+total_cnt+'">'+(od[i].number.includes("L")?od[i].number:"비급여")+'</td>';
                                td_obj.regident_td = '<td rowspan="'+total_cnt+'">'+od[i].regident+'</td>';
                                td_obj.target_td = '<td rowspan="'+total_cnt+'">'+od[i].target+'</td>';
                                td_obj.sale_td = '<td rowspan="'+total_cnt+'">'+od[i].sale+'</td>';
                                td_obj.order_date_td = '<td rowspan="'+total_cnt+'">'+cdate+'</td>';
                                td_obj.manager_td = '<td rowspan="'+total_cnt+'">'+(od[i].manager || '')+'</td>';
                                td_obj.center_td = '<td rowspan="'+total_cnt+'">'+od[i].centername+'</td>';
                                // td_obj.payment_input_td = '<td rowspan="'+total_cnt+'">'+(payment_obj_price[od[i].num]||0)+'</td>';
                                td_obj.payment_input_td = `<td rowspan="${total_cnt}"><textarea class="form-control" style="width:100%; height:30px; text-align:center; resize:none; scrollbar-width: none; -ms-overflow-style: none; overflow-y: hidden;" onclick="event.stopPropagation(); payment_input_modal(${od[i].num},'${od[i].name}','${od[i].number.includes("L") ? od[i].number : "비급여"}',this);" readonly>${payment_obj_price[od[i].num]["price"]||0}</textarea></td>`;
                                td_obj.pbon_td = '<td rowspan="'+total_cnt+'">'+pbon_sum+'</td>';
                                td_obj.pgong_td = '<td rowspan="'+total_cnt+'">'+pgong_sum+'</td>';
                                td_obj.payment_type_td = '<td rowspan="'+total_cnt+'">'+(payment_obj_type[od[i].num]||"현금")+'</td>';
                                td_obj.payment_date_td = '<td rowspan="'+total_cnt+'">'+(payment_obj_price[od[i].num]["date"]||cdate)+'</td>';

                                if(!isNaN(pbon_sum)) {
                                    money_info_area.buy_money += parseInt(pbon_sum);
                                    money_info_area.buy_nomoney += parseInt(payment_obj_price[od[i].num]["price"]||0);
                                }
                                
                            }
                            if(parseInt(od[i].buycnt.split(',')[z])>1){
                                $.each(od[i].buybcode.split(',')[z].split('|'),function(y){
                                    odbc = od[i].buybcode.split(',')[z].split('|')[y];
                                    if(odbc=='direct'||odbc==''||!odbc||odbc==null)odbc="미입력";
                                    if(z!=0||y!=0){
                                        td_obj.check_td = '';
                                        td_obj.order_date_td ='';
                                        td_obj.name_td ='';
                                        td_obj.number_td = '';
                                        td_obj.payment_input_td = '';
                                        td_obj.regident_td = '';
                                        td_obj.sale_td = '';
                                        td_obj.target_td ='';
                                        td_obj.manager_td='';
                                        td_obj.center_td='';
                                        td_obj.pbon_td='';
                                        td_obj.pgong_td = '';
                                        td_obj.payment_type_td='';
                                        td_obj.payment_date_td='';
                                    }
                                    // money_info_area.cnt += 1;

                                    // console.log("td_obj",z,td_obj,od[i].name)
                                    if(!merget_cell_chk){
                                        str += '<tr class="exceltr" onclick="excel_table_click(this,'+od[i].num+',\''+od[i].number+'\')">'+td_obj.check_td+''+td_obj.order_date_td+''+td_obj.name_td+''+td_obj.number_td+''+td_obj.regident_td+''+td_obj.target_td+''+td_obj.sale_td+''+td_obj.pbon_td+''+td_obj.pgong_td+'<td>'+pdan+'</td>'+td_obj.manager_td+''+td_obj.center_td+'<td>'+plistdic_name[odr.split(',')[z].split('|')[0]][0]+'</td><td>'+plistdic_name[odr.split(',')[z].split('|')[0]][1]+'</td>'+td_obj.payment_input_td+''+td_obj.payment_type_td+td_obj.payment_date_td+'<td>'+plistdic_tax[odr.split(',')[z].split('|')[0]]+'</td></tr>';
                                    }else{
                                        str += '<tr class="exceltr" onclick="excel_table_click(this,' + od[i].num + ',\'' + od[i].number + '\')">' +
                                            '<td onclick="event.stopPropagation(); this.querySelector(\'input\').click();">' +
                                                '<input type="checkbox" class="excel_all_check" style="width:21px; height:21px;" onclick="event.stopPropagation();" ' +
                                                'data-orderkey="' + od[i].num + '" data-money="' + (pbon_sum||0) + '" data-date="' + cdate + '">' +
                                            '</td>' +
                                            '<td>'+cdate+'</td>' +
                                            '<td>'+od[i].name+'</td>' + 
                                            '<td>'+(od[i].number.includes("L")?od[i].number:"비급여")+'</td>' +
                                            '<td>'+od[i].regident+'</td>' +
                                            '<td>'+od[i].target+'</td>' +
                                            '<td>'+od[i].sale+'</td>' +
                                            '<td>'+makeLastDigitZero((parseFloat(parseFloat(pdan)*parseFloat(od[i].sale))/100) || 0)+'</td>' +
                                            '<td>'+makeLastDigitZero((parseFloat(parseFloat(pdan)*(1-parseFloat(od[i].sale)/100))) || 0)+'</td>'+
                                            '<td>' + pdan + '</td>' +
                                            '<td>'+(od[i].manager || '')+'</td>' +
                                            '<td>'+od[i].centername+'</td>' +
                                            '<td>'+plistdic_name[odr.split(',')[z].split('|')[0]][0]+'</td><td>'+plistdic_name[odr.split(',')[z].split('|')[0]][1]+'</td>'+

                                            `<td><textarea class="form-control" style="width:100%; height:30px; text-align:center; resize:none; scrollbar-width: none; -ms-overflow-style: none; overflow-y: hidden;" onclick="event.stopPropagation(); payment_input_modal(${od[i].num},'${od[i].name}','${od[i].number.includes("L") ? od[i].number : "비급여"}',this);" readonly>${payment_obj_price[od[i].num]["price"]||0}</textarea></td>` +
                                            '<td>'+(payment_obj_type[od[i].num]||"현금")+'</td>' +
                                            '<td>'+(payment_obj_price[od[i].num]["date"]||cdate)+'</td>' +
                                            '<td>' + plistdic_tax[odr.split(',')[z].split('|')[0]] + '</td>' +
                                        '</tr>';
                                    }
                                    money_info_area.buy_total_money += parseInt(pdan);
                                });
                            }else{
                                if(z>0){
                                    td_obj.check_td = '';
                                    td_obj.order_date_td ='';
                                    td_obj.name_td ='';
                                    td_obj.number_td = '';
                                    td_obj.payment_input_td = '';
                                    td_obj.regident_td = '';
                                    td_obj.sale_td = '';
                                    td_obj.target_td ='';
                                    td_obj.manager_td='';
                                    td_obj.center_td='';
                                    td_obj.pbon_td='';
                                    td_obj.pgong_td='';
                                    td_obj.payment_type_td='';
                                    td_obj.payment_date_td='';
                                }
                                // money_info_area.cnt += 1;

                                odbc = od[i].buybcode.split(',')[z];
                                if(odbc=='direct'||odbc==''||!odbc||odbc==null)odbc="미입력";
                                if(!merget_cell_chk){
                                    str += '<tr class="exceltr" onclick="excel_table_click(this,'+od[i].num+',\''+od[i].number+'\')">'+td_obj.check_td+''+td_obj.order_date_td+''+td_obj.name_td+''+td_obj.number_td+''+td_obj.regident_td+''+td_obj.target_td+''+td_obj.sale_td+''+td_obj.pbon_td+''+td_obj.pgong_td+'<td>'+pdan+'</td>'+td_obj.manager_td+''+td_obj.center_td+'<td>'+plistdic_name[odr.split(',')[z].split('|')[0]][0]+'</td><td>'+plistdic_name[odr.split(',')[z].split('|')[0]][1]+'</td>'+td_obj.payment_input_td+''+td_obj.payment_type_td+td_obj.payment_date_td+'<td>'+plistdic_tax[odr.split(',')[z].split('|')[0]]+'</td></tr>';
                                }else{
                                    str += '<tr class="exceltr" onclick="excel_table_click(this,' + od[i].num + ',\'' + od[i].number + '\')">' +
                                        '<td onclick="event.stopPropagation(); this.querySelector(\'input\').click();">' +
                                            '<input type="checkbox" class="excel_all_check" style="width:21px; height:21px;" onclick="event.stopPropagation();" ' +
                                            'data-orderkey="' + od[i].num + '" data-money="' + (pbon_sum||0) + '" data-date="' + cdate + '">' +
                                        '</td>' +
                                        '<td>'+cdate+'</td>' +
                                        '<td>'+od[i].name+'</td>' + 
                                        '<td>'+(od[i].number.includes("L")?od[i].number:"비급여")+'</td>' +
                                        '<td>'+od[i].regident+'</td>' +
                                        '<td>'+od[i].target+'</td>' +
                                        '<td>'+od[i].sale+'</td>' +
                                        '<td>'+makeLastDigitZero((parseFloat(parseFloat(pdan)*parseFloat(od[i].sale))/100) || 0)+'</td>' +
                                        '<td>'+makeLastDigitZero((parseFloat(parseFloat(pdan)*(1-parseFloat(od[i].sale)/100))) || 0)+'</td>' +
                                        '<td>' + pdan + '</td>' +
                                        '<td>'+(od[i].manager || '')+'</td>' +
                                        '<td>'+od[i].centername+'</td>' +
                                        '<td>'+plistdic_name[odr.split(',')[z].split('|')[0]][0]+'</td><td>'+plistdic_name[odr.split(',')[z].split('|')[0]][1]+'</td>'+
                                        `<td><textarea class="form-control" style="width:100%; height:30px; text-align:center; resize:none; scrollbar-width: none; -ms-overflow-style: none; overflow-y: hidden;" onclick="event.stopPropagation(); payment_input_modal(${od[i].num},'${od[i].name}','${od[i].number.includes("L") ? od[i].number : "비급여"}',this);" readonly>${payment_obj_price[od[i].num]["price"]||0}</textarea></td>` +
                                        '<td>'+(payment_obj_type[od[i].num]||"현금")+'</td>' +
                                        '<td>'+(payment_obj_price[od[i].num]["date"]||cdate)+'</td>' +
                                        '<td>' + plistdic_tax[odr.split(',')[z].split('|')[0]] + '</td>' +
                                    '</tr>';

                                }
                                money_info_area.buy_total_money += parseInt(pdan);
                            }
                        });
                    }else{
                        let pdan = 0;
                        let pbon_sum = 0;
                        let pgong_sum = 0;
                        let pdan_sum = 0;
                        for(var index=0; index<plistdic_buy[od[i].product.split('|')[0]].length; index++){
                            let obj_dan = plistdic_buy[od[i].product.split('|')[0]][index].split("|")[0];
                            let obj_date = plistdic_buy[od[i].product.split('|')[0]][index].split("|")[1];
                            if(new Date(obj_date) <= new Date(cdate)){
                                pdan = obj_dan;
                                //console.log(obj_dan, pdan, obj_date, cdate, index);
                                break
                            }
                            
                        }
                        // plistdic_buy[od[i].product.split('|')[0]].forEach(function(obj,index){
                        //     let obj_dan = obj.split("|")[0];
                        //     let obj_date = obj.split("|")[1];
                        //     if(new Date(obj_date) < new Date(cdate)){
                        //         pdan = obj_dan;
                        //     }
                        // });
                        // for (let index = 0; index < Object.keys(plistdic_buy).length; index++) {
                        //     let obj = Object.keys(plistdic_buy)[index];
                        //     let pcode = obj.split("|")[0];
                        //     let pdate = obj.split("|")[1];
                        //     if (pcode == od[i].product.split('|')[0] && new Date(pdate) < new Date(cdate)) {
                        //         pdan = plistdic_buy[obj];
                        //         console.log(pcode, pdan, pdate, cdate, index);
                        //         break;
                        //     }
                        // }

                        if(parseInt(od[i].buycnt)>1){
                            $.each(od[i].buybcode.split('|'),function(y){
                                pbon_sum += makeLastDigitZero((parseFloat(parseFloat(pdan)*parseFloat(od[i].sale))/100) || 0);
                                pgong_sum +=makeLastDigitZero((parseFloat(parseFloat(pdan)*(1-parseFloat(od[i].sale)/100))) || 0);
                            });
                        }else{
                            pbon_sum += makeLastDigitZero((parseFloat(parseFloat(pdan)*parseFloat(od[i].sale))/100) || 0);
                            pgong_sum +=makeLastDigitZero((parseFloat(parseFloat(pdan)*(1-parseFloat(od[i].sale)/100))) || 0);

                        }

                        if(parseInt(od[i].buycnt)>1){
                            $.each(od[i].buybcode.split('|'),function(y){
                                odbc = od[i].buybcode.split('|')[y];
                                
                                if(odbc=='direct'||odbc==''||!odbc||odbc==null)odbc="미입력";
                                td_obj.check_td = '';
                                td_obj.order_date_td ='';
                                td_obj.name_td ='';
                                td_obj.number_td = '';
                                td_obj.payment_input_td = '';
                                td_obj.regident_td = '';
                                td_obj.sale_td = '';
                                td_obj.target_td ='';
                                td_obj.manager_td='';
                                td_obj.center_td='';
                                td_obj.pbon_td='';
                                td_obj.pgong_td='';
                                td_obj.payment_type_td ='';
                                td_obj.payment_date_td = '';
                                if(0==y){
                                    //console.log("od[i].buybcode.split('|').length-1",od[i].buybcode.split('|').length-1)
                                    td_obj.check_td = '<td rowspan="'+od[i].buybcode.split('|').length+'" onclick="event.stopPropagation(); this.querySelector(\'input\').click();"><input type="checkbox" class="excel_all_check" style="width:21px; height:21px;" onclick="event.stopPropagation();" data-orderkey="'+od[i].num+'" data-money="'+pbon_sum+'" data-date="'+cdate+'"></td>';
                                    td_obj.name_td = '<td rowspan="'+od[i].buybcode.split('|').length+'">'+od[i].name+'</td>';
                                    td_obj.number_td = '<td rowspan="'+od[i].buybcode.split('|').length+'">'+(od[i].number.includes("L")?od[i].number:"비급여")+'</td>';
                                    td_obj.regident_td = '<td rowspan="'+od[i].buybcode.split('|').length+'">'+od[i].regident+'</td>';
                                    td_obj.target_td = '<td rowspan="'+od[i].buybcode.split('|').length+'">'+od[i].target+'</td>';
                                    td_obj.sale_td = '<td rowspan="'+od[i].buybcode.split('|').length+'">'+od[i].sale+'</td>';
                                    td_obj.order_date_td = '<td rowspan="'+od[i].buybcode.split('|').length+'">'+cdate+'</td>';
                                    td_obj.manager_td = '<td rowspan="'+od[i].buybcode.split('|').length+'">'+(od[i].manager || '')+'</td>';
                                    td_obj.center_td = '<td rowspan="'+od[i].buybcode.split('|').length+'">'+od[i].centername+'</td>';
                                    // td_obj.payment_input_td = '<td rowspan="'+od[i].buybcode.split('|').length+'">'+(payment_obj_price[od[i].num]||0)+'</td>';
                                    td_obj.payment_input_td = `<td rowspan="${od[i].buybcode.split('|').length}"><textarea class="form-control" style="width:100%; height:30px; text-align:center; resize:none; scrollbar-width: none; -ms-overflow-style: none; overflow-y: hidden;" onclick="event.stopPropagation(); payment_input_modal(${od[i].num},'${od[i].name}','${od[i].number.includes("L") ? od[i].number : "비급여"}',this);" readonly>${payment_obj_price[od[i].num]["price"]||0}</textarea></td>`;
                                    td_obj.pbon_td = '<td rowspan="'+od[i].buybcode.split('|').length+'">'+pbon_sum+'</td>';
                                    td_obj.pgong_td = '<td rowspan="'+od[i].buybcode.split('|').length+'">'+pgong_sum+'</td>';

                                    td_obj.payment_type_td = '<td rowspan="'+od[i].buybcode.split('|').length+'">'+(payment_obj_type[od[i].num]||"현금")+'</td>';
                                    td_obj.payment_date_td = '<td rowspan="'+od[i].buybcode.split('|').length+'">'+(payment_obj_price[od[i].num]["date"]||cdate)+'</td>';

                                    if(!isNaN(pbon_sum)) {
                                        money_info_area.buy_money += parseInt(pbon_sum);
                                        money_info_area.buy_nomoney += parseInt(payment_obj_price[od[i].num]["price"]||0);
                                    }
                                }
                                if(!merget_cell_chk){
                                    str += '<tr class="exceltr" onclick="excel_table_click(this,'+od[i].num+',\''+od[i].number+'\')">'+td_obj.check_td+''+td_obj.order_date_td+''+td_obj.name_td+''+td_obj.number_td+''+td_obj.regident_td+''+td_obj.target_td+''+td_obj.sale_td+''+td_obj.pbon_td+''+td_obj.pgong_td+'<td>'+pdan+'</td>'+td_obj.manager_td+''+td_obj.center_td+'<td>'+plistdic_name[od[i].product.split('|')[0]][0]+'</td><td>'+plistdic_name[od[i].product.split('|')[0]][1]+'</td>'+td_obj.payment_input_td+''+td_obj.payment_type_td+td_obj.payment_date_td+'<td>'+plistdic_tax[od[i].product.split('|')[0]]+'</td></tr>';
                                }else{
                                    str += '<tr class="exceltr" onclick="excel_table_click(this,' + od[i].num + ',\'' + od[i].number + '\')">' +
                                        '<td onclick="event.stopPropagation(); this.querySelector(\'input\').click();"><input type="checkbox" class="excel_all_check" style="width:21px; height:21px;" onclick="event.stopPropagation();" data-orderkey="'+od[i].num+'" data-money="'+pbon_sum+'" data-date="'+cdate+'"></td>' + '' +
                                        '<td>'+cdate+'</td>' + '' +
                                        '<td>'+od[i].name+'</td>' + '' +
                                        '<td>'+(od[i].number.includes("L")?od[i].number:"비급여")+'</td>' + '' +
                                        '<td>'+od[i].regident+'</td>' + '' +
                                        '<td>'+od[i].target+'</td>' + '' +
                                        '<td>'+od[i].sale+'</td>' + '' +
                                        '<td>'+makeLastDigitZero((parseFloat(parseFloat(pdan)*parseFloat(od[i].sale))/100) || 0)+'</td>' +
                                        '<td>'+makeLastDigitZero((parseFloat(parseFloat(pdan)*(1-parseFloat(od[i].sale)/100))) || 0)+'</td>' +
                                        '<td>' + pdan + '</td>' +
                                        '<td>'+(od[i].manager || '')+'</td>' + '' +
                                        '<td>'+od[i].centername+'</td>' +
                                        '<td>' + plistdic_name[od[i].product.split('|')[0]][0] + '</td>' +
                                        '<td>' + plistdic_name[od[i].product.split('|')[0]][1] + '</td>' +
                                        `<td><textarea class="form-control" style="width:100%; height:30px; text-align:center; resize:none; scrollbar-width: none; -ms-overflow-style: none; overflow-y: hidden;" onclick="event.stopPropagation(); payment_input_modal(${od[i].num},'${od[i].name}','${od[i].number.includes("L") ? od[i].number : "비급여"}',this);" readonly>${payment_obj_price[od[i].num]["price"]||0}</textarea></td>` + '' +
                                        '<td>'+(payment_obj_type[od[i].num]||"현금")+'</td>' +
                                        '<td>'+(payment_obj_price[od[i].num]["date"]||cdate)+'</td>' +
                                        '<td>' + plistdic_tax[od[i].product.split('|')[0]] + '</td>' +
                                    '</tr>';
                                }
                                money_info_area.buy_total_money += parseInt(pdan);

                            });
                        }else{
                            odbc = od[i].buybcode;
                            if(odbc=='direct'||odbc==''||!odbc||odbc==null)odbc="미입력";
                            // money_info_area.cnt += 1;
                            if(!isNaN(pbon_sum)) {
                                money_info_area.buy_money += makeLastDigitZero((parseFloat(parseFloat(pdan)*parseFloat(od[i].sale))/100) || 0);
                                money_info_area.buy_nomoney += parseInt(payment_obj_price[od[i].num]["price"]||0);
                            }
                            str += `<tr class="exceltr" onclick="excel_table_click(this,${od[i].num},'${od[i].number}')">
                                <td onclick="event.stopPropagation(); this.querySelector('input').click();"><input type="checkbox" class="excel_all_check" style="width:21px; height:21px;" onclick="event.stopPropagation();" data-orderkey="${od[i].num}" data-money="${makeLastDigitZero((parseFloat(parseFloat(pdan)*parseFloat(od[i].sale))/100) || 0)}" data-date="${cdate}"></td>
                                <td>${cdate}</td>
                                <td>${od[i].name}</td>
                                <td>${od[i].number.includes("L") ? od[i].number : "비급여"}</td>
                                <td>${od[i].regident}</td>
                                <td>${od[i].target}</td>
                                <td>${od[i].sale}</td>
                                <td>${makeLastDigitZero((parseFloat(parseFloat(pdan)*parseFloat(od[i].sale))/100) || 0)}</td>
                                <td>${makeLastDigitZero((parseFloat(parseFloat(pdan)*(1-parseFloat(od[i].sale)/100))) || 0)}</td>
                                <td>${pdan}</td>
                                <td>${od[i].manager || ''}</td>
                                <td>${od[i].centername}</td>
                                <td>${plistdic_name[od[i].product.split('|')[0]][0]}</td>
                                <td>${plistdic_name[od[i].product.split('|')[0]][1]}</td>
                                <td><textarea class="form-control" style="width:100%; height:30px; text-align:center; resize:none; scrollbar-width: none; -ms-overflow-style: none; overflow-y: hidden;" onclick="event.stopPropagation(); payment_input_modal(${od[i].num},'${od[i].name}','${od[i].number.includes("L") ? od[i].number : "비급여"}',this);" readonly>${payment_obj_price[od[i].num]["price"]||0}</textarea></td>
                                <td>${payment_obj_type[od[i].num]||"현금"}</td>
                                <td>${(payment_obj_price[od[i].num]["date"]||cdate)}</td>
                                <td>${plistdic_tax[od[i].product.split('|')[0]]}</td>
                            </tr>`;
                            money_info_area.buy_total_money += parseInt(pdan);
                        }
                    }                    
                });
                //str += '<tr class="exceltr"><td colspan="11"></td></tr>';
                var odbc = '';
                let rentstartResult = [];
                let rentendResult = [];
                
               
                $.each(od2,function(i){
                    if (!payment_obj_price[od2[i].num]) {
                        payment_obj_price[od2[i].num] = {
                            price: 0
                        };
                    }
                    str2 = '대여';
                    months.forEach(function(month) {
                        rentstartResult = [];
                        rentendResult = [];
                        var formattedMonth = formatMonth(month.month);
                        //console.log(month.year + '-' + formattedMonth);
                        let lastdate = new Date(month.year, formattedMonth, 0).getDate();
                        let last_chan_val = month.year + '-' + formattedMonth + '-' +lastdate;
                        if(new Date(od2[i].rentstart)<=new Date(last_chan_val)&&new Date(od2[i].rentend)>=new Date(month.year + '-' + formattedMonth + '-' + '01')){
                            if(new Date(od2[i].rentstart)<new Date(month.year + '-' + formattedMonth + '-' + '01')){
                                rentstartResult.push(month.year + '-' + formattedMonth + '-' + '01');
                            }else{
                                rentstartResult.push(od2[i].rentstart);
                            }
                            
                            if(new Date(od2[i].rentend)>new Date(last_chan_val)){
                                rentendResult.push(last_chan_val);
                            }else{
                                rentendResult.push(od2[i].rentend);
                            }
                            cdate = rentstartResult[0] + '~' + rentendResult[0];
                            if(od2[i].chk=='ok'){
                                str1 = '계약완료';
                            }else if(od2[i].chk=='n'){
                                str1 = '미계약';
                            }else if(od2[i].chk=='cok'){
                                str1 = '취소계약';
                            }
                            var odrp = od2[i].product;
                            let od_delivery = od2[i].deliverymanager;
                            let od_deliverytxt = '';
                            if(od_delivery=="none"){
                                od_deliverytxt = '물류(기관배송)';
                            }else if(od_delivery=='basic'){
                                od_deliverytxt = '택배배송';
                            }else if(od_delivery=='not'){
                                od_deliverytxt = '내방';
                            }else if(od_delivery=='clean'){
                                od_deliverytxt = '소독업체직배송';
                            }else if(od_delivery=='supply'){
                                od_deliverytxt = '공급업체직배송';
                            }
                            let as_receipt_date = '';
                            let as_receipt_txt = '';
                            let as_receipt_enddate = '';
                            let as_receipt_endtxt = '';
                            od3.forEach(function(obj,index){
                                if(obj.orderkey==od2[i].num){
                                    as_receipt_date += obj.receiptdate+'<br/>';
                                    as_receipt_txt += obj.receipttxt+'<br/>';
                                    as_receipt_enddate += obj.receiptenddate+'<br/>';
                                    as_receipt_endtxt += obj.receiptendtxt+'<br/>';
                                }
                            });
                            if(odrp.includes(',')){
                                $.each(odrp.split(','),function(z){
                                    
                                    let pdan = 0;
                                    let result_dan = 0;
                                    let nopay_dan = 0;
                                    for(var index=0; index<plistdic_rent[odrp.split(',')[z].split('|')[0]].length; index++){
                                        let obj_dan = plistdic_rent[odrp.split(',')[z].split('|')[0]][index].split("|")[0];
                                        let obj_date = plistdic_rent[odrp.split(',')[z].split('|')[0]][index].split("|")[1];
                                        if(new Date(obj_date) <= new Date(rentstartResult[0])){
                                            pdan = obj_dan;
                                            //console.log(obj_dan, pdan, obj_date, cdate, index);
                                            break
                                        }
                                        
                                    }
                                    // plistdic_rent[odrp.split(',')[z].split('|')[0]].forEach(function(obj,index){
                                    //     let obj_dan = obj.split("|")[0];
                                    //     let obj_date = obj.split("|")[1];
                                    //     if(new Date(obj_date) < new Date(rentstartResult[0])){
                                    //         pdan = obj_dan;
                                    //     }
                                    // });
                                    
                                    odbc = od2[i].buybcode.split(',')[z];
                                    if(new Date(bcode_sale_obj[odrp.split(',')[z].split('|')[0]+'|'+odbc])<new Date(rentendResult[0])){
                                        let sale_date = 0;
                                        if(new Date(bcode_sale_obj[odrp.split(',')[z].split('|')[0]+'|'+odbc])>new Date(rentstartResult[0])){
                                            sale_date = daysBetweenDates(bcode_sale_obj[odrp.split(',')[z].split('|')[0]+'|'+odbc], rentendResult[0]);
                                        }else{
                                            sale_date = lastdate;
                                        }
                                        result_dan += ((parseFloat(pdan/2)*parseFloat(od2[i].sale)/100)/parseInt(lastdate))*sale_date;
                                        nopay_dan += ((parseFloat(pdan/2))/parseInt(lastdate))*sale_date;
                                        let desale_date = (daysBetweenDates(rentstartResult[0], rentendResult[0])+1)-sale_date;
                                        result_dan += ((parseFloat(pdan)*parseFloat(od2[i].sale)/100)/parseInt(lastdate))*desale_date;
                                        nopay_dan += ((parseFloat(pdan))/parseInt(lastdate))*desale_date;
                                        pdan = pdan/2;
                                    }else{
                                        let desale_date = (daysBetweenDates(rentstartResult[0], rentendResult[0])+1);
                                        result_dan += ((parseFloat(pdan)*parseFloat(od2[i].sale)/100)/parseInt(lastdate))*desale_date;
                                        nopay_dan += ((parseFloat(pdan))/parseInt(lastdate))*desale_date;
                                    }
                                    // if(new Date(bcode_sale_obj[odrp.split(',')[z].split('|')[0]+'|'+odbc])>new Date(rentstartResult[0])){
                                    //     pdan = pdan/2;
                                    // }
                                    if(odbc=='direct'||odbc==''||!odbc||odbc==null)odbc="미입력";
                                    let pay_input = parseInt(payment_obj_price[od2[i].num]["price"]);
                                    if(new Date(payment_obj_price[od2[i].num]["rentdate"])>=new Date(cdate.split("~")[1])){
                                        if(pay_input>0&&pay_input>makeLastDigitZero(result_dan)){
                                            pay_input = makeLastDigitZero(result_dan)
                                        }else if(pay_input>0&&pay_input<makeLastDigitZero(result_dan)){
                                            pay_input = pay_input;
                                        }else{
                                            pay_input = 0;
                                        }
                                    }else if(new Date(payment_obj_price[od2[i].num]["rentdate"])>=new Date(cdate.split("~")[0])&&new Date(payment_obj_price[od2[i].num]["rentdate"])<=new Date(cdate.split("~")[1])){
                                        pay_input = 0;
                                    }else{
                                        pay_input = 0;
                                    }
                                    money_info_area.rent_money += makeLastDigitZero(result_dan||0);
                                    money_info_area.rent_nomoney += pay_input;
                                    // money_info_area.cnt += 1;
                                    str += `<tr class="exceltr" onclick="excel_table_click(this,${od2[i].num},'${od2[i].number}')">
                                        <td onclick="event.stopPropagation(); this.querySelector('input').click();">
                                            <input type="checkbox" class="excel_all_check" style="width:21px; height:21px;"
                                            data-orderkey="${od2[i].num}"
                                            data-money="${makeLastDigitZero(result_dan||0)}"
                                            data-date="${cdate}"
                                            onclick="event.stopPropagation();">
                                        </td>
                                        <td>${cdate}</td>
                                        <td>${od2[i].name}</td>
                                        <td>${od2[i].number.includes("L") ? od2[i].number : "비급여"}</td>
                                        <td>${od2[i].regident}</td>
                                        <td>${od2[i].target}</td>
                                        <td>${od2[i].sale}</td>
                                        <td>${makeLastDigitZero(result_dan)}</td>
                                        <td>${parseInt(nopay_dan-result_dan) || 0}</td>
                                        <td>${parseInt(nopay_dan)}</td>
                                        <td>${od2[i].manager || ''}</td>
                                        <td>${od2[i].centername}</td>
                                        <td>${plistdic_name[odrp.split(',')[z].split('|')[0]][0]}</td>
                                        <td>${plistdic_name[odrp.split(',')[z].split('|')[0]][1]}</td>
                                        <td><textarea class="form-control" style="width:100%; height:30px; text-align:center; resize:none; scrollbar-width: none; -ms-overflow-style: none; overflow-y: hidden;" onclick="event.stopPropagation(); payment_input_modal(${od2[i].num},'${od2[i].name}','${od2[i].number.includes("L") ? od2[i].number : "비급여"}',this,'rent');" readonly>${pay_input||0}</textarea></td>
                                        <td>${od2[i].paymenttype==1 ? '카드' : od2[i].paymenttype==2 ? '이체' : '현금'}</td>
                                        <td>${payment_obj_price[od2[i].num]["date"]||cdate.split("~")[1]}</td>
                                        <td>${plistdic_tax[odrp.split(',')[z].split('|')[0]]}</td>
                                    </tr>`;
                                });
                            }else{
                                let pdan = 0;
                                let result_dan = 0;
                                let nopay_dan = 0;
                                //console.log(od2[i].product.split('|')[0]);
                                for(var index=0; index<plistdic_rent[od2[i].product.split('|')[0]].length; index++){
                                    let obj_dan = plistdic_rent[od2[i].product.split('|')[0]][index].split("|")[0];
                                    let obj_date = plistdic_rent[od2[i].product.split('|')[0]][index].split("|")[1];
                                    if(new Date(obj_date) <= new Date(rentstartResult[0])){
                                        pdan = obj_dan;
                                        //console.log(obj_dan, pdan, obj_date, cdate, index);
                                        break
                                    }
                                    
                                }
                                // plistdic_rent[od2[i].product.split('|')[0]].forEach(function(obj,index){
                                //     let obj_dan = obj.split("|")[0];
                                //     let obj_date = obj.split("|")[1];
                                //     if(new Date(obj_date) < new Date(rentstartResult[0])){
                                //         pdan = obj_dan;
                                //     }
                                // });
                                odbc = od2[i].buybcode;
                                if(new Date(bcode_sale_obj[od2[i].product.split('|')[0]+'|'+odbc])<new Date(rentendResult[0])){
                                    let sale_date = 0;
                                    if(new Date(bcode_sale_obj[od2[i].product.split('|')[0]+'|'+odbc])>new Date(rentstartResult[0])){
                                        sale_date = daysBetweenDates(bcode_sale_obj[od2[i].product.split('|')[0]+'|'+odbc], rentendResult[0]);
                                    }else{
                                        sale_date = lastdate;
                                    }
                                    result_dan += ((parseFloat(pdan/2)*parseFloat(od2[i].sale)/100)/parseInt(lastdate))*sale_date;
                                    nopay_dan += ((parseFloat(pdan/2))/parseInt(lastdate))*sale_date;
                                    let desale_date = (daysBetweenDates(rentstartResult[0], rentendResult[0])+1)-sale_date;
                                    result_dan += ((parseFloat(pdan)*parseFloat(od2[i].sale)/100)/parseInt(lastdate))*desale_date;
                                    nopay_dan += ((parseFloat(pdan))/parseInt(lastdate))*desale_date;
                                    pdan = pdan/2;
                                }else{
                                    let desale_date = (daysBetweenDates(rentstartResult[0], rentendResult[0])+1);
                                    result_dan += ((parseFloat(pdan)*parseFloat(od2[i].sale)/100)/parseInt(lastdate))*desale_date;
                                    nopay_dan += ((parseFloat(pdan))/parseInt(lastdate))*desale_date;
                                }
                                // if(new Date(bcode_sale_obj[od2[i].product.split('|')[0]+'|'+odbc])<new Date(rentstartResult[0])){
                                //     pdan = pdan/2;
                                //     (parseFloat(pdan)*parseFloat(od2[i].sale)/100)/parseInt(lastdate)
                                // }
                                if(odbc=='direct'||odbc==''||!odbc||odbc==null)odbc="미입력";
                                let pay_input = parseInt(payment_obj_price[od2[i].num]["price"]);
                                console.log("?",payment_obj_price[od2[i].num]["rentdate"],pay_input)
                                if(new Date(payment_obj_price[od2[i].num]["rentdate"])>=new Date(cdate.split("~")[0])){
                                    if(pay_input>0&&pay_input>makeLastDigitZero(result_dan)){
                                        pay_input = makeLastDigitZero(result_dan)
                                    }else if(pay_input>0&&pay_input<=makeLastDigitZero(result_dan)){
                                        pay_input = pay_input;
                                        console.log("?",pay_input)
                                    }else{
                                        pay_input = 0;
                                        console.log("??",pay_input)
                                    }
                                }else{
                                    pay_input = 0;
                                    console.log("???",pay_input)
                                }
                                money_info_area.rent_money += makeLastDigitZero(result_dan||0);
                                money_info_area.rent_nomoney += pay_input;
                                str += `<tr class="exceltr" onclick="excel_table_click(this,${od2[i].num},'${od2[i].number}')">
                                    <td onclick="event.stopPropagation(); this.querySelector('input').click();">
                                        <input type="checkbox" class="excel_all_check" data-orderkey="${od2[i].num}" data-money="${makeLastDigitZero(result_dan||0)}" data-date="${cdate}" onclick="event.stopPropagation();" style="width:21px; height:21px;">
                                    </td>
                                    <td>${cdate}</td>
                                    <td>${od2[i].name}</td>
                                    <td>${od2[i].number.includes("L") ? od2[i].number : "비급여"}</td>
                                    <td>${od2[i].regident}</td>
                                    <td>${od2[i].target}</td>
                                    <td>${od2[i].sale}</td>
                                    <td>${makeLastDigitZero(result_dan)}</td>
                                    <td>${parseInt(nopay_dan-result_dan) || 0}</td>
                                    <td>${parseInt(nopay_dan)}</td>
                                    <td>${od2[i].manager || ''}</td>
                                    <td>${od2[i].centername}</td>
                                    <td>${plistdic_name[od2[i].product.split('|')[0]][0]}</td>
                                    <td>${plistdic_name[od2[i].product.split('|')[0]][1]}</td>
                                    <td><textarea class="form-control" style="width:100%; height:30px; text-align:center; resize:none; scrollbar-width: none; -ms-overflow-style: none; overflow-y: hidden;" onclick="event.stopPropagation(); payment_input_modal(${od2[i].num},'${od2[i].name}','${od2[i].number.includes("L") ? od2[i].number : "비급여"}',this,'rent');" readonly>${pay_input||0}</textarea></td>
                                    <td>${od2[i].paymenttype == 1 ? '카드' : od2[i].paymenttype == 2 ? '이체' : '현금'}</td>
                                    <td>${payment_obj_price[od2[i].num]["date"]||cdate.split("~")[1]}</td>
                                    <td>${plistdic_tax[od2[i].product.split('|')[0]]}</td>
                                </tr>`;
                                // money_info_area.cnt += 1;
                            }
                        }
                        
                    });
                    

                });
                str+="</tbody>";
                
                $('.excelbody').append(str);
                // loadDataEfficiently(str);
                $('.money_excel_info_area_buy_total_money').text(money_info_area.buy_total_money.toLocaleString());
                $('.money_excel_info_area_buy_money').text(money_info_area.buy_money.toLocaleString());
                $('.money_excel_info_area_rent_money').text(money_info_area.rent_money.toLocaleString());
                $('.money_excel_info_area_buy_nomoney').text((money_info_area.buy_money-money_info_area.buy_nomoney).toLocaleString());
                $('.money_excel_info_area_rent_nomoney').text((money_info_area.rent_money-money_info_area.rent_nomoney).toLocaleString());
                //exelchange('m');
                applyStyles(moneyexcel_styles);
                Swal.hideLoading();
                window.isProcessing = false;
            }
        });
        
    }

    function table_search(txt){
        let t_on = $('.t_on').text();
        console.log("txt",txt,txt.value)
        
        if(t_on=='본인부담금수납대장')moneyexcel(1,uid,$('#datepicker').val(),$('#datepicker2').val(),txt.value,contract,delivery,product,centername,manager,phone,bcode,printchk,confirm1,confirm2,deliverycar,memo,$('.t_on'))
        if(t_on=='제품관리대장/AS관리대장')orderexcel(1,uid,$('#datepicker').val(),$('#datepicker2').val(),txt.value,contract,delivery,product,centername,manager,phone,bcode,printchk,confirm1,confirm2,deliverycar,memo,$('.t_on'))
        if(t_on=='제품설치대장')installexcel(1,uid,$('#datepicker').val(),$('#datepicker2').val(),txt.value,contract,delivery,product,centername,manager,phone,bcode,printchk,confirm1,confirm2,deliverycar,memo,$('.t_on'))
        if(t_on=='주문서 목록')orderlookup(1,uid,$('#datepicker').val(),$('#datepicker2').val(),txt.value,contract,delivery,product,centername,manager,phone,bcode,printchk,confirm1,confirm2,deliverycar,memo,$('.t_on'))
    }

    // function table_search(x, id, tr) {
    //     console.log($(x)[0].value);
    //     var data = $(x)[0].value.split(" ");
    //     if ($(x)[0].value == "") {
    //         $("." + tr).show();
    //         return;
    //     }
    //     $("." + tr).not($("." + tr).eq(0)).hide();

    //     $("." + tr).filter(function(i, v) {
    //         var $t = $(this);
    //         console.log("$t", $t.attr("rowspan"))
    //         for (var d = 0; d < data.length; ++d) {
    //             if ($t.is(":contains('" + data[d] + "')") || $t.is(":contains('" + data[d].toUpperCase() + "')") || $t.is(":contains('" + data[d].toLowerCase() + "')")) {
    //                 return true;
    //             }
    //         }
    //         return false;
    //     }).show();

    //     // rowspan 값 확인
    //     $("." + tr + "[rowspan]").each(function() {
    //         var rowspan = parseInt($(this).attr("rowspan"));
    //         // rowspan 값만큼 다음 tr 보여주기
    //         for (var i = 1; i < rowspan; i++) {
    //             $(this).nextAll(":lt(" + rowspan + ")").show();
    //         }
    //     });
    // }

    var color_obj = {};
    async function color_table_get(){
        return axios({
            method:'post',
            url:'/ColorTableGet',
            data:{}
        }).then(res=>{
            const data = res.data;
            if(data.code==200){
                data.data.forEach(function(obj,index){
                    color_obj[obj.num] = obj.name;
                });
                
            }
        })
    }
    color_table_get();

    function processBulkPayment(){
        const bulkPaymentDate = document.getElementById('bulk_payment_date').value;
        const bulkPaymentType = document.getElementById('bulk_payment_type').value;
        let chk_obj_arr = {
            orderkey:[],
            money:[],
            date:[]
        };
        $('.excel_all_check').each(function(index,element){
            if($(element).is(':checked') && $(element).data('money') != 0){
                chk_obj_arr.orderkey.push($(element).data('orderkey'));
                chk_obj_arr.money.push($(element).data('money')); 
                chk_obj_arr.date.push($(element).data('date'));
            }
        });
        console.log(chk_obj_arr);
        // if(bulkPaymentDate==''){
        //     $('#bulk_payment_date').focus();
        //     // $('body').append("<div class='guide_txt' style='top:30%'><div class='guide_txt_inner'><div>입금일자를 선택해주세요!</div></div></div>");
        //     return;
        // }
        let return_data = {};
        if(chk_obj_arr.orderkey.length>0){
            chk_obj_arr.orderkey.forEach(function(obj,index){
                let pay_sdate = "";
                let pay_edate = "";
                if(chk_obj_arr.date[index].includes("~")){
                    pay_sdate = chk_obj_arr.date[index].split("~")[0];
                    pay_edate = chk_obj_arr.date[index].split("~")[1];
                }
                return_data = {
                    'paymoney':parseInt(chk_obj_arr.money[index]),
                    'paytype':bulkPaymentType,
                    'paysdate':pay_sdate,
                    'paydate':pay_edate,
                    'payinsertdate':pay_sdate,
                    'key':obj,
                    'company':company,
                    'paytxt':""
                }
                // console.log("?",return_data);
                if(parseInt(chk_obj_arr.money[index])>0){
                        axios({
                            method:'post',
                            url:'/pay_return',
                        data:return_data
                    }).then(res=>{
                        console.log(res);
                        if(res.data.code==200){
                            
                        }
                    })
                }
            });
            moneyexcel(1,uid,$('#datepicker').val(),$('#datepicker2').val(),"",contract,delivery,product,centername,manager,phone,bcode,printchk,confirm1,confirm2,deliverycar,memo,$('.t_on'));
            document.body.removeChild(document.querySelector('.payment_modalBackground'));
        }else{
           
            return;
        }
    }

    function chk_payment_btn_click(){
        const modalBackground = document.createElement('div');
        modalBackground.style.cssText = `
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 9999;
        `;

        modalBackground.classList.add('payment_modalBackground');

        const modalContainer = document.createElement('div'); 
        modalContainer.style.cssText = `
            background: white;
            padding: 20px;
            border-radius: 5px;
            width: 400px;
        `;

        const modalTitle = document.createElement('h3');
        modalTitle.innerText = '일괄 입금처리';
        modalTitle.style.cssText = `
            margin: 0 0 20px 0;
            text-align: center;
        `;

        let excel_all_check_cnt = 0;
        $('.excel_all_check').each(function(index,element){
            if($(element).is(':checked')){
                excel_all_check_cnt++;
            }
        });

        const modalContent = document.createElement('div');
        modalContent.innerHTML = `
            <div>
            <div style="margin-bottom: 15px;">
                <label style="display: block; margin-bottom: 5px;">선택 주문서 수량</label>
                <div id="selected_order_count" style="
                    padding: 5px;
                    background: #f5f5f5;
                    border: 1px solid #ddd;
                    border-radius: 4px;
                    text-align: center;
                    font-weight: bold;
                    font-size: 16px;
                ">${excel_all_check_cnt}건</div>
            </div>
            </div>
            <div style="margin-bottom: 15px;">
                <label style="display: block; margin-bottom: 5px;">입금일자</label>
                <input type="text" id="bulk_payment_date" style="width: 100%; padding: 5px; font-size: 16px; font-weight: bold;" placeholder="주문일자" readonly disabled>
            </div>
            <div style="margin-bottom: 15px;">
                <label style="display: block; margin-bottom: 5px;">입금방식</label>
                <select id="bulk_payment_type" style="width: 100%; padding: 5px; font-size: 16px; font-weight: bold;">
                    <option value="0">현금</option>
                    <option value="1">카드</option>
                    <option value="2">이체</option>
                </select>
            </div>
            <div style="text-align: center;">
                <button onclick="processBulkPayment()" style="
                    padding: 8px 20px;
                    background-color: #3085d6;
                    color: white;
                    border: none;
                    border-radius: 4px;
                    cursor: pointer;
                    margin-right: 10px;
                ">확인</button>
                <button onclick="document.body.removeChild(document.querySelector('.payment_modalBackground'))" style="
                    padding: 8px 20px;
                    background-color: #d33;
                    color: white;
                    border: none;
                    border-radius: 4px;
                    cursor: pointer;
                ">취소</button>
            </div>
        `;

        modalContainer.appendChild(modalTitle);
        modalContainer.appendChild(modalContent);
        modalBackground.appendChild(modalContainer);
        document.body.appendChild(modalBackground);

        modalBackground.onclick = function(e) {
            if (e.target === modalBackground) {
                document.body.removeChild(modalBackground);
            }
        }

        $("#bulk_payment_date" ).datepicker({
            changeMonth: true,
            changeYear: true
        });
        $("#bulk_payment_date" ).datepicker( "option", "showAnim", "slide" );
        // $('#bulk_payment_date').prop('readonly', false);
    }

    var merget_cell_chk = false;

    function merge_cell_click(){
        merget_cell_chk = !merget_cell_chk;
        moneyexcel(1,uid,$('#datepicker').val(),$('#datepicker2').val(),'',contract,delivery,product,centername,manager,phone,bcode,printchk,confirm1,confirm2,deliverycar,memo,$('.t_on'))
        // console.log("merge_cell_click",merget_cell_chk);
    }

    function excel_change_swal(contract,delivery,product,centername,manager,phone,bcode,printchk,confirm1,confirm2,deliverycar,memo){
        Swal.fire({
            width: '90%',
            fontsize:'13px',
            title: '엑셀변환 선택',
            html:`
            
                <div class="flex">
                    <div class="order_excel_btn" data-type="g" onclick='orderlistexcel(1,"${uid}","${$('#datepicker').val()}","${$('#datepicker2').val()}","","${contract}","${delivery}","${product}","${centername}","${manager}","${phone}","${bcode}","${printchk}","${confirm1}","${confirm2}","${deliverycar}","","","${memo}",this);'>주문서 목록</div>
                    <div class="order_excel_btn" data-type="o" onclick='orderexcel(1,"${uid}","${$('#datepicker').val()}","${$('#datepicker2').val()}","","${contract}","${delivery}","${product}","${centername}","${manager}","${phone}","${bcode}","${printchk}","${confirm1}","${confirm2}","${deliverycar}","${memo}",this);'>제품관리대장/AS관리대장</div>
                    <div class="order_excel_btn" data-type="m" onclick='moneyexcel(1,"${uid}","${$('#datepicker').val()}","${$('#datepicker2').val()}","","${contract}","${delivery}","${product}","${centername}","${manager}","${phone}","${bcode}","${printchk}","${confirm1}","${confirm2}","${deliverycar}","${memo}",this);'>본인부담금수납대장</div>
                    <div class="order_excel_btn" data-type="i" onclick='installexcel(1,"${uid}","${$('#datepicker').val()}","${$('#datepicker2').val()}","","${contract}","${delivery}","${product}","${centername}","${manager}","${phone}","${bcode}","${printchk}","${confirm1}","${confirm2}","${deliverycar}","${memo}",this);'>제품설치대장</div>
                </div>
                <div style="height:700px;">
                    <div class="table_search_area flex" style="font-weight:bold; padding:10px 0px 10px 0px;">
                        <div class="flex" style="width:300px; font-weight:bold;">조회일자&nbsp;:&nbsp;&nbsp;<div style="font-weight:bold; font-size:16px;">${$('#datepicker').val()}</div>&nbsp;~&nbsp;<div style="font-weight:bold; font-size:16px;">${$('#datepicker2').val()}</div></div><div style="font-weight:bold;">성함/인정번호 : </div><input id="form" type="text" onchange="table_search(this)" style="height:30px;"><div><div class="table_search_btn" onclick="table_search($('#form')[0])">검색</div></div><div class="money_excel_option" style="font-weight:bold; padding:0px 10px 0px 10px; line-height:20px; display:none;"></div>
                    </div>
                    <div class="money_excel_info_area" style="display:none;">
                        <div class="flex" style="font-weight:bold; font-size:16px; margin-bottom: 10px;">
                            <div class="chk_payment_btn_area">
                                <div class="chk_payment_btn" onclick="chk_payment_btn_click()">선택 일괄 입금처리</div>
                            </div>
                            <div style="margin-right: 10px; margin-left: 10px; font-size:16px; font-weight:bold;">판매총금액:</div><div class="money_excel_info_area_buy_total_money" style="margin-left: 10px; font-size:16px; font-weight:bold;"></div>원
                            <div style="margin-right: 10px; margin-left: 10px; font-size:16px; font-weight:bold;">판매본인부담금:</div><div class="money_excel_info_area_buy_money" style="margin-left: 10px; font-size:16px; font-weight:bold;"></div>원
                            <div style="margin-right: 10px; margin-left: 10px; font-size:16px; font-weight:bold;">판매미수금:</div><div class="money_excel_info_area_buy_nomoney" style="margin-left: 10px; font-size:16px; font-weight:bold;"></div>원
                            &nbsp;&nbsp;&nbsp;┃&nbsp;
                            <!--div style="margin-right: 10px; margin-left: 10px; font-size:16px; font-weight:bold;">대여총금액:</div><div class="money_excel_info_area_rent_money" style="margin-left: 10px; font-size:16px; font-weight:bold;"></div-->원
                            <div style="margin-right: 10px; margin-left: 10px; font-size:16px; font-weight:bold;">대여본인부담금:</div><div class="money_excel_info_area_rent_money" style="margin-left: 10px; font-size:16px; font-weight:bold;"></div>원
                            <div style="margin-right: 10px; margin-left: 10px; font-size:16px; font-weight:bold;">대여미수금:</div><div class="money_excel_info_area_rent_nomoney" style="margin-left: 10px; font-size:16px; font-weight:bold;"></div>원
                            &nbsp;&nbsp;&nbsp;
                            <div style="display: flex; align-items: center; margin-left: 10px; font-weight:bold;">셀 병합<span style="margin-left: 5px;"><input type="checkbox" id="merge_cell" onclick="merge_cell_click()" style="cursor: pointer; width:20px; height:20px;" checked></span></div>
                        </div>
                    </div>
                    <table id="excelbody" class="excelbody" style="width:100%;">

                    </table>
                </div>
            `,
            icon: '',
            showCancelButton: true,
            showConfirmButton:true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: '엑셀변환',
            cancelButtonText: '취소',
            allowOutsideClick: false,
            preConfirm: ()=>{
                exelchange($('.t_on').data('type'));
            }
        }).then((result) => {
            if (result.isConfirmed) {
            }
        });
    }

    async function orderexcel(page,username,dates,datee,query,ccontract,ddelivery,pproduct,ccentername,mmanager,pphone,bbcode,pprintchk,cconfirm1,cconfirm2,ddeliverycar,mmemo,t_obj){ 
        if (window.isProcessing) return;
        window.isProcessing = true;
        if(daysBetweenDates(dates,datee)>60){
            Swal.fire({
                title: '최대 60일까지만 조회가 가능합니다.',
                icon: 'error',
                showCancelButton: false,
                showConfirmButton: true,
                confirmButtonText: '확인'
            });
            return;
        }
        
        Swal.showLoading(); 
        $('#form').val('');    
        $('.money_excel_option').hide();  
        $('.money_excel_info_area').hide();
        const orderexcel_styles = {
            ".exceltr td:nth-child(1), .order_excel_thead tr th:nth-child(1)": "80px",
            ".exceltr td:nth-child(2), .order_excel_thead tr th:nth-child(2)": "50px",
            ".exceltr td:nth-child(3), .order_excel_thead tr th:nth-child(3)": "100px",
            ".exceltr td:nth-child(4), .order_excel_thead tr th:nth-child(4)": "50px",
            ".exceltr td:nth-child(5), .order_excel_thead tr th:nth-child(5)": "50px",
            ".exceltr td:nth-child(6), .order_excel_thead tr th:nth-child(6)": "50px",
            ".exceltr td:nth-child(7), .order_excel_thead tr th:nth-child(7)": "100px",
            ".exceltr td:nth-child(8), .order_excel_thead tr th:nth-child(8)": "100px",
            ".exceltr td:nth-child(9), .order_excel_thead tr th:nth-child(9)": "130px",
            ".exceltr td:nth-child(10), .order_excel_thead tr th:nth-child(10)": "140px",
            ".exceltr td:nth-child(11), .order_excel_thead tr th:nth-child(11)": "50px",
            ".exceltr td:nth-child(12), .order_excel_thead tr th:nth-child(12)": "100px",
            ".exceltr td:nth-child(13), .order_excel_thead tr th:nth-child(13)": "80px",
            ".exceltr td:nth-child(14), .order_excel_thead tr th:nth-child(14)": "80px",
            ".exceltr td:nth-child(15), .order_excel_thead tr th:nth-child(15)": "80px",
            ".exceltr td:nth-child(16), .order_excel_thead tr th:nth-child(16)": "80px",
            ".exceltr td:nth-child(17), .order_excel_thead tr th:nth-child(17)": "80px",
            ".exceltr td:nth-child(18), .order_excel_thead tr th:nth-child(18)": "100px",
            ".exceltr td:nth-child(19), .order_excel_thead tr th:nth-child(19)": "80px",
            ".exceltr td:nth-child(20), .order_excel_thead tr th:nth-child(20)": "80px",
            ".exceltr td:nth-child(21), .order_excel_thead tr th:nth-child(21)": "80px",
        };
        $('.exceltr,.order_excel_thead,.order_excel_tbody').remove();
        $('.exceltr').remove();
        $(t_obj).addClass('t_on');
        $('.order_excel_btn').not($(t_obj)).removeClass('t_on');
        let share_chk_obj = [];
        $('.share_chk').each(function(){
            if($(this).is(':checked')){
                if("<%=company%>"!=$(this).val()){
                    share_chk_obj.push($(this).val());
                }
            }
        });
        $.ajax({
            url:"/orderlookupexcel",
            data:"company="+company+'&page='+page+'&username='+username+'&dates='+dates+'&datee='+datee+'&query='+query+'&contract='+ccontract+'&delivery='+ddelivery+'&product='+pproduct+'&centername='+ccentername+'&manager='+mmanager+'&phone='+pphone+'&bcode='+bbcode.replace(/ /g,'')+'&printchk='+pprintchk+'&confirm1='+cconfirm1+'&confirm2='+cconfirm2+'&deliverycar='+ddeliverycar+'&memo='+mmemo+'&share_chk_obj='+share_chk_obj,
            type:'POST',
            dataType:"JSON",
            async:true,
            success:function(results){
                let as_th = `<th>a/s접수일자</th><th>수리보수사항</th><th>처리일자</th><th>처리내용</th>`;
                let comment_th = `<th>메모</th>`;
                var str = '<thead class="order_excel_thead"><tr class="exceltr"><th>주문일자<br/>(재계약일)</th><th>수급자성명</th><th>장기요양인정번호</th><th>인정등급</th><th>수급자구분</th><th>본인부담률</th><th>제품코드</th><th>바코드</th><th>품목명</th><th>제품명</th><th>단가</th><th>계약일</th><th>계약구분</th><th>주문구분</th><--td>총금액</td--><th>담당자</th><th>배송구분</th><th>센터명</th>'+as_th+comment_th+`<th style="width:15px;"></th></tr></thead>`;
                str += '<tbody class="order_excel_tbody">';
                const od = results.result;
                const od2 = results.result2;
                console.log("od",od)
                console.log(od2,"od2")
                const od3 = results.result3;
                var plist = results.plist;
                var plistdic_rent = {};
                var plistdic_buy = {};
                var plistdic = {};
                let plist_name_dic = {};
                for(pl of plist){
                    plist_name_dic[pl.code]=[pl.name];
                    if(pl.target=='대여'){
                        plistdic[pl.code]=[pl.rentprice];
                        if(!Object.keys(plistdic_rent).includes(pl.code))plistdic_rent[pl.code] = [];
                        plistdic_rent[pl.code].push(pl.rentprice+'|'+pl.date);
                    }else if(pl.target=='구입'){
                        plistdic[pl.code]=[pl.buyprice];
                        if(!Object.keys(plistdic_buy).includes(pl.code))plistdic_buy[pl.code] = [];
                        plistdic_buy[pl.code].push(pl.buyprice+'|'+pl.date);
                    }else if(pl.target=='구입 또는 대여'){
                        plistdic[pl.code]=[pl.buyprice,pl.rentprice];
                        if(!Object.keys(plistdic_buy).includes(pl.code))plistdic_buy[pl.code] = [];
                        plistdic_buy[pl.code].push(pl.buyprice+'|'+pl.date);
                        if(!Object.keys(plistdic_rent).includes(pl.code))plistdic_rent[pl.code] = [];
                        plistdic_rent[pl.code].push(pl.rentprice+'|'+pl.date);
                    }
                    
                }
                var str1 = '';
                var str2 = '';
                var cdate = '';
                var money = 0;
                $.each(od,function(i){
                    money=0;
                    
                    if(od[i].rentproduct==''){
                        str2 = '판매'; 
                        cdate = od[i].cancled.split(' ')[0];
                    }else{
                        str2 = '대여';
                        cdate = od[i].rentstart + '~' + od[i].rentend;
                    } 
                    if(od[i].chk=='ok'){
                        str1 = '계약완료';
                    }else if(od[i].chk=='n'){
                        str1 = '미계약';
                    }else if(od[i].chk=='cok'){
                        str1 = '취소계약';
                        str2 += '회수';
                    }
                    var prn = od[i].product.replace(/((블루,레드)|(네이비,베이지)|(오션블루, 버건디)|(오션블루,버건디))/g,'');
                    
                    if(od[i].target=='기초'){
                        if(str2 == '판매'){
                            if(prn.includes(',')){
                                var psp = prn.split(',');
                                for(fpsp of psp){
                                    //console.log(fpsp.split('|')[0])
                                    money = parseInt(plistdic[fpsp.split('|')[0]][0]);
                                }
                                //console.log(money);
                            }else{
                                money = parseInt(plistdic[prn.split('|')[0]][0]);
                                //console.log(money);
                            }
                        }else if(str2 =='대여'){


                        }
                    }else{
                        if(od[i].money!=0&&od[i].money!=''){
                            //money = parseInt(od[i].money)/(parseInt(od[i].sale.replace('%',''))/100);
                            money = parseInt(plistdic[prn.split('|')[0]][0]);
                        }else{
                            money = parseInt(plistdic[prn.split('|')[0]][0]);
                        }
                        //console.log(money);
                    }
                    let od_delivery = od[i].deliverymanager;
                    let od_deliverytxt = '';
                    if(od_delivery=="none"){
                        od_deliverytxt = '물류(기관배송)';
                    }else if(od_delivery=='basic'){
                        od_deliverytxt = '택배배송';
                    }else if(od_delivery=='not'){
                        od_deliverytxt = '내방';
                    }else if(od_delivery=='clean'){
                        od_deliverytxt = '소독업체직배송';
                    }else if(od_delivery=='supply'){
                        od_deliverytxt = '공급업체직배송';
                    }
                    let as_receipt_date = '';
                    let as_receipt_txt = '';
                    let as_receipt_enddate = '';
                    let as_receipt_endtxt = '';
                    // od3.forEach(function(obj,index){
                    //     if(obj.orderkey==od[i].num){
                    //         as_receipt_date += obj.receiptdate+'<br/>';
                    //         as_receipt_txt += obj.receipttxt+'<br/>';
                    //         as_receipt_enddate += obj.receiptenddate+'<br/>';
                    //         as_receipt_endtxt += obj.receiptendtxt+'<br/>';
                    //     }
                    // });
                    var odr = od[i].product.replace(/((블루,레드)|(네이비,베이지)|(오션블루, 버건디)|(오션블루,버건디))/g,'');
                    var odbc = '';
                    var size_arr = '';
                    var color_arr = '';
                    
                    // let as_text = `<td>${as_receipt_date}</td><td>${as_receipt_txt}</td><td>${as_receipt_enddate}</td><td>${as_receipt_endtxt}</td>`;
                    let comment_text = `<td class="comment_td" style="font-size:1px;">${od[i].comment_text||''}</td>`;

                    if(odr.includes(',')){
                        $.each(odr.split(','),function(z){
                            let pdan = 0;
                            for(var index=0; index<plistdic_buy[odr.split(',')[z].split('|')[0]].length; index++){
                                let obj_dan = plistdic_buy[odr.split(',')[z].split('|')[0]][index].split("|")[0];
                                let obj_date = plistdic_buy[odr.split(',')[z].split('|')[0]][index].split("|")[1];
                                if(new Date(obj_date) <= new Date(cdate)){
                                    pdan = obj_dan;
                                    //console.log(obj_dan, pdan, obj_date, cdate, index);
                                    break
                                }
                            }
                            if(parseInt(od[i].buycnt.split(',')[z])>1){
                                $.each(od[i].buybcode.split(',')[z].split('|'),function(y){
                                    odbc = od[i].buybcode.split(',')[z].split('|')[y];
                                    if(od[i].sizearr)size_arr = od[i].sizearr.split(',')[z].split('|')[y];
                                    if(od[i].colorarr)color_arr = od[i].colorarr.split(',')[z].split('|')[y];
                                    if(odbc=='direct'||odbc==''||!odbc||odbc==null)odbc="미입력";
                                    if(size_arr=='undefined'||size_arr==''||!size_arr||size_arr==null)size_arr="";
                                    if(color_arr=='undefined'||color_arr==''||!color_arr||color_arr==null)color_arr="";
                                    od3.forEach(function(obj,index){
                                        if(obj.orderkey==od[i].num){
                                            if(obj.pcode==odr.split(',')[z].split('|')[0]&&obj.bcode==parseInt(odbc)){
                                                as_receipt_date = obj.receiptdate+'<br/>';
                                                as_receipt_txt = obj.receipttxt+'<br/>';
                                                as_receipt_enddate = obj.receiptenddate+'<br/>';
                                                as_receipt_endtxt = obj.receiptendtxt+'<br/>';
                                            }else{
                                                as_receipt_date = '';
                                                as_receipt_txt = '';
                                                as_receipt_enddate = '';
                                                as_receipt_endtxt = '';
                                            }
                                        }
                                    });
                                    let as_text = `<td>${as_receipt_date}</td><td>${as_receipt_txt}</td><td>${as_receipt_enddate}</td><td>${as_receipt_endtxt}</td>`;

                                    str += '<tr class="exceltr" onclick="excel_table_click(this,'+od[i].num+',\''+od[i].number+'\')"><td>'+od[i].orderdate.split(" ")[0]+'</td><td>'+od[i].name+'</td><td>'+od[i].number+'</td><td>'+od[i].ranker+'</td><td>'+od[i].target+'</td><td>'+od[i].sale+'</td><td>'+odr.split(',')[z].split('|')[0]+'</td><td>'+parseInt(odbc)+'</td><td>'+plist_name_dic[odr.split(',')[z].split('|')[0]]+'</td><td>'+odr.split(',')[z].split('|')[1]+'&nbsp; '+size_arr+(color_obj[color_arr]||'')+'</td><td>'+pdan+'</td><td>'+cdate+'</td><td>'+str1+'</td><td>'+str2+'</td><!--td>'+money+'</td--><td>'+od[i].manager+'</td><td>'+od_deliverytxt+'</td><td>'+od[i].centername+'</td>'+as_text+comment_text+'</tr>';
                                });
                            }else{
                                
                                odbc = od[i].buybcode.split(',')[z];
                                size_arr = od[i].sizearr.split(',')[z];
                                color_arr = od[i].colorarr.split(',')[z];
                                if(odbc=='direct'||odbc==''||!odbc||odbc==null)odbc="미입력";
                                if(size_arr=='undefined'||size_arr==''||!size_arr||size_arr==null||size_arr.includes("undefined"))size_arr="";
                                if(color_arr=='undefined'||color_arr==''||!color_arr||color_arr==null||color_arr.includes("undefined"))color_arr="";
                                od3.forEach(function(obj,index){
                                    if(obj.orderkey==od[i].num){
                                        if(obj.pcode==odr.split(',')[z].split('|')[0]&&obj.bcode==parseInt(odbc)){
                                            as_receipt_date = obj.receiptdate+'<br/>';
                                            as_receipt_txt = obj.receipttxt+'<br/>';
                                            as_receipt_enddate = obj.receiptenddate+'<br/>';
                                            as_receipt_endtxt = obj.receiptendtxt+'<br/>';
                                        }else{
                                            as_receipt_date = '';
                                            as_receipt_txt = '';
                                            as_receipt_enddate = '';
                                            as_receipt_endtxt = '';
                                        }
                                    }
                                });
                                let as_text = `<td>${as_receipt_date}</td><td>${as_receipt_txt}</td><td>${as_receipt_enddate}</td><td>${as_receipt_endtxt}</td>`;

                                str += '<tr class="exceltr" onclick="excel_table_click(this,'+od[i].num+',\''+od[i].number+'\')"><td>'+od[i].orderdate.split(" ")[0]+'</td><td>'+od[i].name+'</td><td>'+od[i].number+'</td><td>'+od[i].ranker+'</td><td>'+od[i].target+'</td><td>'+od[i].sale+'</td><td>'+odr.split(',')[z].split('|')[0]+'</td><td>'+parseInt(odbc)+'</td><td>'+plist_name_dic[odr.split(',')[z].split('|')[0]]+'</td><td>'+odr.split(',')[z].split('|')[1]+'&nbsp; '+size_arr+(color_obj[color_arr]||'')+'</td><td>'+pdan+'</td><td>'+cdate+'</td><td>'+str1+'</td><td>'+str2+'</td><!--td>'+money+'</td--><td>'+od[i].manager+'</td><td>'+od_deliverytxt+'</td><td>'+od[i].centername+'</td>'+as_text+comment_text+'</tr>';
                            }
                        });
                    }else{
                        for(var index=0; index<plistdic_buy[od[i].product.split('|')[0]].length; index++){
                            let obj_dan = plistdic_buy[od[i].product.split('|')[0]][index].split("|")[0];
                            let obj_date = plistdic_buy[od[i].product.split('|')[0]][index].split("|")[1];
                            if(new Date(obj_date) <= new Date(cdate)){
                                pdan = obj_dan;
                                //console.log(obj_dan, pdan, obj_date, cdate, index);
                                break
                            }
                            
                        }
                        if(parseInt(od[i].buycnt)>1){
                            $.each(od[i].buybcode.split('|'),function(y){
                                odbc = od[i].buybcode.split('|')[y];
                                if(od[i].sizearr)size_arr = od[i].sizearr.split('|')[y];
                                if(od[i].colorarr)color_arr = od[i].colorarr.split('|')[y];
                                if(odbc=='direct'||odbc==''||!odbc||odbc==null)odbc="미입력";
                                if(size_arr=='undefined'||size_arr==''||!size_arr||size_arr==null||size_arr.includes("undefined"))size_arr="";
                                if(color_arr=='undefined'||color_arr==''||!color_arr||color_arr==null)color_arr="";
                                od3.forEach(function(obj,index){
                                    if(obj.orderkey==od[i].num){
                                        if(obj.pcode==od[i].product.split('|')[0]&&obj.bcode==parseInt(odbc)){
                                            as_receipt_date = obj.receiptdate+'<br/>';
                                            as_receipt_txt = obj.receipttxt+'<br/>';
                                            as_receipt_enddate = obj.receiptenddate+'<br/>';
                                            as_receipt_endtxt = obj.receiptendtxt+'<br/>';
                                        }else{
                                            as_receipt_date = '';
                                            as_receipt_txt = '';
                                            as_receipt_enddate = '';
                                            as_receipt_endtxt = '';
                                        }
                                    }
                                });
                                let as_text = `<td>${as_receipt_date}</td><td>${as_receipt_txt}</td><td>${as_receipt_enddate}</td><td>${as_receipt_endtxt}</td>`;

                                str += '<tr class="exceltr" onclick="excel_table_click(this,'+od[i].num+',\''+od[i].number+'\')"><td>'+od[i].orderdate.split(" ")[0]+'</td><td>'+od[i].name+'</td><td>'+od[i].number+'</td><td>'+od[i].ranker+'</td><td>'+od[i].target+'</td><td>'+od[i].sale+'</td><td>'+od[i].product.split('|')[0]+'</td><td>'+parseInt(odbc)+'</td><td>'+plist_name_dic[od[i].product.split('|')[0]]+'</td><td>'+od[i].product.split('|')[1]+'&nbsp; '+size_arr+(color_obj[color_arr]||'')+'</td><td>'+pdan+'</td><td>'+cdate+'</td><td>'+str1+'</td><td>'+str2+'</td><!--td>'+money+'</td--><td>'+od[i].manager+'</td><td>'+od_deliverytxt+'</td><td>'+od[i].centername+'</td>'+as_text+comment_text+'</tr>';

                            });
                        }else{
                            odbc = od[i].buybcode;
                            if(od[i].sizearr)size_arr = od[i].sizearr;
                            if(od[i].colorarr)color_arr = od[i].colorarr;
                            if(odbc=='direct'||odbc==''||!odbc||odbc==null)odbc="미입력";
                            if(size_arr=='undefined'||size_arr==''||!size_arr||size_arr==null||size_arr.includes("undefined"))size_arr="";
                            if(color_arr=='undefined'||color_arr==''||!color_arr||color_arr==null||color_arr.includes("undefined"))color_arr="";
                            od3.forEach(function(obj,index){
                                    if(obj.orderkey==od[i].num){
                                    if(obj.pcode==od[i].product.split('|')[0]&&obj.bcode==parseInt(odbc)){
                                        as_receipt_date = obj.receiptdate+'<br/>';
                                        as_receipt_txt = obj.receipttxt+'<br/>';
                                        as_receipt_enddate = obj.receiptenddate+'<br/>';
                                        as_receipt_endtxt = obj.receiptendtxt+'<br/>';
                                    }else{
                                        as_receipt_date = '';
                                        as_receipt_txt = '';
                                        as_receipt_enddate = '';
                                        as_receipt_endtxt = '';
                                    }
                                }
                            });
                            let as_text = `<td>${as_receipt_date}</td><td>${as_receipt_txt}</td><td>${as_receipt_enddate}</td><td>${as_receipt_endtxt}</td>`;

                            str += '<tr class="exceltr" onclick="excel_table_click(this,'+od[i].num+',\''+od[i].number+'\')"><td>'+od[i].orderdate.split(" ")[0]+'</td><td>'+od[i].name+'</td><td>'+od[i].number+'</td><td>'+od[i].ranker+'</td><td>'+od[i].target+'</td><td>'+od[i].sale+'</td><td>'+od[i].product.split('|')[0]+'</td><td>'+parseInt(odbc)+'</td><td>'+plist_name_dic[od[i].product.split('|')[0]]+'</td><td>'+od[i].product.split('|')[1]+'&nbsp; '+size_arr+(color_obj[color_arr]||'')+'</td><td>'+pdan+'</td><td>'+cdate+'</td><td>'+str1+'</td><td>'+str2+'</td><!--td>'+money+'</td--><td>'+od[i].manager+'</td><td>'+od_deliverytxt+'</td><td>'+od[i].centername+'</td>'+as_text+comment_text+'</tr>';
                        }
                    }                    
                });
                //str += '<tr class="exceltr"><td colspan="11"></td></tr>';
                var odbc = '';
                let now_date = new Date(new Date().getFullYear(), new Date().getMonth(), 1);

                $.each(od2,function(i){
                    
                    str2 = '대여';
                    cdate = od2[i].rentstart + '~' + od2[i].rentend;
                    if(od2[i].chk=='ok'){
                        str1 = '계약완료';
                    }else if(od2[i].chk=='n'){
                        str1 = '미계약';
                    }else if(od2[i].chk=='cok'){
                        str1 = '취소계약';
                        str2 += '회수';
                    }
                    var odrp = od2[i].product;
                    let od_delivery = od2[i].deliverymanager;
                    let od_deliverytxt = '';
                    if(od_delivery=="none"){
                        od_deliverytxt = '물류(기관배송)';
                    }else if(od_delivery=='basic'){
                        od_deliverytxt = '택배배송';
                    }else if(od_delivery=='not'){
                        od_deliverytxt = '내방';
                    }else if(od_delivery=='clean'){
                        od_deliverytxt = '소독업체직배송';
                    }else if(od_delivery=='supply'){
                        od_deliverytxt = '공급업체직배송';
                    }
                    let as_receipt_date = '';
                    let as_receipt_txt = '';
                    let as_receipt_enddate = '';
                    let as_receipt_endtxt = '';
                    od3.forEach(function(obj,index){
                        if(obj.orderkey==od2[i].num){
                            as_receipt_date += obj.receiptdate+'<br/>';
                            as_receipt_txt += obj.receipttxt+'<br/>';
                            as_receipt_enddate += obj.receiptenddate+'<br/>';
                            as_receipt_endtxt += obj.receiptendtxt+'<br/>';
                        }
                    });
                    if(odrp.includes(',')){
                        $.each(odrp.split(','),function(z){
                            let pdan = 0;
                            let result_dan = 0;
                            for(var index=0; index<plistdic_rent[odrp.split(',')[z].split('|')[0]].length; index++){
                                let obj_dan = plistdic_rent[odrp.split(',')[z].split('|')[0]][index].split("|")[0];
                                let obj_date = plistdic_rent[odrp.split(',')[z].split('|')[0]][index].split("|")[1];
                                if(new Date(obj_date) <= now_date){
                                    pdan = obj_dan;
                                    //console.log(obj_dan, pdan, obj_date, cdate, index);
                                    break
                                }
                                
                            }
                            odbc = od2[i].buybcode.split(',')[z];
                            if(odbc=='direct'||odbc==''||!odbc||odbc==null)odbc="미입력";
                            str += '<tr class="exceltr" onclick="excel_table_click(this,'+od2[i].num+',\''+od2[i].number+'\')"><td>'+od2[i].orderdate.split(' ')[0]+'<br/>('+(od2[i].constartdate||'-')+')</td><td>'+od2[i].name+'</td><td>'+od2[i].number+'</td><td>'+od2[i].ranker+'</td><td>'+od2[i].target+'</td><td>'+od2[i].sale+'</td><td>'+odrp.split(',')[z].split('|')[0]+'</td><td>'+parseInt(odbc)+'</td><td>'+plist_name_dic[odrp.split(',')[z].split('|')[0]]+'</td><td>'+odrp.split(',')[z].split('|')[1]+'</td><td>'+pdan+'</td><td>'+cdate+'</td><td>'+str1+'</td><td>'+str2+'</td><!--td>'+money+'</td--><td>'+od2[i].manager+'</td><td>'+od_deliverytxt+'</td><td>'+od2[i].centername+'</td><td>'+as_receipt_date+'</td><td>'+as_receipt_txt+'</td><td>'+as_receipt_enddate+'</td><td>'+as_receipt_endtxt+'</td></tr>';
                        });
                    }else{
                        let pdan = 0;
                        let result_dan = 0;
                        //console.log(od2[i].product.split('|')[0]);
                        for(var index=0; index<plistdic_rent[od2[i].product.split('|')[0]].length; index++){
                            let obj_dan = plistdic_rent[od2[i].product.split('|')[0]][index].split("|")[0];
                            let obj_date = plistdic_rent[od2[i].product.split('|')[0]][index].split("|")[1];
                            if(new Date(obj_date) <= now_date){
                                pdan = obj_dan;
                                //console.log(obj_dan, pdan, obj_date, cdate, index);
                                break
                            }
                            
                        }
                        odbc = od2[i].buybcode;
                        if(odbc=='direct'||odbc==''||!odbc||odbc==null)odbc="미입력";
                        str += '<tr class="exceltr" onclick="excel_table_click(this,'+od2[i].num+',\''+od2[i].number+'\')"><td>'+od2[i].orderdate.split(' ')[0]+'<br/>('+(od2[i].constartdate||'-')+')</td><td>'+od2[i].name+'</td><td>'+od2[i].number+'</td><td>'+od2[i].ranker+'</td><td>'+od2[i].target+'</td><td>'+od2[i].sale+'</td><td>'+od2[i].product.split('|')[0]+'</td><td>'+parseInt(odbc)+'</td><td>'+plist_name_dic[od2[i].product.split('|')[0]]+'</td><td>'+od2[i].product.split('|')[1]+'</td><td>'+pdan+'</td><td>'+cdate+'</td><td>'+str1+'</td><td>'+str2+'</td><!--td>'+money+'</td--><td>'+od2[i].manager+'</td><td>'+od_deliverytxt+'</td><td>'+od2[i].centername+'</td><td>'+as_receipt_date+'</td><td>'+as_receipt_txt+'</td><td>'+as_receipt_enddate+'</td><td>'+as_receipt_endtxt+'</td></tr>';

                    }

                });
                str+="</tbody>";
                // $('.excelbody').append(str);
                loadDataEfficiently(str);
                //exelchange('p');
                applyStyles(orderexcel_styles);
                Swal.hideLoading();
            }
        });
    }
    
    function filterdel(page,username,dates,datee,query,contract,delivery,product,centername,manager,phone,bcode,printchk,chk,confirm1,confirm2,deliverycar,contents_size,buyrentview,memo){
        if(chk=='인쇄')printchk = '';
        if(chk=='계약상태')contract = '';
        if(chk=='품목명')product = '';
        if(chk=='배송상태')delivery = '';
        if(chk=='배송방법')deliverycar = '';
        if(chk=='센터명')centername = '';
        if(chk=='바코드')bcode = '';
        if(chk=='연락처')phone = '';
        if(chk=='담당자')manager = '';
        if(chk=='판매구분')buyrentview = '';
        if(chk=="메모")memo = '';
        orderlookup(1,uid,dates,datee,query,contract,delivery,product,centername,manager,phone,bcode,printchk,confirm1,confirm2,deliverycar,contents_size,buyrentview,memo);
    }


    function getTodayLabel() {
        var week = new Array('(일)', '(월)', '(화)', '(수)', '(목)', '(금)', '(토)');
        var today = new Date().getDay();
        var todayLabel = week[today];
        return todayLabel;
    }

    function monthsBetweenDates(date1, date2) {
        // 입력된 날짜 문자열을 Date 객체로 변환
        var d1 = new Date(date1);
        var d2 = new Date(date2);
        console.log(d1,d2)
        // 두 날짜의 연도와 월을 가져옴
        var year1 = d1.getFullYear();
        var year2 = d2.getFullYear();
        var month1 = d1.getMonth();
        var month2 = d2.getMonth();
        
        // 두 날짜 간의 연도 차이와 월 차이 계산
        var monthsDifference = (year2 - year1) * 12 + (month2 - month1);
        
        // 일자가 같은 경우에는 1달을 추가하지 않음
        if (d2.getDate() < d1.getDate()) {
            monthsDifference--;
        }
        
        return monthsDifference+1;
    }


    var page_otr_data = [];
    var page_cnum_data = {};
    let err_obj = {
        name_arr:[],
        number_arr:[],
        el_arr:[]
    }
    // let name_arr = [];
    // let number_arr = [];
    // let el_arr = [];

    function roundToOneDecimalPlace(number) {
        return Math.round(number * 10) / 10;
    }

    async function rent_add_make_doc_zero(x,p_obj){
        now_doc_create = 'zero';

        let now = new Date();
        let year = now.getFullYear();
        let mon = (now.getMonth() + 1) > 9 ? '' + (now.getMonth() + 1) : '0' + (now.getMonth() + 1);
        let day = now.getDate() > 9 ? '' + now.getDate() : '0' + now.getDate();
        let chan_val = year + '-' + mon + '-' + day;
        const lastdate = new Date(year, mon, 0).getDate();
        let last_chan_val = year + '-' + mon + '-' +lastdate;
        let tr_data = $('.ordertr')
        err_obj.name_arr = [];
        err_obj.number_arr =[];
        err_obj.el_arr = [];
        let same_arr = [];
        $.each(tr_data,async function(i){
            if($(tr_data[i]).children('td').eq(0).children('input').is(":checked")){
                let otr_data = page_otr_data[i];
                let name = otr_data.name;
                let number = otr_data.number;
                let order_date = otr_data.orderdate.split(" ")[0];
                same_arr.push(order_date+"|"+name+"|"+number);
            }else{
                same_arr.push('');
            }
        });
        const duplicateIndexes = {};
        same_arr.forEach((value, index) => {
            if (!(value in duplicateIndexes)) {
                duplicateIndexes[value] = [index];
            } else {
                duplicateIndexes[value].push(index);
            }
        });

        for (const [value, indexes] of Object.entries(duplicateIndexes)) {
            if (indexes.length > 1) {
                console.log(`값 ${value}의 중복된 인덱스: ${indexes.join(', ')}`);
            }
        }
        let continue_arr = [];
        let continue_chk = 0;

        const ionContents = document.getElementsByClassName('iprint_zero');
        $.each(tr_data,async function(i){
            continue_chk = 0;
            let bcode_sale_cnt = 0;
            if($(tr_data[i]).children('td').eq(0).children('input').is(":checked")&&($(tr_data[i]).children('td').eq(5).text()=="기초"||$(tr_data[i]).children('td').eq(5).text()=="의료급여")&&!$(tr_data[i]).children('td').eq(0).children('input').hasClass('allchk')){
                
                
                for(var c=0; c<continue_arr.length; c++){
                    if((i)==continue_arr[c]){
                        
                        continue_chk = 1;
                    }
                }
                if(continue_chk==1)return true;
                
                let di = 1;
                let rentendResult = {};
                let rentstartResult = {};
                let pdfstr1 = '';
                let pdfstr1_2 = '';
                let pdfstr1_2_r = '';
                let pdfstr1_3 = '';
                let alldm3 = 0;
                let alldm4 = 0;
                let pdfdantotal = 0;
                let pdfbuytotal = 0;
                let pdfgongtotal = 0;
                
                let otr_data = page_otr_data[i];
                
                
                let name = otr_data.name;
                let number = otr_data.number;
                let order_date = otr_data.orderdate.split(" ")[0];
                let otr_product = [otr_data.product];
                let otr_buybcode = otr_data.buybcode;
                let otr_buycnt = otr_data.buycnt;
                let otr_target = [];
                let otr_rentproduct = '';
                let otr_rbuybcode = '';
                let otr_rbuycnt = '';
                let otr_rentstart = [];
                let otr_rentend = [];
                let di_arr = [];
                let bcode_sale_cnt = [];
                let otr_rent_chk = [];
                if(otr_data.rkey!=''&&otr_data.rkey!=null){
                    otr_rentstart = [otr_data.rentstart];
                    otr_rentend = [otr_data.rentend];
                    di_arr = [1];
                    otr_rent_chk.push(1);
                }else{
                    otr_rent_chk.push(0);
                }
                
                if(duplicateIndexes[order_date+"|"+name+"|"+number].length>1){
                    
                    duplicateIndexes[order_date+"|"+name+"|"+number].forEach(function(obj,index){
                        if(index!=0){
                            console.log([duplicateIndexes[order_date+"|"+name+"|"+number]])
                            otr_product.push(page_otr_data[obj].product);
                            otr_buybcode = otr_buybcode +","+page_otr_data[obj].buybcode;
                            otr_buycnt = otr_buycnt +","+page_otr_data[obj].buycnt;
                            console.log("page_otr_data[obj]",page_otr_data[obj])
                            if(page_otr_data[obj].rkey!=''&&page_otr_data[obj].rkey!=null){
                                otr_rentstart.push(page_otr_data[obj].rentstart);
                                otr_rentend.push(page_otr_data[obj].rentend);
                                di_arr.push(1);
                                otr_rent_chk.push(1);
                                console.log("otr_rent_chk",otr_rent_chk)
                            }else{
                                console.log("otr_rent_chk",otr_rent_chk)
                                otr_rent_chk.push(0);
                            }
                        }    
                        // page_otr_data.splice(duplicateIndexes[order_date+"|"+name+"|"+number][1]);
                        continue_arr.push(obj)
                    });
                    
                }
                
                // let pcode_pname = otr_product.replace(/((블루,레드)|(네이비,베이지))/g,'').replace(/\(오션블루, 버건디\)/g,'').split(',');
                let bcode = otr_buybcode.split(',');
//                 let rentstart = $(tr_data[i]).children('td').eq(6).text().replace(/(\d{4})(\d{2})(\d{2})/g, '$1-$2-$3');
//                 let rentend = $(tr_data[i]).children('td').eq(7).text().replace(/(\d{4})(\d{2})(\d{2})/g, '$1-$2-$3');
                let target = otr_data.target;
                let ranker = otr_data.ranker;
                let regident = otr_data.regident;
                let address = otr_data.address+" "+otr_data.addressdetail;
                let guardname = otr_data.guardname;
                let guardtarget = otr_data.guardtarget;
                let manager = otr_data.manager;
                let phone = otr_data.phone1;
                let sale =  parseInt(otr_data.sale.replace(/.0%|[^0-9]/g,''))/100;
                let cancled = otr_data.cancled.split(" ")[0];
                let buycnt = otr_buycnt.split(',');
                let buycnt_b = [];
                let buycnt_r = [];
                let payment_str = '';
                let companynumber = "<%=companynumber%>";
                let companynumber2 = "<%=bankinfo[0].companynum%>";
                let companyceo = "<%=companyceo%>";
                let companytel = "<%=bankinfo[0].companyphone%>";
                let companyfax = "<%=bankinfo[0].companyfax%>";
                let companyaddress = "<%=bankinfo[0].address%> "+"<%=bankinfo[0].addressdetail%>";
                let rentstart = otr_data.rentstart;
                let rentend = otr_data.rentend;
                let datenowarr = otr_data.datenow.replace(/(\[|\]|\'|\|| |&#39|\;)/g,'').split('~');
                let nextdatearr =  otr_data.nextdate.replace(/(\[|\]|\'|\|| |&#39|\;)/g,'').split(',');
                let bcode_sale_date = [];
                let bcode_cnt = 0;
                // let bon = dan*sale;
                // let gong = dan-bon;
                /*--------------------------------------------------------*
                // 전체 대여기간 급여제공기록지 생성
                *--------------------------------------------------------*/
               if(otr_rentstart.length>0){
                // let bcode_sale_cnt = 0;
                otr_product.forEach(function(obj2,index2){
                    let pcode_pname = obj2.replace(/((블루,레드)|(네이비,베이지))/g,'').replace(/\(오션블루, 버건디\)/g,'').split(',');
                    pcode_pname.forEach(function(obj,index_){
                        let pcode=obj.split('|')[0];
                        if((order_print_product_all[pcode].target=='대여'||order_print_product_all[pcode].target=='구입 또는 대여')&&otr_rent_chk[index2]==1){
                            let pname = order_print_product_all[pcode].name;
                            let salecnt = 5;
                            if(pname=='전동침대')salecnt=10;
                            else if(pname=='욕창예방 매트리스')salecnt=3;
                            console.log("bcode:",bcode)
                            if(bcode[bcode_cnt].replace(/ /g,'')!="direct"&&bcode[bcode_cnt].replace(/ /g,'')!=""){
                                let newsaledates = new Date(bcodesalearr[pcode+"|"+bcode[bcode_cnt].replace(/ /g,'')]);
                                console.log(bcodesalearr[pcode+"|"+bcode[bcode_cnt]]);
                                if(bcodesalearr[pcode+"|"+bcode[bcode_cnt]]){
                                    newsaledates.setFullYear(newsaledates.getFullYear() + salecnt);
                                    newsaledates.setDate(newsaledates.getDate() - 1);
                                    bcode_sale_date.push(dateFormat(newsaledates));
                                }else{
                                    bcode_sale_date.push('');
                                }
                                
                            }else{
                                bcode_sale_date.push('');
                            }
                            
                        }
                        bcode_cnt++;
                    });
                });
                
                otr_rentstart.forEach(function(obj,index){
                    rentstart = otr_rentstart[index];
                    rentend = otr_rentend[index];
                    bcode_sale_cnt.push(0);
                    rentendResult[index]=[];
                    rentstartResult[index]=[];
                    if(new Date(rentend)>new Date(datenowarr[1])){
                        if(new Date(rentstart)<new Date(datenowarr[1])){
                            if(bcode_sale_date[index]!=''){
                                if(new Date(bcode_sale_date[index])>new Date(rentstart)){
                                    if(new Date(datenowarr[1])>new Date(bcode_sale_date[index])){
                                        di_arr[index]++;
                                        bcode_sale_cnt[index] = di_arr[index];
                                        rentendResult[index].push(bcode_sale_date[index]);
                                        rentstartResult[index].push(rentstart);
                                        let bocde_sale_date_plus = new Date(new Date(bcode_sale_date[index]).setDate(new Date(bcode_sale_date[index]).getDate() + 1));
                                        let bocde_sale_year = bocde_sale_date_plus.getFullYear();
                                        let bocde_sale_month = ('0' + (bocde_sale_date_plus.getMonth() + 1)).slice(-2);
                                        let bocde_sale_day = bocde_sale_date_plus.getDate() > 9 ? '' + bocde_sale_date_plus.getDate() : '0' + bocde_sale_date_plus.getDate();
                                        rentstart = bocde_sale_year + "-" + bocde_sale_month + "-" + bocde_sale_day;
                                    }else if(datenowarr[1]==bcode_sale_date[index]){
                                        di_arr[index]++;
                                        bcode_sale_cnt[index] = di_arr[index];
                                    }
                                }else{
                                    bcode_sale_cnt[index] = di_arr[index];
                                }
                            }
                            di_arr[index]++;
                            rentendResult[index].push(datenowarr[1]);
                            rentstartResult[index].push(rentstart);
                        }
                        var nextdatearrLength = nextdatearr.length;
                        for (var i = nextdatearrLength - 1; i >= 0; i--) {
                            var nextdate = nextdatearr[i].split('~');
                            rentstartResult[index].push(nextdate[0]);
                            if (new Date(rentend) > new Date(nextdate[1])) {
                                if(bcode_sale_date[index]!=''&&bcode_sale_cnt[index]==0){
                                    if(new Date(bcode_sale_date[index])>new Date(nextdate[0])){
                                        if(new Date(nextdate[1])>new Date(bcode_sale_date[index])){
                                            di_arr[index]++;
                                            bcode_sale_cnt[index] = di_arr[index];
                                            rentendResult[index].push(bcode_sale_date[index]);
                                            // rentstartResult.push(nextdate[0]);
                                            let bocde_sale_date_plus = new Date(new Date(bcode_sale_date[index]).setDate(new Date(bcode_sale_date[index]).getDate() + 1));
                                            let bocde_sale_year = bocde_sale_date_plus.getFullYear();
                                            let bocde_sale_month = ('0' + (bocde_sale_date_plus.getMonth() + 1)).slice(-2);
                                            let bocde_sale_day = bocde_sale_date_plus.getDate() > 9 ? '' + bocde_sale_date_plus.getDate() : '0' + bocde_sale_date_plus.getDate();
                                            let rentstart = bocde_sale_year + "-" + bocde_sale_month + "-" + bocde_sale_day;
                                            rentstartResult[index].push(rentstart);
                                        }else if(nextdate[1]==bcode_sale_date[index]){
                                            di_arr[index]++;
                                            bcode_sale_cnt[index] = di_arr[index];
                                        }
                                    }else{
                                        bcode_sale_cnt[index] = di_arr[index];
                                    }
                                }
                                di_arr[index]++;
                                rentendResult[index].push(nextdate[1]);
                            } else {
                                if(bcode_sale_date[index]!=''&&bcode_sale_cnt[index]==0){
                                    console.log("bcode_sale_sestest")
                                    if(new Date(bcode_sale_date[index])>new Date(nextdate[0])){
                                        console.log("bcode_sale_sestest",nextdate[1])
                                        if(new Date(nextdate[1])>new Date(bcode_sale_date[index])&&new Date(rentend)>new Date(bcode_sale_date[index])){
                                            console.log("bcode_sale_cnt+++")
                                            di_arr[index]++;
                                            bcode_sale_cnt[index] = di_arr[index];
                                            rentendResult[index].push(bcode_sale_date[index]);
                                            // rentstartResult.push(nextdate[0]);
                                            let bocde_sale_date_plus = new Date(new Date(bcode_sale_date[index]).setDate(new Date(bcode_sale_date[index]).getDate() + 1));
                                            let bocde_sale_year = bocde_sale_date_plus.getFullYear();
                                            let bocde_sale_month = ('0' + (bocde_sale_date_plus.getMonth() + 1)).slice(-2);
                                            let bocde_sale_day = bocde_sale_date_plus.getDate() > 9 ? '' + bocde_sale_date_plus.getDate() : '0' + bocde_sale_date_plus.getDate();
                                            let rentstart = bocde_sale_year + "-" + bocde_sale_month + "-" + bocde_sale_day;
                                            rentstartResult[index].push(rentstart);
                                        }else if(nextdate[1]==bcode_sale_date[index]){
                                            di_arr[index]++;
                                            bcode_sale_cnt[index] = di_arr[index];
                                        }
                                    }else{
                                        
                                        bcode_sale_cnt[index] = di_arr[index];
                                    }
                                }
                                rentendResult[index].push(rentend);
                                break;
                            }
                        }
                    }else{
                        if(bcode_sale_date[index]!=''){
                            if(new Date(bcode_sale_date[index])>new Date(rentstart)){
                                if(new Date(datenowarr[1])>new Date(bcode_sale_date[index])&&new Date(rentend)>new Date(bcode_sale_date[index])){
                                    di_arr[index]++;
                                    bcode_sale_cnt[index] = di_arr[index];
                                    rentendResult[index].push(bcode_sale_date[index]);
                                    rentstartResult[index].push(rentstart);
                                    let bocde_sale_date_plus = new Date(new Date(bcode_sale_date[index]).setDate(new Date(bcode_sale_date[index]).getDate() + 1));
                                    let bocde_sale_year = bocde_sale_date_plus.getFullYear();
                                    let bocde_sale_month = ('0' + (bocde_sale_date_plus.getMonth() + 1)).slice(-2);
                                    let bocde_sale_day = bocde_sale_date_plus.getDate() > 9 ? '' + bocde_sale_date_plus.getDate() : '0' + bocde_sale_date_plus.getDate();
                                    rentstart = bocde_sale_year + "-" + bocde_sale_month + "-" + bocde_sale_day;
                                }
                            }else{
                                bcode_sale_cnt[index] = di_arr[index];
                            }
                        }
                        rentendResult[index].push(rentend);
                        rentstartResult[index].push(rentstart)
                    }
                });
                
               }
                
                let zero_money_chk = 0;
                if($('.zero_money_chk').is(":checked"))zero_money_chk = 1;
                // if(otr_data.rentproduct==''){
                    let pcode = '';
                    let pname2 = '';
                    console.log(otr_product)
                    let di_cnt = 0;
                    let index = 0;
                    let rent_cnt= 0;
                    let str1 = '',
                        str2 = '',
                        str3 = '',
                        str4 = '',
                        str5 = '',
                        str6 = '',
                        str7 = '',
                        str8 = '';
                    let zero_tr_str_obj = {
                        buy : ``,
                        rent : ``,
                    };
                    let strtop = 81.90;
                    let alldm = 0;
                    otr_product.forEach(function(obj2,index2){
                        let pcode_pname = obj2.replace(/((블루,레드)|(네이비,베이지))/g,'').replace(/\(오션블루, 버건디\)/g,'').split(',');
                        
                        pcode_pname.forEach(function(obj,index_){
                            pcode=obj.split('|')[0];
                            pname2=obj.split('|')[1];
                            let pname = '';
                            let pdan = '';
                            if((order_print_product_all[pcode].target=='구입'||order_print_product_all[pcode].target=='구입 또는 대여')&&otr_rent_chk[index2]==0){
                                console.log("구입")
                                let pt = '';
                                pdfdantotal+=0;
                                pname = order_print_product_buy[pcode].split("|")[0];
                                pdan = parseInt(order_print_product_buy[pcode].split("|")[2]);
                                if(pname=="미끄럼 방지용품"){
                                    pt = '미끄럼</br>방지용품';
                                }else if(pname=="욕창예방 매트리스"){
                                    pt = '욕창예방</br>매트리스';
                                }else{
                                    pt = pname;
                                }
                                zero_tr_str_obj.buy += `
                                    <tr class="zero_tr_str_buy zero_tr">
                                        <td class="tg-0lax">${pt}</td>
                                        <td class="tg-0lax">${pcode+'</br>('+((pname2.length > 12 )? pname2.replace('(네이비,베이지)', '').slice(0, 12) + '<br/>' + pname2.slice(12) : pname2)+')'}</td>
                                        <td class="tg-0lax">${buycnt[index]}</td>
                                        <td class="tg-0lax"></td>
                                        <td class="tg-0lax">${cancled}</td>
                                        <td class="tg-0lax">${parseInt(pdan*buycnt[index]).toLocaleString()+"원"}</td>
                                        <td class="tg-0lax"><%if(company.length>6){%><%=company.slice(0, 6)%><br/><%=company.slice(6)%><%}else{%><%=company%><%}%></td>
                                        <td class="tg-0lax"><%=companynumber%></td>
                                        
                                    </tr>
                                `;
                                // str1 += '<div class="hce addpdf" style="border:none; left:15.42mm;top:'+strtop+'mm;width:21.10mm;height:12.72mm;"><div class="hcD" style="left:0.49mm;top:0.49mm;">'+
                                //     '<div class="hcI" style="top:4.49mm;"><div class="hls ps29" style="line-height:2.48mm;white-space:nowrap;left:0mm;top:-0.16mm;height:3.17mm;width:20.12mm;">'+
                                //     '<span class="hrt cs48">'+pt+'</span></div></div></div></div>';
                                // str2 += '<div class="hce addpdf" style="border:none;  left:36.52mm;top:'+strtop+'mm;width:25.10mm;height:14.72mm;"><div class="hcD" style="left:0.49mm;top:0.49mm;">'+
                                // '<div class="hcI" style="top:4.49mm;"><div class="hls ps31" style="line-height:3.17mm;white-space:nowrap;left:0mm;top:-0.16mm;height:3.17mm;width:20.12mm;">'+
                                // '<span class="hrt cs48">'+pcode+'</br>('+((pname2.length > 12 )? pname2.replace('(네이비,베이지)', '').slice(0, 12) + '<br/>' + pname2.slice(12) : pname2)+')</span></div></div></div></div>';
                                // str3 += '<div class="hce addpdf" style="border:none;  left:61.62mm;top:'+strtop+'mm;width:10.62mm;height:12.72mm;"><div class="hcD" style="left:0.49mm;top:0.49mm;">'+
                                //     '<div class="hcI" style="top:4.49mm;"><div class="hls ps29" style="line-height:2.48mm;white-space:nowrap;left:0mm;top:-0.16mm;height:3.17mm;width:9.64mm;">'+
                                //     '<span class="hrt cs48">'+buycnt[index]+'</span></div></div></div></div>';
                                // str4 += '<div class="hce addpdf" style="border:none; left:72.24mm;top:'+strtop+'mm;width:10.62mm;height:12.72mm;"><div class="hcD" style="left:0.49mm;top:0.49mm;">'+
                                // '<div class="hcI" style="top:4.49mm;"><div class="hls ps29" style="line-height:2.48mm;white-space:nowrap;left:0mm;top:-0.16mm;height:3.17mm;width:9.64mm;">'+
                                // '<span class="hrt cs48"></span></div></div></div></div>';
                                // str5 += '<div class="hce addpdf" style="border:none; left:82.86mm;top:'+strtop+'mm;width:24.96mm;height:12.72mm;"><div class="hcD" style="left:0.49mm;top:0.49mm;">'+
                                // '<div class="hcI" style="top:4.49mm;"><div class="hls ps29" style="line-height:2.48mm;white-space:nowrap;left:0mm;top:-0.16mm;height:3.17mm;width:23.97mm;">'+
                                // '<span class="hrt cs48">'+cancled+'</span></div></div></div></div>';
                                // str6 += '<div class="hce addpdf" style="border:none; left:107.82mm;top:'+strtop+'mm;width:23.23mm;height:12.72mm;"><div class="hcD" style="left:0.49mm;top:0.49mm;">'+
                                // '<div class="hcI" style="top:4.49mm;"><div class="hls ps54" style="line-height:2.48mm;white-space:nowrap;left:0mm;top:-0.16mm;height:3.17mm;width:22.25mm;">'+
                                // '<span class="hrt cs48">'+parseInt(pdan*buycnt[index]).toLocaleString()+'원</span></div></div></div></div>';
                                // str7 += '<div class="hce addpdf" style="border:none; left:131.05mm;top:'+strtop+'mm;width:18.62mm;height:12.72mm;"><div class="hcD" style="left:0.49mm;top:0.49mm;">'+
                                // '<div class="hcI" style="top:4.49mm;"><div class="hls ps29" style="line-height:2.48mm;white-space:nowrap;left:0mm;top:-0.16mm;height:3.17mm;width:14.10mm;">'+
                                // '<span class="hrt cs48"><%if(company.length>6){%><%=company.slice(0, 6)%><br/><%=company.slice(6)%><%}else{%><%=company%><%}%></span></div></div></div></div>';
                                // str8 += '<div class="hce addpdf" style="border:none; left:149.67mm;top:'+strtop+'mm;width:18.62mm;height:12.72mm;"><div class="hcD" style="left:0.49mm;top:0.49mm;">'+
                                // '<div class="hcI" style="top:4.49mm;"><div class="hls ps50" style="line-height:2.48mm;white-space:nowrap;left:0mm;top:-0.16mm;height:3.17mm;width:14.10mm;">'+
                                // '<span class="hrt cs48" style="font-size:11px;">'+companynumber+'</span></div></div></div></div>';
                                // strtop = strtop+12.35;
                                alldm += parseInt(pdan*buycnt[index]);
                            }else if((order_print_product_all[pcode].target=='대여'||order_print_product_all[pcode].target=='구입 또는 대여')&&otr_rent_chk[index2]==1){
                                for(var index_plist=0; index_plist<order_print_plist_obj.plistdic_rent[pcode].length; index_plist++){
                                    let obj_dan = order_print_plist_obj.plistdic_rent[pcode][index_plist].split("|")[0];
                                    let obj_date = order_print_plist_obj.plistdic_rent[pcode][index_plist].split("|")[1];
                                    if(new Date(obj_date) < new Date(cancled)){
                                        pdan = obj_dan;
                                        //console.log(obj_dan, pdan, obj_date, cdate, index);
                                        break
                                    }
                                }
                                pname = order_print_product_all[pcode].name;
                                // pdan = parseInt(order_print_product_all[pcode].rentprice);
                                buycnt_r.push(buycnt[index]);
                                /*--------------------------------------------------------*
                                // 급여제공기록지 ROW 추가
                                *--------------------------------------------------------*/
                                let price_dan_copy = 0;
                                let price_buy_copy = 0;
                                let price_gong_copy = 0;
                                let price_dan = parseInt(pdan);
                                let dmarr = [];
                                
                                console.log("====pdan",pdan)
                                for(var y=0; y<di_arr[di_cnt]; y++){
                                    var dm = 0;
                                    var rs = rentstartResult[rent_cnt][y];
                                    var re = rentendResult[rent_cnt][y];
                                    console.log("rse:",rs,re,rent_cnt);
                                    let cmonth2 = monthsBetweenDates(rs.split('-')[0]+'-'+rs.split('-')[1]+'-01',re.split('-')[0]+'-'+re.split('-')[1]+'-01');
                                    console.log("bcoce:",(y+1),' ',bcode_sale_cnt[index])
                                    if((y+1)>=bcode_sale_cnt[index]&&bcode_sale_cnt[index]!=0){
                                        price_dan_copy = parseInt(price_dan/2);
                                    }else{
                                        price_dan_copy = price_dan;
                                    }
                                    for(var k=1; k<=cmonth2; k++){
                                        if(k==1){
                                            var lastDate = new Date(rs.split('-')[0], rs.split('-')[1], 0).getDate();
                                            var onem = roundToOneDecimalPlace(parseInt(pdan)/lastDate);
                                            let sm2 = 0;
                                            var sm = lastDate-parseInt(rs.split('-')[2])+1;
                                            if((rs.split('-')[0]+rs.split('-')[1])==(re.split('-')[0]+re.split('-')[1])){
                                                sm2 = lastDate-parseInt(re.split('-')[2]);
                                            }
                                            if((y+1)>=bcode_sale_cnt[index]&&bcode_sale_cnt[index]!=0){
                                                
                                                dm+=parseInt((sm-sm2)*onem)/2;
                                            }else{
                                                dm+=(sm-sm2)*onem;
                                            }
                                        }else if(k==cmonth2){
                                            var lastDate = new Date(re.split('-')[0], re.split('-')[1], 0).getDate();
                                            var onem = roundToOneDecimalPlace(parseInt(pdan)/lastDate);
                                            if((y+1)>=bcode_sale_cnt[index]&&bcode_sale_cnt[index]!=0){
                                                dm+=parseInt(parseInt(re.split('-')[2])*onem)/2;
                                            }else{
                                                dm+=parseInt(re.split('-')[2])*onem;
                                            }
                                        }else{
                                            if((y+1)>=bcode_sale_cnt[index]&&bcode_sale_cnt[index]!=0){
                                                dm+=parseInt(pdan)/2;
                                            }else{
                                                dm+=parseInt(pdan);
                                            }
                                        }
                                    }
                                    dmarr.push(dm);
                                    
                                    if(y==0){
                                        pdfdantotal += Math.floor(parseInt(price_dan_copy)/10)*10;
                                        pdfbuytotal += Math.floor(parseInt(price_dan_copy/10)*(sale))*10;
                                        pdfgongtotal += Math.floor(parseInt(parseInt(price_dan_copy/10))*(1-(sale)))*10;
                                    }
                                    
                                    let zm = dmarr[y];
                                    if(String(zm).substr(-1)!='0'){
                                        alldm += (Math.ceil(zm/10)*10);
                                        zm = (Math.ceil(zm/10)*10).toLocaleString()
                                    }else{
                                        alldm += dm;
                                        zm = zm.toLocaleString();

                                    }
                                    zero_tr_str_obj.rent += `
                                        <tr class="zero_tr_str_rent zero_tr">
                                            <td class="tg-0lax">${pname}</td>
                                            <td class="tg-0lax">${pcode+'</br>('+((pname2.length > 12 )? pname2.replace('(네이비,베이지)', '').slice(0, 12) + '<br/>' + pname2.slice(12) : pname2)+')'}</td>
                                            <td class="tg-0lax"></td>
                                            <td class="tg-0lax">O</td>
                                            <td class="tg-0lax">${rentstartResult[rent_cnt][y]+'~</br>'+rentendResult[rent_cnt][y]}</td>
                                            <td class="tg-0lax">${zm+"원"}</td>
                                            <td class="tg-0lax"><%if(company.length>6){%><%=company.slice(0, 6)%><br/><%=company.slice(6)%><%}else{%><%=company%><%}%></td>
                                            <td class="tg-0lax"><%=companynumber%></td>
                                        </tr>
                                    `;
                                    // str1 += '<div class="hce addpdf" style="border:none; left:15.42mm;top:'+strtop+'mm;width:21.10mm;height:12.72mm;"><div class="hcD" style="left:0.49mm;top:0.49mm;">'+
                                    //     '<div class="hcI" style="top:4.49mm;"><div class="hls ps29" style="line-height:2.48mm;white-space:nowrap;left:0mm;top:-0.16mm;height:3.17mm;width:20.12mm;">'+
                                    //     '<span class="hrt cs48">'+pname+'</span></div></div></div></div>';
                                    // str2 += '<div class="hce addpdf" style="border:none; left:36.52mm;top:'+strtop+'mm;width:25.10mm;height:14.72mm;"><div class="hcD" style="left:0.49mm;top:0.49mm;">'+
                                    // '<div class="hcI" style="top:4.49mm;"><div class="hls ps31" style="line-height:3.17mm;white-space:nowrap;left:0mm;top:-0.16mm;height:3.17mm;width:20.12mm;">'+
                                    // '<span class="hrt cs48">'+pcode+'</br>('+((pname2.length > 12 )? pname2.replace('(네이비,베이지)', '').slice(0, 12) + '<br/>' + pname2.slice(12) : pname2)+')</span></div></div></div></div>';
                                    // str3 += '<div class="hce addpdf" style="border:none; left:61.62mm;top:'+strtop+'mm;width:10.62mm;height:12.72mm;"><div class="hcD" style="left:0.49mm;top:0.49mm;">'+
                                    //     '<div class="hcI" style="top:4.49mm;"><div class="hls ps29" style="line-height:2.48mm;white-space:nowrap;left:0mm;top:-0.16mm;height:3.17mm;width:9.64mm;">'+
                                    //     '<span class="hrt cs48"></span></div></div></div></div>';
                                    // str4 += '<div class="hce addpdf" style="border:none; left:72.24mm;top:'+strtop+'mm;width:10.62mm;height:12.72mm;"><div class="hcD" style="left:0.49mm;top:0.49mm;">'+
                                    // '<div class="hcI" style="top:4.49mm;"><div class="hls ps29" style="line-height:2.48mm;white-space:nowrap;left:0mm;top:-0.16mm;height:3.17mm;width:9.64mm;">'+
                                    // '<span class="hrt cs48">1</span></div></div></div></div>';
                                    // str5 += '<div class="hce addpdf" style="border:none; left:82.86mm;top:'+strtop+'mm;width:24.96mm;height:12.72mm;"><div class="hcD" style="left:0.49mm;top:0.49mm;">'+
                                    // '<div class="hcI" style="top:4.49mm;"><div class="hls ps29" style="line-height:2.48mm;white-space:nowrap;left:0mm;top:-0.16mm;height:3.17mm;width:23.97mm;">'+
                                    // '<span class="hrt cs48">'+rentstartResult[rent_cnt][y]+'~</br>'+rentendResult[rent_cnt][y]+'</span></div></div></div></div>';
                                    // str6 += '<div class="hce addpdf" style="border:none; left:107.82mm;top:'+strtop+'mm;width:23.23mm;height:12.72mm;"><div class="hcD" style="left:0.49mm;top:0.49mm;">'+
                                    // '<div class="hcI" style="top:4.49mm;"><div class="hls ps54" style="line-height:2.48mm;white-space:nowrap;left:0mm;top:-0.16mm;height:3.17mm;width:22.25mm;">'+
                                    // '<span class="hrt cs48">'+zm+'원</span></div></div></div></div>';
                                    // str7 += '<div class="hce addpdf" style="border:none; left:131.05mm;top:'+strtop+'mm;width:18.62mm;height:12.72mm;"><div class="hcD" style="left:0.49mm;top:0.49mm;">'+
                                    // '<div class="hcI" style="top:4.49mm;"><div class="hls ps29" style="line-height:2.48mm;white-space:nowrap;left:0mm;top:-0.16mm;height:3.17mm;width:14.10mm;">'+
                                    // '<span class="hrt cs48"><%if(company.length>6){%><%=company.slice(0, 6)%><br/><%=company.slice(6)%><%}else{%><%=company%><%}%></span></div></div></div></div>';
                                    // str8 += '<div class="hce addpdf" style="border:none; left:149.67mm;top:'+strtop+'mm;width:18.62mm;height:12.72mm;"><div class="hcD" style="left:0.49mm;top:0.49mm;">'+
                                    // '<div class="hcI" style="top:4.49mm;"><div class="hls ps50" style="line-height:2.48mm;white-space:nowrap;left:0mm;top:-0.16mm;height:3.17mm;width:14.10mm;">'+
                                    // '<span class="hrt cs48" style="font-size:11px;"><%if(companynumber.length>12){%><%=companynumber.slice(0, 9)%><br/><%=companynumber.slice(9)%><%}else{%><%=companynumber%><%}%></span></div></div></div></div>';
                                    
                                    // strtop = strtop+12.72;
                                    // pdfstr1 += "<tr class='addpdf' style='height:40px;'><td class='br bl bd'>"+pname+"</td><td class='br bd'>"+pname2+"</td><td class='br bd'>"+pcode+"</td><td class='br bd'>"+parseInt(price_dan_copy).toLocaleString()+"</td><td class='br bd'>"+parseInt(price_buy_copy).toLocaleString()+"</td><td class='br bd'>"+parseInt(price_gong_copy).toLocaleString()+"</td><td class='br bd'>"+rentstartResult[y]+"~"+rentendResult[y]+"</td></tr>";
                                    
                                }   
                                
                                
                            }
                            index++;
                            // pdfstr1 += str1+str2+str3+str4+str5+str6+str7+str8;
                            pdfstr1 = zero_tr_str_obj.buy+zero_tr_str_obj.rent;
                        });
                        console.log("rent_cnt[index2]",otr_rent_chk[index2],index2,otr_rent_chk)
                        if(otr_rent_chk[index2]==1){
                            rent_cnt++;
                            di_cnt++; 
                        }
                        
                    });
                    

                    otr_product.forEach(function(obj2,index2){
                        let pcode_pname = obj2.replace(/((블루,레드)|(네이비,베이지))/g,'').replace(/\(오션블루, 버건디\)/g,'').split(',');
                        pcode_pname.forEach(function(obj,index_){
                            pcode=obj.split('|')[0];
                            pname2=obj.split('|')[1];
                            let pname = order_print_product[pcode].split("|")[0];
                            payment_str += pname+'&nbsp;'+pname2+'<br/>';
                        });
                    });
                    let print_chk_box_cnt = 0;
                    for(var i=0; i<ionContents.length; i++){
                        if($('.print_chk_box_zero').eq(print_chk_box_cnt).is(":checked")){
                            /*======공통정보*/
                            let name_html_all = ionContents[i].contentDocument.querySelectorAll('.name');
                            name_html_all.forEach(function(obj,index){
                                if(guardtarget == '본인') {
                                    obj.innerHTML = name;
                                } else {
                                    if(index == 0 && i== 0) {
                                        obj.innerHTML = guardname;
                                    } else {
                                        obj.innerHTML = name;
                                    }
                                }
                            });
                            
                            let guardtarget_html = ionContents[i].contentDocument.querySelector('.req_guardtarget');
                            if(guardtarget_html) {
                                guardtarget_html.innerHTML = guardtarget;
                            }
                            
                            ionContents[i].contentDocument.querySelector('.number').innerHTML = number;
                            ionContents[i].contentDocument.querySelector('.ranker').innerHTML = ranker;
                            ionContents[i].contentDocument.querySelector('.regident2').value = regident;
                            /*======공통정보*/
                            $('.ion').contents().find('.addpdf').remove();
                            $('.ion').contents().find('.addpdf2').remove();
                            
                            if(i==0){
                                ionContents[i].contentDocument.querySelector('.chk1').innerHTML = '';
                                ionContents[i].contentDocument.querySelector('.chk2').innerHTML = '';
                                if(target=='기초')ionContents[i].contentDocument.querySelector('.chk1').innerHTML = '✔';
                                else if(target=='의료급여')ionContents[i].contentDocument.querySelector('.chk2').innerHTML = '✔';
                                ionContents[i].contentDocument.querySelector('.regident').innerHTML = regident;
                                let address_html_all = ionContents[i].contentDocument.querySelectorAll('.address');
                                address_html_all.forEach(function(obj,index){
                                    obj.innerHTML = address;
                                });
                                let phone_html_all = ionContents[i].contentDocument.querySelectorAll('.pdfphone1');
                                phone_html_all.forEach(function(obj,index){
                                    obj.innerHTML = phone.replace(/^(\d{3})(\d{4})(\d{4})$/, "$1-$2-$3");
                                });
                                let company_html_all = ionContents[i].contentDocument.querySelectorAll('.company');
                                company_html_all.forEach(function(obj,index){
                                    obj.innerHTML = "<%=company%>";
                                });
                                ionContents[i].contentDocument.querySelector('.companynum').innerHTML=companynumber;
                                ionContents[i].contentDocument.querySelector('.companyphone').innerHTML = companytel;
                                ionContents[i].contentDocument.querySelector('.companyfax').innerHTML = companyfax;
                                ionContents[i].contentDocument.querySelector('.companymember_email').innerHTML=managerinfoarr[manager].split("|")[1];
                                ionContents[i].contentDocument.querySelector('.companyaddress').innerHTML = companyaddress;

                                
                                let topcm = '-20';
                                let tcls = 'basic';
                                let pdfstr2 = '<span class="' + tcls + ' msg_sign" style="position: absolute; z-index: 999; right:-10px; top:' + topcm + 'px;"><image style="width:80px; -webkit-user-drag: none;" src="/signfiles/' + number + '/<%=company%>" onerror="this.style.display=\'none\'"></span>';
                                $('.ion').contents().find(".msg_sign").remove();
                                let pdf_sign_all = ionContents[i].contentDocument.querySelectorAll('.pdfsign');
                                pdf_sign_all.forEach(function(obj,index){
                                    obj.insertAdjacentHTML('beforeend', pdfstr2);
                                });
                                $('.ion').contents().find(".pdfday").text(cancled+getTodayLabel());
                            }else if(i==1){
                                $('.ion').contents().find('.zero_tr_str_buy').remove();
                                $('.ion').contents().find('.zero_tr_str_rent').remove();
                                ionContents[i].contentDocument.querySelector('.pdfadd').insertAdjacentHTML('afterend', pdfstr1);
                                $('.ion').contents().find(".zerodoc_txt_area").remove();
                                if($('.ion').contents().find(".zero_tr_str_buy").length>4){
                                    $('.ion').contents().find('.dummy').eq($('.ion').contents().find(".zero_tr_str_buy").length-4).remove();
                                }
                                $('.ion').contents().find('.zero_col').attr("rowspan",$('.ion').contents().find('.zero_tr').length+4);
                                ionContents[i].contentDocument.querySelector('.pdfdantotal2').innerHTML = alldm.toLocaleString();
                            }
                            err_obj.name_arr.push(name);
                            err_obj.number_arr.push(number);
                            err_obj.el_arr.push(ionContents[i].contentDocument.querySelector('html').innerHTML);
                    }
                    print_chk_box_cnt++;
                }
            }
        });
        await getBase64Image(err_obj);
    }

    async function rent_add_make_doc_receipt(x,p_obj){
        now_doc_create = 'receipt';
        let receipt_str = `
        <tr class="receipt_tr_dm" style="height:25px;">
            <td class="tg-0lax" style="color:#000; font-weight:lighter;"></td>
            <td class="tg-0lax" style="color:#000; font-weight:lighter;"></td>
            <td class="tg-0lax" style="color:#000; font-weight:lighter;"></td>
            <td class="tg-0lax" style="color:#000; font-weight:lighter;"></td>
            <td class="tg-0lax" style="color:#000; font-weight:lighter;"></td>
            <td class="tg-0lax" style="color:#000; font-weight:lighter;"></td>
            <td class="tg-0lax" style="color:#000; font-weight:lighter;"></td>
        </tr>
        `;
        $('.ion').contents().find('.receipt_tr_dm').remove();

        
        for(var i = 0; i<17; i++){
            $('.ion').contents().find('.receipt_tr_col').after(receipt_str);
        }
        let now = new Date();
        let year = now.getFullYear();
        let mon = (now.getMonth() + 1) > 9 ? '' + (now.getMonth() + 1) : '0' + (now.getMonth() + 1);
        let day = now.getDate() > 9 ? '' + now.getDate() : '0' + now.getDate();
        let chan_val = year + '-' + mon + '-' + day;
        const lastdate = new Date(year, mon, 0).getDate();
        let last_chan_val = year + '-' + mon + '-' +lastdate;
        // let tr_data = $(x).children('tbody').children('tr');
        let tr_data = $('.ordertr')
        // name_arr = [];
        // number_arr = [];
        // el_arr = [];
        err_obj.name_arr = [];
        err_obj.number_arr =[];
        err_obj.el_arr = [];
        // console.log(tr_data);
        const ionContents = document.getElementsByClassName('iprint_receipt');
        const ionContentsContentDocument = ionContents.contentDocument;
        let same_arr = [];
        $.each(tr_data,async function(i){
            if($(tr_data[i]).children('td').eq(0).children('input').is(":checked")){
                let otr_data = page_otr_data[i];
                let name = otr_data.name;
                let number = otr_data.number;
                let order_date = otr_data.orderdate.split(" ")[0];
                same_arr.push(order_date+"|"+name+"|"+number);
            }else{
                same_arr.push('');
            }
        });

        
        console.log('salme_arr:',same_arr)
        const duplicateIndexes = {};
        same_arr.forEach((value, index) => {
            if (!(value in duplicateIndexes)) {
                duplicateIndexes[value] = [index];
            } else {
                duplicateIndexes[value].push(index);
            }
        });

        for (const [value, indexes] of Object.entries(duplicateIndexes)) {
            if (indexes.length > 1) {
                console.log(`값 ${value}의 중복된 인덱스: ${indexes.join(', ')}`);
            }
        }
        let continue_arr = [];
        let continue_chk = 0;
        $.each(tr_data,async function(i){
            continue_chk = 0;
            let bcode_sale_cnt = 0;
            if($(tr_data[i]).children('td').eq(0).children('input').is(":checked")&&!$(tr_data[i]).children('td').eq(0).children('input').hasClass('allchk')){
                
                console.log("coninue:",i,continue_arr)
                for(var c=0; c<continue_arr.length; c++){
                    if((i)==continue_arr[c]){
                        console.log("continue:",c)
                        continue_chk = 1;
                    }
                }
                if(continue_chk==1)return true;
                console.log("noconfinue",i)
                let di = 1;
                let rentendResult = {};
                let rentstartResult = {};
                let pdfstr1 = '';
                let pdfstr1_2 = '';
                let pdfstr1_2_r = '';
                let pdfstr1_3 = '';
                let alldm = 0;
                let alldm2 = 0;
                let alldm_r = 0;
                let alldm2_r = 0;
                let alldm3 = 0;
                let alldm4 = 0;
                let pdfdantotal = 0;
                let pdfbuytotal = 0;
                let pdfgongtotal = 0;
                
                let otr_data = page_otr_data[i];
                console.log(otr_data);
                
                let name = otr_data.name;
                let number = otr_data.number;
                let order_date = otr_data.orderdate.split(" ")[0];
                let cancle_date = otr_data.cancled.split(" ")[0];
                let otr_product = [otr_data.product];
                let otr_buybcode = otr_data.buybcode;
                let otr_buycnt = otr_data.buycnt;
                let otr_target = [];
                let otr_rentproduct = '';
                let otr_rbuybcode = '';
                let otr_rbuycnt = '';
                let otr_rentstart = [];
                let otr_rentend = [];
                let di_arr = [];
                let bcode_sale_cnt = [];
                let otr_rent_chk = [];
                if(otr_data.rkey!=''&&otr_data.rkey!=null){
                    otr_rentstart = [otr_data.rentstart];
                    otr_rentend = [otr_data.rentend];
                    di_arr = [1];
                    otr_rent_chk.push(1);
                }else{
                    otr_rent_chk.push(0);
                }
                
                if(duplicateIndexes[order_date+"|"+name+"|"+number].length>1){
                    console.log("ERERER")
                    duplicateIndexes[order_date+"|"+name+"|"+number].forEach(function(obj,index){
                        if(index!=0){
                            console.log([duplicateIndexes[order_date+"|"+name+"|"+number]])
                            otr_product.push(page_otr_data[obj].product);
                            otr_buybcode = otr_buybcode +","+page_otr_data[obj].buybcode;
                            otr_buycnt = otr_buycnt +","+page_otr_data[obj].buycnt;
                            console.log("page_otr_data[obj]",page_otr_data[obj])
                            if(page_otr_data[obj].rkey!=''&&page_otr_data[obj].rkey!=null){
                                otr_rentstart.push(page_otr_data[obj].rentstart);
                                otr_rentend.push(page_otr_data[obj].rentend);
                                di_arr.push(1);
                                otr_rent_chk.push(1);
                                console.log("otr_rent_chk",otr_rent_chk)
                            }else{
                                console.log("otr_rent_chk",otr_rent_chk)
                                otr_rent_chk.push(0);
                            }
                        }    
                        // page_otr_data.splice(duplicateIndexes[order_date+"|"+name+"|"+number][1]);
                        continue_arr.push(obj)
                    });
                    
                }
                console.log('otr_product:',otr_rentstart,otr_rentend,di_arr)
                // let pcode_pname = otr_product.replace(/((블루,레드)|(네이비,베이지))/g,'').replace(/\(오션블루, 버건디\)/g,'').split(',');
                let bcode = otr_buybcode.split(',');
//                 let rentstart = $(tr_data[i]).children('td').eq(6).text().replace(/(\d{4})(\d{2})(\d{2})/g, '$1-$2-$3');
//                 let rentend = $(tr_data[i]).children('td').eq(7).text().replace(/(\d{4})(\d{2})(\d{2})/g, '$1-$2-$3');
                let target = otr_data.target;
                let ranker = otr_data.ranker;
                let regident = otr_data.regident;
                let address = otr_data.address+" "+otr_data.addressdetail;
                let guardname = otr_data.guardname;
                let guardtarget = otr_data.guardtarget;
                let manager = otr_data.manager;
                let phone = otr_data.phone1;
                let sale =  parseInt(otr_data.sale.replace(/.0%|[^0-9]/g,''))/100;
                let cancled = otr_data.cancled.split(" ")[0];
                let buycnt = otr_buycnt.split(',');
                let buycnt_b = [];
                let buycnt_r = [];
                let payment_str = '';
                let companynumber = "<%=companynumber%>";
                let companynumber2 = "<%=bankinfo[0].companynum%>";
                let companyceo = "<%=companyceo%>";
                let companytel = "<%=bankinfo[0].companyphone%>";
                let companyfax = "<%=bankinfo[0].companyfax%>";
                let companyaddress = "<%=bankinfo[0].address%> "+"<%=bankinfo[0].addressdetail%>";
                let rentstart = otr_data.rentstart;
                let rentend = otr_data.rentend;
                let datenowarr = otr_data.datenow.replace(/(\[|\]|\'|\|| |&#39|\;)/g,'').split('~');
                let nextdatearr =  otr_data.nextdate.replace(/(\[|\]|\'|\|| |&#39|\;)/g,'').split(',');
                let bcode_sale_date = [];
                let bcode_cnt = 0;
                // let bon = dan*sale;
                // let gong = dan-bon;
                /*--------------------------------------------------------*
                // 전체 대여기간 급여제공기록지 생성
                *--------------------------------------------------------*/
               if(otr_rentstart.length>0){
                // let bcode_sale_cnt = 0;
                otr_product.forEach(function(obj2,index2){
                    let pcode_pname = obj2.split(',');
                    pcode_pname.forEach(function(obj,index_){
                        let pcode=obj.split('|')[0];
                        if((order_print_product_all[pcode].target=='대여'||order_print_product_all[pcode].target=='구입 또는 대여')&&otr_rent_chk[index2]==1){
                            let pname = order_print_product_all[pcode].name;
                            let salecnt = 5;
                            if(pname=='전동침대')salecnt=10;
                            else if(pname=='욕창예방 매트리스')salecnt=3;
                            console.log("bcode:",bcode)
                            if(bcode[bcode_cnt].replace(/ /g,'')!="direct"&&bcode[bcode_cnt].replace(/ /g,'')!=""){
                                let newsaledates = new Date(bcodesalearr[pcode+"|"+bcode[bcode_cnt].replace(/ /g,'')]);
                                console.log(bcodesalearr[pcode+"|"+bcode[bcode_cnt]]);
                                if(bcodesalearr[pcode+"|"+bcode[bcode_cnt]]){
                                    newsaledates.setFullYear(newsaledates.getFullYear() + salecnt);
                                    newsaledates.setDate(newsaledates.getDate() - 1);
                                    bcode_sale_date.push(dateFormat(newsaledates));
                                }else{
                                    bcode_sale_date.push('');
                                }
                                
                            }else{
                                bcode_sale_date.push('');
                            }
                            
                        }
                        bcode_cnt++;
                    });
                });
                console.log("bcodesale:",bcode_sale_date)
                otr_rentstart.forEach(function(obj,index){
                    rentstart = otr_rentstart[index];
                    rentend = otr_rentend[index];
                    bcode_sale_cnt.push(0)
                    rentendResult[index]=[];
                    rentstartResult[index]=[];
                    if(new Date(rentend)>new Date(datenowarr[1])){
                        if(new Date(rentstart)<new Date(datenowarr[1])){
                            if(bcode_sale_date[index]!=''){
                                if(new Date(bcode_sale_date[index])>new Date(rentstart)){
                                    if(new Date(datenowarr[1])>new Date(bcode_sale_date[index])){
                                        di_arr[index]++;
                                        bcode_sale_cnt[index] = di_arr[index];
                                        rentendResult[index].push(bcode_sale_date[index]);
                                        rentstartResult[index].push(rentstart);
                                        let bocde_sale_date_plus = new Date(new Date(bcode_sale_date[index]).setDate(new Date(bcode_sale_date[index]).getDate() + 1));
                                        let bocde_sale_year = bocde_sale_date_plus.getFullYear();
                                        let bocde_sale_month = ('0' + (bocde_sale_date_plus.getMonth() + 1)).slice(-2);
                                        let bocde_sale_day = bocde_sale_date_plus.getDate() > 9 ? '' + bocde_sale_date_plus.getDate() : '0' + bocde_sale_date_plus.getDate();
                                        rentstart = bocde_sale_year + "-" + bocde_sale_month + "-" + bocde_sale_day;
                                    }else if(datenowarr[1]==bcode_sale_date[index]){
                                        di_arr[index]++;
                                        bcode_sale_cnt[index] = di_arr[index];
                                    }
                                }else{
                                    bcode_sale_cnt = di_arr[index];
                                }
                            }
                            di_arr[index]++;
                            rentendResult[index].push(datenowarr[1]);
                            rentstartResult[index].push(rentstart);
                        }
                        var nextdatearrLength = nextdatearr.length;
                        for (var i = nextdatearrLength - 1; i >= 0; i--) {
                            var nextdate = nextdatearr[i].split('~');
                            rentstartResult[index].push(nextdate[0]);
                            if (new Date(rentend) > new Date(nextdate[1])) {
                                if(bcode_sale_date[index]!=''&&bcode_sale_cnt[index]==0){
                                    if(new Date(bcode_sale_date[index])>new Date(nextdate[0])){
                                        if(new Date(nextdate[1])>new Date(bcode_sale_date[index])){
                                            di_arr[index]++;
                                            bcode_sale_cnt[index] = di_arr[index];
                                            rentendResult[index].push(bcode_sale_date[index]);
                                            // rentstartResult.push(nextdate[0]);
                                            let bocde_sale_date_plus = new Date(new Date(bcode_sale_date[index]).setDate(new Date(bcode_sale_date[index]).getDate() + 1));
                                            let bocde_sale_year = bocde_sale_date_plus.getFullYear();
                                            let bocde_sale_month = ('0' + (bocde_sale_date_plus.getMonth() + 1)).slice(-2);
                                            let bocde_sale_day = bocde_sale_date_plus.getDate() > 9 ? '' + bocde_sale_date_plus.getDate() : '0' + bocde_sale_date_plus.getDate();
                                            let rentstart = bocde_sale_year + "-" + bocde_sale_month + "-" + bocde_sale_day;
                                            rentstartResult[index].push(rentstart);
                                        }else if(nextdate[1]==bcode_sale_date[index]){
                                            di_arr[index]++;
                                            bcode_sale_cnt[index] = di_arr[index];
                                        }
                                    }else{
                                        bcode_sale_cnt = di_arr[index];
                                    }
                                }
                                if(datenowarr[1]!=bcode_sale_date)di_arr[index]++;
                                rentendResult[index].push(nextdate[1]);
                            } else {
                                if(bcode_sale_date[index]!=''&&bcode_sale_cnt[index]==0){
                                    console.log("bcode_sale_sestest")
                                    if(new Date(bcode_sale_date[index])>new Date(nextdate[0])){
                                        console.log("bcode_sale_sestest",nextdate[1])
                                        if(new Date(nextdate[1])>new Date(bcode_sale_date[index])&&new Date(rentend)>new Date(bcode_sale_date[index])){
                                            console.log("bcode_sale_cnt+++")
                                            di_arr[index]++;
                                            bcode_sale_cnt[index] = di_arr[index];
                                            rentendResult[index].push(bcode_sale_date[index]);
                                            // rentstartResult.push(nextdate[0]);
                                            let bocde_sale_date_plus = new Date(new Date(bcode_sale_date[index]).setDate(new Date(bcode_sale_date[index]).getDate() + 1));
                                            let bocde_sale_year = bocde_sale_date_plus.getFullYear();
                                            let bocde_sale_month = ('0' + (bocde_sale_date_plus.getMonth() + 1)).slice(-2);
                                            let bocde_sale_day = bocde_sale_date_plus.getDate() > 9 ? '' + bocde_sale_date_plus.getDate() : '0' + bocde_sale_date_plus.getDate();
                                            let rentstart = bocde_sale_year + "-" + bocde_sale_month + "-" + bocde_sale_day;
                                            rentstartResult[index].push(rentstart);
                                        }else if(nextdate[1]==bcode_sale_date[index]){
                                            di_arr[index]++;
                                            bcode_sale_cnt[index] = di_arr[index];
                                        }
                                    }else{
                                        
                                        bcode_sale_cnt = di_arr[index];
                                    }
                                }
                                rentendResult[index].push(rentend);
                                break;
                            }
                        }
                    }else{
                        if(bcode_sale_date[index]!=''){
                            if(new Date(bcode_sale_date[index])>new Date(rentstart)){
                                if(new Date(datenowarr[1])>new Date(bcode_sale_date[index])&&new Date(rentend)>new Date(bcode_sale_date[index])){
                                    di_arr[index]++;
                                    bcode_sale_cnt[index] = di_arr[index];
                                    rentendResult[index].push(bcode_sale_date[index]);
                                    rentstartResult[index].push(rentstart);
                                    let bocde_sale_date_plus = new Date(new Date(bcode_sale_date[index]).setDate(new Date(bcode_sale_date[index]).getDate() + 1));
                                    let bocde_sale_year = bocde_sale_date_plus.getFullYear();
                                    let bocde_sale_month = ('0' + (bocde_sale_date_plus.getMonth() + 1)).slice(-2);
                                    let bocde_sale_day = bocde_sale_date_plus.getDate() > 9 ? '' + bocde_sale_date_plus.getDate() : '0' + bocde_sale_date_plus.getDate();
                                    rentstart = bocde_sale_year + "-" + bocde_sale_month + "-" + bocde_sale_day;
                                }else if(datenowarr[1]==bcode_sale_date[index]){
                                    di_arr[index]++;
                                    bcode_sale_cnt[index] = di_arr[index];
                                }
                            }else{
                                bcode_sale_cnt = di_arr[index];
                            }
                        }
                        rentendResult[index].push(rentend);
                        rentstartResult[index].push(rentstart)
                    }
                });
                
               }
                console.log("di_arr",di_arr)
                let zero_money_chk = 0;
                if($('.zero_money_chk').is(":checked"))zero_money_chk = 1;
                // if(otr_data.rentproduct==''){
                    let pcode = '';
                    let pname2 = '';
                    console.log(otr_product)
                    let di_cnt = 0;
                    let index = 0;
                    let rent_cnt= 0;
                    otr_product.forEach(function(obj2,index2){
                        let pcode_pname = obj2.replace(/((블루,레드)|(네이비,베이지))/g,'').replace(/\(오션블루, 버건디\)/g,'').split(',');
                        pcode_pname.forEach(function(obj,index_){
                            pcode=obj.split('|')[0];
                            pname2=obj.split('|')[1];
                            let pname = '';
                            let pdan = '';
                            console.log("otr_rent_chk:",otr_rent_chk)
                            if((order_print_product_all[pcode].target=='구입'||order_print_product_all[pcode].target=='구입 또는 대여')&&otr_rent_chk[index2]==0){
                                
                                for(var index_plist=0; index_plist<order_print_plist_obj.plistdic_buy[pcode].length; index_plist++){
                                    let obj_dan = order_print_plist_obj.plistdic_buy[pcode][index_plist].split("|")[0];
                                    let obj_date = order_print_plist_obj.plistdic_buy[pcode][index_plist].split("|")[1];
                                    if(new Date(obj_date) <= new Date(cancle_date)){
                                        pdan = obj_dan;
                                        //console.log(obj_dan, pdan, obj_date, cdate, index);
                                        break
                                    }
                                }
                                pname = order_print_product_buy[pcode].split("|")[0];
                                //pdan = parseInt(order_print_product_buy[pcode].split("|")[2]);
                                let buy_m = parseInt(parseInt(pdan*parseInt(buycnt[index]))*(sale));
                                let gong_m = parseInt(parseInt(pdan*parseInt(buycnt[index]))*(1-(sale)));
                                if(zero_money_chk==1){
                                    // buy_m = Math.floor(parseInt(parseInt(pdan*parseInt(buycnt[index]))*(sale))/10)*10;
                                    buy_m = Math.floor(parseInt(pdan*(sale))/10)*10 * parseInt(buycnt[index]);

                                    gong_m = parseInt((Math.ceil((pdan*(1-(sale)))/10)*10)*parseInt(buycnt[index]));
                                    alldm2 += buy_m;
                                    pdfbuytotal += buy_m;
                                    pdfgongtotal += gong_m;
                                }else{
                                    alldm2 += buy_m;
                                    pdfbuytotal += buy_m;
                                    pdfgongtotal += gong_m;
                                }
                                pdfstr1 += "<tr class='receipt_tr' style='color:#000; font-size:13px;'><td class=''>"+cancle_date.split("-")[1]+"/"+cancle_date.split("-")[2]+"</td><td class='br bd'>"+pname+"</td><td >"+pname2+"</td><td>판매</td><td>"+buycnt[index]+"</td><td>"+(pdan*parseInt(buycnt[index])).toLocaleString()+"</td><td>"+buy_m.toLocaleString()+"</td></tr>";

                                // pdfstr1 += "<tr class='addpdf' height='40px;'><td class='br bd bl h35 pdfname'>"+pname+"</td><td class='br bd' style='font-size:14px;'>"+pname2+"</td><td class='br bd'>"+pcode+"</td><td class='br bd'>"+(pdan.toLocaleString())+"</td><td class='br bd'>"+cancled+"</td><td class='br bd pdfstr_custum_dan'>"+(pdan*parseInt(buycnt[index])).toLocaleString()+"</td><td class='br bd pdfstr_custum_buy'>"+buy_m.toLocaleString()+"</td><td class='br bd pdfstr_custum_gong'>"+gong_m.toLocaleString()+"</td></tr>";
                                alldm += pdan*parseInt(buycnt[index]);
                                
                                
                                pdfdantotal += pdan*parseInt(buycnt[index]);
                                

                                buycnt_b.push(buycnt[index]);
                            }else if((order_print_product_all[pcode].target=='대여'||order_print_product_all[pcode].target=='구입 또는 대여')&&otr_rent_chk[index2]==1){
                                pname = order_print_product_all[pcode].name;
                                for(var index_plist=0; index_plist<order_print_plist_obj.plistdic_rent[pcode].length; index_plist++){
                                    let obj_dan = order_print_plist_obj.plistdic_rent[pcode][index_plist].split("|")[0];
                                    let obj_date = order_print_plist_obj.plistdic_rent[pcode][index_plist].split("|")[1];
                                    if(new Date(obj_date) < new Date(cancle_date)){
                                        pdan = obj_dan;
                                        console.log(obj_dan, pdan, obj_date, cancle_date, index);
                                        break
                                    }
                                }
                                // pdan = parseInt(order_print_product_all[pcode].rentprice);
                                buycnt_r.push(buycnt[index]);
                                /*--------------------------------------------------------*
                //             // 급여제공기록지 ROW 추가
                //             *--------------------------------------------------------*/
                                console.log(di_arr,rentendResult,rentstartResult)
                                let price_dan_copy = 0;
                                let price_buy_copy = 0;
                                let price_gong_copy = 0;
                                let price_dan = parseInt(pdan);
                                console.log("di_arr[di_cnt]",di_arr[di_cnt],di_cnt)
                                for(var y=0; y<di_arr[di_cnt]; y++){
                                    var dm = 0;
                                    var rs = rentstartResult[rent_cnt][y];
                                    var re = rentendResult[rent_cnt][y];
                                    console.log("rse:",rs,re,rent_cnt)
                                    // var dif = new Date(re.split('-')[0]+'-'+re.split('-')[1]+'-'+re.split('-')[2]) - new Date(rs.split('-')[0]+'-'+rs.split('-')[1]+'-01');
                                    // var cDay = 24 * 60 * 60 * 1000;// 시 * 분 * 초 * 밀리세컨
                                    // var cMonth = cDay * 30;// 월 만듬
                                    // var cmonth2 = (parseInt(dif/cMonth)+1);
                                    let cmonth2 = monthsBetweenDates(rs.split('-')[0]+'-'+rs.split('-')[1]+'-01',re.split('-')[0]+'-'+re.split('-')[1]+'-01');
                                    let bcode_sale_origin = bcode_sale_cnt[di_cnt];
                                    console.log("bcode_sale_cnt[di_cnt]",bcode_sale_cnt[di_cnt])
                                    if(bcode_sale_date.length>1&&index_==1){
                                        bcode_sale_cnt[di_cnt] = 0;
                                    }
                                    if((y+1)>=bcode_sale_cnt[di_cnt]&&bcode_sale_cnt[di_cnt]!=0){
                                        price_dan_copy = parseInt(price_dan/2);
                                    }else{
                                        price_dan_copy = price_dan;
                                    }
                                    for(var k=1; k<=cmonth2; k++){

                                        if(k==1){
                                            var lastDate = new Date(rs.split('-')[0], rs.split('-')[1], 0).getDate();
                                            var onem = parseInt(pdan)/lastDate;
                                            let sm2 = 0;
                                            var sm = lastDate-parseInt(rs.split('-')[2])+1;
                                            if((rs.split('-')[0]+rs.split('-')[1])==(re.split('-')[0]+re.split('-')[1])){
                                                sm2 = lastDate-parseInt(re.split('-')[2]);
                                            }
                                            if((y+1)>=bcode_sale_cnt[di_cnt]&&bcode_sale_cnt[di_cnt]!=0){
                                                
                                                dm+=parseInt((sm-sm2)*onem)/2;
                                            }else{
                                                dm+=parseInt((sm-sm2)*onem);
                                            }
                                            
                                        }else if(k==cmonth2){
                                            var lastDate = new Date(re.split('-')[0], re.split('-')[1], 0).getDate();
                                            var onem = parseInt(pdan)/lastDate;
                                            if((y+1)>=bcode_sale_cnt[di_cnt]&&bcode_sale_cnt[di_cnt]!=0){
                                                dm+=parseInt(parseInt(re.split('-')[2])*onem)/2;
                                            }else{
                                                dm+=parseInt(parseInt(re.split('-')[2])*onem);
                                            }
                                            
                                        }else{
                                            if((y+1)>=bcode_sale_cnt[di_cnt]&&bcode_sale_cnt[di_cnt]!=0){
                                                dm+=parseInt(pdan)/2;
                                            }else{
                                                dm+=parseInt(pdan);
                                            }
                                            

                                        }

                                    }
                                    if(y==0){
                                        pdfdantotal += Math.floor(parseInt(price_dan_copy)/10)*10;
                                        pdfbuytotal += Math.floor(parseInt(price_dan_copy/10)*(sale))*10;
                                        pdfgongtotal += Math.floor(parseInt(parseInt(price_dan_copy/10))*(1-(sale)))*10;
                                    }
                                    
                                    // pdfstr1 += "<tr class='addpdf' style='height:40px;'><td class='br bl bd'>"+pname+"</td><td class='br bd'>"+pname2+"</td><td class='br bd'>"+pcode+"</td><td class='br bd'>"+((zero_money_chk==1)?(Math.floor(parseInt(price_dan_copy)/10)*10).toLocaleString():parseInt(price_dan_copy).toLocaleString())+"</td><td class='br bd'>"+rentstartResult[rent_cnt][y]+"~<br/>"+rentendResult[rent_cnt][y]+"</td><td class='br bd'>"+((zero_money_chk==1)?(Math.floor(parseInt(dm)/10)*10).toLocaleString():parseInt(dm).toLocaleString())+"</td><td class='br bd'>"+((zero_money_chk==1)?(Math.floor(parseInt(parseInt(dm)*(sale))/10)*10).toLocaleString():parseInt(parseInt(dm)*(sale)).toLocaleString())+"</td><td class='br bd'>"+((zero_money_chk==1)?(Math.floor(parseInt(parseInt(dm)*(1-sale))/10)*10).toLocaleString():parseInt(parseInt(dm)*(1-sale)).toLocaleString())+"</td></tr>";
                                    pdfstr1 += "<tr class='receipt_tr' style='color:#000; font-size:13px;'><td class=''>"+cancle_date.split("-")[1]+"/"+cancle_date.split("-")[2]+"</td><td class='br bd'>"+pname+"</td><td >"+pname2+"</td><td>대여</td><td>1</td><td>"+((zero_money_chk==1)?(Math.floor(parseInt(dm)/10)*10).toLocaleString():parseInt(dm).toLocaleString())+"</td><td>"+((zero_money_chk==1)?(Math.floor(parseInt(parseInt(dm)*(sale))/10)*10).toLocaleString():parseInt(parseInt(dm)*(sale)).toLocaleString())+"</td></tr>";

                                    // pdfstr1 += "<tr class='addpdf' style='height:40px;'><td class='br bl bd'>"+pname+"</td><td class='br bd'>"+pname2+"</td><td class='br bd'>"+pcode+"</td><td class='br bd'>"+parseInt(price_dan_copy).toLocaleString()+"</td><td class='br bd'>"+parseInt(price_buy_copy).toLocaleString()+"</td><td class='br bd'>"+parseInt(price_gong_copy).toLocaleString()+"</td><td class='br bd'>"+rentstartResult[y]+"~"+rentendResult[y]+"</td></tr>";
                                    if(bcode_sale_date.length>1&&index_==1){
                                        bcode_sale_cnt[di_cnt] = bcode_sale_origin;
                                    }
                                }   
                                
                                
                            }
                            index++;
                            
                        });
                        console.log("rent_cnt[index2]",otr_rent_chk[index2],index2,otr_rent_chk)
                        if(otr_rent_chk[index2]==1){
                            rent_cnt++;
                            di_cnt++; 
                        }
                        
                    });
                    index = 0;
                    rent_cnt = 0;
                    di_cnt = 0;
                    otr_product.forEach(function(obj2,index2){
                        let pcode_pname = obj2.replace(/((블루,레드)|(네이비,베이지))/g,'').replace(/\(오션블루, 버건디\)/g,'').split(',');
                        pcode_pname.forEach(function(obj,index_){
                            pcode=obj.split('|')[0];
                            pname2=obj.split('|')[1];
                            let pname = '';
                            let pdan = '';
                            let bcode_sale_date = '';
                            
                            if(order_print_product_all[pcode].target=='구입'||order_print_product_all[pcode].target=='구입 또는 대여'&&otr_rent_chk[index2]==0){
                                for(var index_plist=0; index_plist<order_print_plist_obj.plistdic_buy[pcode].length; index_plist++){
                                    let obj_dan = order_print_plist_obj.plistdic_buy[pcode][index_plist].split("|")[0];
                                    let obj_date = order_print_plist_obj.plistdic_buy[pcode][index_plist].split("|")[1];
                                    if(new Date(obj_date) <= new Date(cancled)){
                                        pdan = obj_dan;
                                        //console.log(obj_dan, pdan, obj_date, cdate, index);
                                        break
                                    }
                                }
                                pname = order_print_product_buy[pcode].split("|")[0];
                                // pdan = parseInt(order_print_product_buy[pcode].split("|")[2]);
                                let buy_m = (parseInt(pdan*sale)*parseInt(buycnt[index]));
                                if(zero_money_chk==1){
                                    // buy_m = Math.floor((parseInt(pdan*sale)*parseInt(buycnt[index]))/10)*10;
                                    buy_m = Math.floor(parseInt(pdan*(sale))/10)*10 * parseInt(buycnt[index]);

                                }
                                pdfstr1_2 += "<tr class='addpdf' height='40px;'><td class='tg-c3ow'>"+pname+"</td><td class='tg-c3ow'>"+pname2.replace('(네이비,베이지)','')+"</td><td class='tg-c3ow'>"+pcode+"</td><td class='tg-c3ow'>"+bcode[index].replace(/direct/g,"").replace(/\|/g,"<br/>")+"</td><td class='tg-c3ow'>"+(parseInt(pdan)).toLocaleString()+"원</td><td class='tg-c3ow'>"+buycnt[index]+"</td><td class='tg-c3ow'>"+(parseInt(pdan)*parseInt(buycnt[index])).toLocaleString()+"원</td><td class='tg-c3ow pdfstr_custum_buy'>"+buy_m.toLocaleString()+"원</td><td class='tg-c3ow sdate'>"+cancled+"</td></tr>";

                            }else if(order_print_product_all[pcode].target=='대여'||order_print_product_all[pcode].target=='구입 또는 대여'&&otr_rent_chk[index2]==1){
                                for(var index_plist=0; index_plist<order_print_plist_obj.plistdic_rent[pcode].length; index_plist++){
                                    let obj_dan = order_print_plist_obj.plistdic_rent[pcode][index_plist].split("|")[0];
                                    let obj_date = order_print_plist_obj.plistdic_rent[pcode][index_plist].split("|")[1];
                                    if(new Date(obj_date) < new Date(cancle_date)){
                                        pdan = obj_dan;
                                        //console.log(obj_dan, pdan, obj_date, cdate, index);
                                        break
                                    }
                                }
                                pname = order_print_product_all[pcode].name;
                                // pdan = parseInt(order_print_product_all[pcode].rentprice);
                                let salecnt = 5;
                                if(pname=='전동침대')salecnt=10;
                                else if(pname=='욕창예방 매트리스')salecnt=3;
                                let newsaledates = new Date(bcodesalearr[pcode+"|"+bcode[0]]);
                                newsaledates.setFullYear(newsaledates.getFullYear() + salecnt);
                                newsaledates.setDate(newsaledates.getDate() - 1);
                                bcode_sale_date = dateFormat(newsaledates);
                                let payment_product_arr = [];
                                let payment_product_arr2 = [];
                                for(var y=0; y<di_arr[di_cnt]; y++){
                                    let dm = 0;
                                    let rs = rentstartResult[rent_cnt][y];
                                    let re = rentendResult[rent_cnt][y];
                                    // let dif = new Date(re.split('-')[0]+'-'+re.split('-')[1]+'-'+re.split('-')[2]) - new Date(rs.split('-')[0]+'-'+rs.split('-')[1]+'-');
                                    // let cDay = 24 * 60 * 60 * 1000;// 시 * 분 * 초 * 밀리세컨
                                    // let cMonth = cDay * 30;// 월 만듬
                                    // let cmonth2 = (parseInt(dif/cMonth)+1);
                                    let cmonth2 = monthsBetweenDates(rs.split('-')[0]+'-'+rs.split('-')[1]+'-01',re.split('-')[0]+'-'+re.split('-')[1]+'-01');
                                    let bcode_sale_origin = bcode_sale_cnt[di_cnt];
                                    if(bcode_sale_date.length>1&&index_==1){
                                        bcode_sale_cnt[di_cnt] = 0;
                                    }
                                    for(var k=1; k<=cmonth2; k++){
                                        //console.log(k);
                                        if(k==1){
                                            var lastDate = new Date(rs.split('-')[0], rs.split('-')[1], 0).getDate();
                                            var onem = parseInt(pdan)/lastDate;
                                            var sm = lastDate-parseInt(rs.split('-')[2])+1;
                                            let sm2 = 0;
                                            var sm = lastDate-parseInt(rs.split('-')[2])+1;
                                            if((rs.split('-')[0]+rs.split('-')[1])==(re.split('-')[0]+re.split('-')[1])){
                                                sm2 = lastDate-parseInt(re.split('-')[2]);
                                            }
                                            if((y+1)>=bcode_sale_cnt[di_cnt]&&bcode_sale_cnt[di_cnt]!=0){
                                                
                                                dm+=parseInt((sm-sm2)*onem)/2;
                                            }else{
                                                dm+=parseInt((sm-sm2)*onem);
                                            }
                                            // dm+=parseInt((sm-sm2)*onem);
                                        }else if(k==cmonth2){
                                            var lastDate = new Date(re.split('-')[0], re.split('-')[1], 0).getDate();
                                            var onem = parseInt(pdan)/lastDate;
                                            if((y+1)>=bcode_sale_cnt[di_cnt]&&bcode_sale_cnt[di_cnt]!=0){
                                                dm+=parseInt(parseInt(re.split('-')[2])*onem)/2;
                                            }else{
                                                dm+=parseInt(re.split('-')[2])*onem;
                                            }
                                            // dm+=parseInt(parseInt(re.split('-')[2])*onem);
                                        }else{
                                            if((y+1)>=bcode_sale_cnt[di_cnt]&&bcode_sale_cnt[di_cnt]!=0){
                                                    dm+=parseInt(pdan)/2;
                                                }else{
                                                    dm+=parseInt(pdan);
                                                }
                                            // dm+=parseInt(dan);

                                        }
                                    }
                                    if(zero_money_chk==1){
                                        alldm_r += Math.floor(parseInt(dm)/10)*10;
                                        alldm2_r += Math.floor((parseInt(dm)*(sale))/10)*10;
                                    }else{
                                        alldm_r += dm;
                                        alldm2_r += parseInt(parseInt(dm)*(sale));
                                    }
                                    payment_product_arr.push(pname);
                                    payment_product_arr2.push(pname2);
                                    //pdfstr1 += "<tr class='addpdf' height=47 style='mso-height-source:userset;height:35.25pt'><td colspan=3 height=47 class='xl368' style='border-right:1.0pt solid black; border-top:none;'>"+$('.'+targetclass+' .pdfname').eq(i).text()+"</td><td class='xl368' style='border-right:1.0pt solid black;border-top:none;border-left:none'>"+$('.'+targetclass+' .pdfname2').eq(i).text()+"</td><td class='xl368' style='border-right:1.0pt solid black;border-top:none;border-left:none'>"+$('.'+targetclass+' .pdfcode').eq(i).text()+"</td><td colspan=2 class='xl368' width=171 style='border-right:1.0pt solid black;border-top:none;border-left:none'>"+$('.'+targetclass+' .bcodeinput').eq(i).val()+"</td><td class='xl368' style='border-right:1.0pt solid black;border-top:none;border-left:none'>"+rentstartResult[y]+"</td><td class='xl368' style='border-right:1.0pt solid black;border-top:none;border-left:none'>~</td><td class='xl368' style='border-right:1.0pt solid black;border-top:none;border-left:none'>"+rentendResult[y]+"</td><td class='xl368' style='border-right:1.0pt solid black;border-top:none;border-left:none'>"+parseInt(dm).toLocaleString()+"원</td><td class='xl368 sdate' style='border-right:1.0pt solid black;border-right:1.0pt solid black;border-top:none;border-left:none'>"+parseInt(parseInt(dm)*(parseInt(psale)/100)).toLocaleString()+"원</td></tr>";
                                    pdfstr1_2_r += "<tr class='addpdf'><td class='tg-c3ow'>"+pname+"</td><td class='tg-c3ow'>"+pname2+"</td><td class='tg-c3ow'>"+pcode+"</td><td class='tg-c3ow'>"+bcode[index]+"</td><td class='tg-c3ow'>"+rentstartResult[rent_cnt][y]+"</td><td class='tg-c3ow'>~<br/></td><td class='tg-c3ow'>"+rentendResult[rent_cnt][y]+"</td><td class='tg-c3ow'>"+((zero_money_chk==1)?(Math.floor(parseInt(dm)/10)*10).toLocaleString():parseInt(dm).toLocaleString())+"원</td><td class='tg-c3ow sdate'>"+((zero_money_chk==1)?(Math.floor(parseInt(parseInt(dm)*(sale))/10)*10).toLocaleString():parseInt(parseInt(dm)*(sale)).toLocaleString())+"원</td></tr>";
                                    if(bcode_sale_date.length>1&&index_==1){
                                        bcode_sale_cnt[di_cnt] = bcode_sale_origin;
                                    }
                                }
                                // di_cnt++; 
                                //rent_cnt++;
                                // if(rent_cnt[index2]==1)rent_cnt++;
                            }
                            index++;
                            
                        });
                        if(otr_rent_chk[index2]==1){
                            rent_cnt++;
                            di_cnt++; 
                        }
                    });

                    rent_cnt = 0;
                    index = 0;
                    di_cnt = 0;
                    otr_product.forEach(function(obj2,index2){
                        let pcode_pname = obj2.replace(/((블루,레드)|(네이비,베이지))/g,'').replace(/\(오션블루, 버건디\)/g,'').split(',');
                        pcode_pname.forEach(function(obj,index_){
                            pcode=obj.split('|')[0];
                            pname2=obj.split('|')[1];
                            let pname = '';
                            let pdan = '';
                            
                            if(order_print_product_all[pcode].target=='구입'||order_print_product_all[pcode].target=='구입 또는 대여'){
                                for(var index_plist=0; index_plist<order_print_plist_obj.plistdic_buy[pcode].length; index_plist++){
                                    let obj_dan = order_print_plist_obj.plistdic_buy[pcode][index_plist].split("|")[0];
                                    let obj_date = order_print_plist_obj.plistdic_buy[pcode][index_plist].split("|")[1];
                                    if(new Date(obj_date) <= new Date(cancled)){
                                        pdan = obj_dan;
                                        //console.log(obj_dan, pdan, obj_date, cdate, index);
                                        break
                                    }
                                }
                                pname = order_print_product_buy[pcode].split("|")[0];
                                // pdan = parseInt(order_print_product_buy[pcode].split("|")[2]);
                                let buy_m = (parseInt(pdan*sale)*parseInt(buycnt[index]));
                                if(zero_money_chk==1){
                                    // buy_m = Math.floor((parseInt(pdan*sale)*parseInt(buycnt[index]))/10)*10;
                                    buy_m = Math.floor(parseInt(pdan*(sale))/10)*10 * parseInt(buycnt[index]);

                                }
                                pdfstr1_3 += "<tr class='addpdf' style='height:40px;'><td height=32 class='tg-nrix'>판매</td><td class='tg-nrix'>"+pname+"</td><td class='tg-nrix'>"+pname2.replace('(네이비,베이지)','')+"</td><td class='tg-nrix'>"+pcode+"</td><td class='tg-nrix'>"+cancled+"</td><td class='tg-nrix'>"+(parseInt(pdan)*parseInt(buycnt[index])).toLocaleString()+"</td><td class='tg-nrix'>"+buy_m.toLocaleString()+"</td><td class='tg-nrix'></td></tr>";

                            }else if(order_print_product_all[pcode].target=='대여'){
                                for(var index_plist=0; index_plist<order_print_plist_obj.plistdic_rent[pcode].length; index_plist++){
                                    let obj_dan = order_print_plist_obj.plistdic_rent[pcode][index_plist].split("|")[0];
                                    let obj_date = order_print_plist_obj.plistdic_rent[pcode][index_plist].split("|")[1];
                                    if(new Date(obj_date) < new Date(cancle_date)){
                                        pdan = obj_dan;
                                        //console.log(obj_dan, pdan, obj_date, cdate, index);
                                        break
                                    }
                                }
                                pname = order_print_product_all[pcode].name;
                                // pdan = parseInt(order_print_product_all[pcode].rentprice);
                                /*--------------------------------------------------------*
                //             // 제품설치대장 ROW 추가
                //             *--------------------------------------------------------*/
                                for(var y=0; y<di_arr[di_cnt]; y++){
                                    var dm = 0;
                                    var rs = rentstartResult[rent_cnt][y];
                                    var re = rentendResult[rent_cnt][y];
                                    let cmonth2 = monthsBetweenDates(rs.split('-')[0]+'-'+rs.split('-')[1]+'-01',re.split('-')[0]+'-'+re.split('-')[1]+'-01');
                                    let bcode_sale_origin = bcode_sale_cnt[di_cnt];
                                    if(bcode_sale_date.length>1&&index_==1){
                                        bcode_sale_cnt[di_cnt] = 0;
                                    }
                                    for(var k=1; k<=cmonth2; k++){
                                        if(k==1){
                                            var lastDate = new Date(rs.split('-')[0], rs.split('-')[1], 0).getDate();
                                            var onem = parseInt(pdan)/lastDate;
                                            let sm2 = 0;
                                            var sm = lastDate-parseInt(rs.split('-')[2])+1;
                                            if((rs.split('-')[0]+rs.split('-')[1])==(re.split('-')[0]+re.split('-')[1])){
                                                sm2 = lastDate-parseInt(re.split('-')[2]);
                                            }
                                            if((y+1)>=bcode_sale_cnt[di_cnt]&&bcode_sale_cnt[di_cnt]!=0){
                                                
                                                dm+=parseInt((sm-sm2)*onem)/2;
                                            }else{
                                                dm+=parseInt((sm-sm2)*onem);
                                            }
                                            
                                        }else if(k==cmonth2){
                                            var lastDate = new Date(re.split('-')[0], re.split('-')[1], 0).getDate();
                                            var onem = parseInt(pdan)/lastDate;
                                            if((y+1)>=bcode_sale_cnt[di_cnt]&&bcode_sale_cnt[di_cnt]!=0){
                                                dm+=parseInt(parseInt(re.split('-')[2])*onem)/2;
                                            }else{
                                                dm+=parseInt(re.split('-')[2])*onem;
                                            }
                                            
                                        }else{
                                            if((y+1)>=bcode_sale_cnt[di_cnt]&&bcode_sale_cnt[di_cnt]!=0){
                                                dm+=parseInt(pdan)/2;
                                            }else{
                                                dm+=parseInt(pdan);
                                            }
                                            

                                        }

                                    }
                                    alldm3 += dm;
                                    alldm4 += parseInt(parseInt(dm)*sale);
                                    pdfstr1_3 += "<tr class='addpdf' style='height:40px;'><td height=32 class='tg-nrix'>대여</td><td class='tg-nrix'>"+pname+"</td><td class='tg-nrix'>"+pname2+"</td><td class='tg-nrix'>"+pcode+"</td><td class='tg-nrix'>"+rentstartResult[rent_cnt][y]+"~"+rentendResult[rent_cnt][y]+"</td><td class='tg-nrix pdfstr_custum_dan'>"+((zero_money_chk==1)?(Math.floor(parseInt(dm)/10)*10).toLocaleString():parseInt(dm).toLocaleString())+"</td><td class='tg-nrix pdfstr_custum_buy'>"+((zero_money_chk==1)?(Math.floor(parseInt(parseInt(dm)*(sale))/10)*10).toLocaleString():parseInt(parseInt(dm)*(sale)).toLocaleString())+"</td><td class='tg-nrix'></td></tr>";
                                    if(bcode_sale_date.length>1&&index_==1){
                                        bcode_sale_cnt[di_cnt] = bcode_sale_origin;
                                    }
                                }
                            //     di_cnt++;
                            //    //rent_cnt++;
                            //    if(rent_cnt[index2]==1)rent_cnt++;
                            }
                            index++;
                            
                        });
                        if(otr_rent_chk[index2]==1){
                            rent_cnt++;
                            di_cnt++; 
                        }
                    });
                    otr_product.forEach(function(obj2,index2){
                        let pcode_pname = obj2.replace(/((블루,레드)|(네이비,베이지))/g,'').replace(/\(오션블루, 버건디\)/g,'').split(',');
                        pcode_pname.forEach(function(obj,index_){
                            pcode=obj.split('|')[0];
                            pname2=obj.split('|')[1];
                            let pname = order_print_product[pcode].split("|")[0];
                            payment_str += pname+'&nbsp;'+pname2+'<br/>';
                        });
                    });
                    for(var i=0; i<ionContents.length; i++){
                        if("<%=company%>"=="진접의료기"){
                            let banknum_custum  = ionContents[i].contentDocument.querySelectorAll('.banknum_custum');
                            banknum_custum.forEach(function(obj,index){
                                obj.innerHTML = "국민 834 21 0062 747 고형석";
                            });
                        }else if("<%=company%>"=="선한inc/선한돌봄복지용구"){
                            let banknum_custum  = ionContents[i].contentDocument.querySelectorAll('.banknum_custum');
                            banknum_custum.forEach(function(obj,index){
                                obj.innerHTML = "국민 209701-04-451851 박태윤(선한inc)";
                            });
                        }else if("<%=company%>"=="나눔케어"){
                            let banknum_custum  = ionContents[i].contentDocument.querySelectorAll('.banknum_custum');
                            banknum_custum.forEach(function(obj,index){
                                obj.innerHTML = "신한은행 : 100-036-689961 나눔케어";
                            });
                        }else if("<%=company%>"=="백세복지의료기기"){
                            let banknum_custum  = ionContents[i].contentDocument.querySelectorAll('.banknum_custum');
                            banknum_custum.forEach(function(obj,index){
                                obj.innerHTML = "신협 134005526697 백세복지의료기기";
                            });
                        }else if("<%=company%>"=="햇살복지용구"){
                            let banknum_custum  = ionContents[i].contentDocument.querySelectorAll('.banknum_custum');
                            banknum_custum.forEach(function(obj,index){
                                obj.innerHTML = "국민은행(간편계좌) 02-6956-9390";
                            });
                        }
                        

                        let name_html_all = ionContents[i].contentDocument.querySelectorAll('.name');
                        name_html_all.forEach(function(obj,index){
                            obj.innerHTML = name;
                        });

                        ionContents[i].contentDocument.querySelectorAll('.company').forEach(function(obj,index){
                            obj.innerHTML = "<%=company%>";
                        });
                        ionContents[i].contentDocument.querySelectorAll('.company').forEach(function(obj,index){
                            obj.innerHTML = "<%=company%>";
                        });
                        
                        ionContents[i].contentDocument.querySelectorAll('.companynum2').forEach(function(obj,index){
                            obj.innerHTML = companynumber2;
                        });

                        ionContents[i].contentDocument.querySelectorAll('.ceo').forEach(function(obj,index){
                            obj.innerHTML = companyceo+"&nbsp;&nbsp;&nbsp;&nbsp;<span class='pdfsign2'>(인)</span>";
                        });

                        ionContents[i].contentDocument.querySelectorAll('.sdate').forEach(function(obj,index){
                            obj.innerHTML = cancle_date;
                        });

                        ionContents[i].contentDocument.querySelectorAll('.caddress').forEach(function(obj,index){
                            obj.innerHTML = companyaddress;
                        });

                        
                        ionContents[i].contentDocument.querySelectorAll('.pdfdantotal2').forEach(function(obj,index){
                            obj.innerHTML = "&#8361;"+ parseInt(alldm_r+alldm).toLocaleString();
                        });

                        ionContents[i].contentDocument.querySelectorAll('.pdfbuytotal2').forEach(function(obj,index){
                            obj.innerHTML = "&#8361;"+ parseInt(alldm2_r+alldm2).toLocaleString();
                        });
                        $('.ion').contents().find('.receipt_tr').remove();
                        $('.ion').contents().find('.receipt_tr_dm').remove();
        
                        // for(var i = 0; i<17; i++){
                            // $('.ion').contents().find('.receipt_tr_col').after(receipt_str);
                        // }
                        for(var z = 0; z<12; z++){
                            ionContents[i].contentDocument.querySelectorAll('.receipt_tr_col').forEach(function(obj,index){
                                obj.insertAdjacentHTML('afterend', receipt_str);
                            });
                        }
                        ionContents[i].contentDocument.querySelectorAll('.receipt_tr_col').forEach(function(obj,index){
                            obj.insertAdjacentHTML('afterend', pdfstr1);
                        });
                        let receipt_tr_dm = ionContents[i].contentDocument.querySelectorAll('.receipt_tr_dm');
                        let receipt_tr = ionContents[i].contentDocument.querySelectorAll('.receipt_tr');
                        console.log("receipt_tr",receipt_tr)
                        if(receipt_tr_dm.length>0){
                            for(let index=0; index<receipt_tr.length/2; index++){
                                receipt_tr_dm[index].remove();
                                console.log(receipt_tr_dm)
                                console.log((receipt_tr_dm.length)/2,index);
                                receipt_tr_dm[(receipt_tr_dm.length)/2+index].remove();
                            }
                            // receipt_tr.forEach(function(obj,index){
                            //     receipt_tr_dm[index].remove();
                            //     receipt_tr_dm[receipt_tr_dm.length/2+index].remove();
                            // });
                                
                        }

                        let bcnt_b = 0;
                        let bcnt_r = 0;
                        buycnt_b.forEach(function(obj,index){
                            bcnt_b += parseInt(obj);
                        });
                        buycnt_r.forEach(function(obj,index){
                            bcnt_r += parseInt(obj);
                        });
                        ionContents[i].contentDocument.querySelectorAll('.bcnt').forEach(function(obj,index){
                            obj.innerHTML = bcnt_b+bcnt_r;
                        });

                        let topcm = '-20';
                        let tcls = 'basic';
                        let pdfstr3 = '<span class="msg_sign" style="position: absolute; right:0px; top:-15px;"><image style="width:60px; -webkit-user-drag: none;" src="/companystamp/<%=company.replace(/ /g,"%20")%>" onerror="this.style.display=\'none\'"></span>';
                        let pdfSign2Element = ionContents[i].contentDocument.querySelector('.pdfsign2');
                        while (pdfSign2Element.firstChild) {
                            pdfSign2Element.removeChild(pdfSign2Element.firstChild);
                        }
                        ionContents[i].contentDocument.querySelectorAll('.pdfsign2').forEach(function(obj,index){
                            obj.insertAdjacentHTML('beforeend', pdfstr3);
                        });
                        err_obj.name_arr.push(name);
                        err_obj.number_arr.push(number);
                        err_obj.el_arr.push(ionContents[i].contentDocument.querySelector('html').innerHTML);
                    }
            }
        });
        await getBase64Image(err_obj);
        
        
    }

    function insertHyphen(dateString) {
        const year = dateString.substring(0, 4);
        const month = dateString.substring(4, 6);
        const day = dateString.substring(6, 8);

        return `${year}-${month}-${day}`;
    }

    async function rent_add_make_doc(x,p_obj){
        now_doc_create = 'basic';
        // let chk_cnt = 0;
        // $('.rent_add_chk').each(function(){
        //     if($(this).is(':checked')){
        //         chk_cnt++;
        //     }
        // });
        // if(chk_cnt==0){
        //     Swal.showValidationMessage(`
        //         <div style="font-weight:bold; font-size:20px;">출력실패:선택된 수급자가 없습니다.</div>
        //     `);
        //     return 0
        // }
        let now = new Date();
        let year = now.getFullYear();
        let mon = (now.getMonth() + 1) > 9 ? '' + (now.getMonth() + 1) : '0' + (now.getMonth() + 1);
        let day = now.getDate() > 9 ? '' + now.getDate() : '0' + now.getDate();
        let chan_val = year + '-' + mon + '-' + day;
        const lastdate = new Date(year, mon, 0).getDate();
        let last_chan_val = year + '-' + mon + '-' +lastdate;
        // let tr_data = $(x).children('tbody').children('tr');
        let tr_data = $('.ordertr');
        // name_arr = [];
        // number_arr = [];
        // el_arr = [];
        err_obj.name_arr = [];
        err_obj.number_arr =[];
        err_obj.el_arr = [];
        // console.log(tr_data);
        const ionContents = document.getElementsByClassName('iprint');
        const ionContentsContentDocument = ionContents.contentDocument;
        let same_arr = [];
        $.each(tr_data,async function(i){
            if($(tr_data[i]).children('td').eq(0).children('input').is(":checked")){
                let otr_data = page_otr_data[i];
                let name = otr_data.name;
                let number = otr_data.number;
                let order_date = otr_data.orderdate.split(" ")[0];
                same_arr.push(order_date+"|"+name+"|"+number);
            }else{
                same_arr.push('');
            }
        });

        let rent_add_tr = $('.rent_add_tr');
        // page_otr_data 배열을 tr_data.length만 남기고 나머지 삭제
        if (page_otr_data.length > tr_data.length) {
            page_otr_data.splice(tr_data.length);
            console.log("page_otr_data 배열이 정리되었습니다. 현재 길이:", page_otr_data.length);
        }
        $.each(rent_add_tr,async function(i){
            if($(rent_add_tr[i]).children('td').eq(0).children('input').is(":checked")){
                let otr_data = rent_add_obj[i];
                let name = otr_data.name;
                let number = otr_data.number;
                let order_date = otr_data.orderdate.split(" ")[0];
                same_arr.push(order_date+"|"+name+"|"+number);
                page_otr_data.push({
                    num:otr_data.num,
                    name:otr_data.name,
                    number:otr_data.number,
                    product:otr_data.pcode+"|"+order_print_product_all[otr_data.pcode].name2,
                    buybcode:otr_data.bcode,
                    orderdate:otr_data.orderdate,
                    rentend:insertHyphen(otr_data.date),
                    rentstart:insertHyphen(otr_data.constartdate),
                    sale:otr_data.sale,
                    datenow:otr_data.datenow,
                    nextdate:otr_data.nextdate,
                    target:otr_data.target,
                    ranker:otr_data.ranker,
                    regident:otr_data.regident,
                    address:otr_data.address+' '+otr_data.addressdetail,
                    guardname:otr_data.guardname,
                    guardtarget:otr_data.guardtarget,
                    manager:otr_data.manager,
                    phone1:otr_data.phone1,
                    rkey:1,
                    buycnt:1
                })
            }else{
                same_arr.push('');
                page_otr_data.push('');
            }
        });
        console.log('salme_arr:',same_arr)
        const duplicateIndexes = {};
        same_arr.forEach((value, index) => {
            if (!(value in duplicateIndexes)) {
                duplicateIndexes[value] = [index];
            } else {
                duplicateIndexes[value].push(index);
            }
        });

        for (const [value, indexes] of Object.entries(duplicateIndexes)) {
            if (indexes.length > 1) {
                console.log(`값 ${value}의 중복된 인덱스: ${indexes.join(', ')}`);
            }
        }
        let continue_arr = [];
        let continue_chk = 0;
        $.each(tr_data,async function(i){
            continue_chk = 0;
            let bcode_sale_cnt = 0;
            if($(tr_data[i]).children('td').eq(0).children('input').is(":checked")&&!$(tr_data[i]).children('td').eq(0).children('input').hasClass('allchk')){
                
                console.log("coninue:",i,continue_arr)
                for(var c=0; c<continue_arr.length; c++){
                    if((i)==continue_arr[c]){
                        console.log("continue:",c)
                        continue_chk = 1;
                    }
                }
                if(continue_chk==1)return true;
                console.log("noconfinue",i)
                let di = 1;
                let rentendResult = {};
                let rentstartResult = {};
                let pdfstr1 = '';
                let pdfstr1_2 = '';
                let pdfstr1_2_r = '';
                let pdfstr1_3 = '';
                let alldm = 0;
                let alldm2 = 0;
                let alldm_r = 0;
                let alldm2_r = 0;
                let alldm3 = 0;
                let alldm4 = 0;
                let pdfdantotal = 0;
                let pdfbuytotal = 0;
                let pdfgongtotal = 0;

                let cnum = page_cnum_data[i];
                let otr_data = page_otr_data[i];
                console.log(otr_data);
                
                let name = otr_data.name;
                let number = otr_data.number;
                let order_date = otr_data.orderdate.split(" ")[0];
                let otr_product = [otr_data.product];
                let otr_buybcode = otr_data.buybcode;
                let otr_buycnt = otr_data.buycnt;
                let otr_target = [];
                let otr_rentproduct = '';
                let otr_rbuybcode = '';
                let otr_rbuycnt = '';
                let otr_rentstart = [];
                let otr_rentend = [];
                let di_arr = [];
                let bcode_sale_cnt = [];
                let otr_rent_chk = [];
                if(otr_data.rkey!=''&&otr_data.rkey!=null){
                    otr_rentstart = [otr_data.rentstart];
                    otr_rentend = [otr_data.rentend];
                    di_arr = [1];
                    otr_rent_chk.push(1);
                }else{
                    otr_rent_chk.push(0);
                }
                
                if(duplicateIndexes[order_date+"|"+name+"|"+number].length>1){
                    console.log("ERERER")
                    duplicateIndexes[order_date+"|"+name+"|"+number].forEach(function(obj,index){
                        if(index!=0){
                            console.log([duplicateIndexes[order_date+"|"+name+"|"+number]])
                            otr_product.push(page_otr_data[obj].product);
                            otr_buybcode = otr_buybcode +","+page_otr_data[obj].buybcode;
                            otr_buycnt = otr_buycnt +","+page_otr_data[obj].buycnt;
                            console.log("page_otr_data[obj]",page_otr_data[obj])
                            if(page_otr_data[obj].rkey!=''&&page_otr_data[obj].rkey!=null){
                                otr_rentstart.push(page_otr_data[obj].rentstart);
                                otr_rentend.push(page_otr_data[obj].rentend);
                                di_arr.push(1);
                                otr_rent_chk.push(1);
                                console.log("otr_rent_chk",otr_rent_chk)
                            }else{
                                console.log("otr_rent_chk",otr_rent_chk)
                                otr_rent_chk.push(0);
                            }
                        }    
                        // page_otr_data.splice(duplicateIndexes[order_date+"|"+name+"|"+number][1]);
                        continue_arr.push(obj)
                    });
                    
                }
                console.log('otr_product:',otr_rentstart,otr_rentend,di_arr)
                // let pcode_pname = otr_product.replace(/((블루,레드)|(네이비,베이지))/g,'').replace(/\(오션블루, 버건디\)/g,'').split(',');
                let bcode = otr_buybcode.split(',');
//                 let rentstart = $(tr_data[i]).children('td').eq(6).text().replace(/(\d{4})(\d{2})(\d{2})/g, '$1-$2-$3');
//                 let rentend = $(tr_data[i]).children('td').eq(7).text().replace(/(\d{4})(\d{2})(\d{2})/g, '$1-$2-$3');
                let target = otr_data.target;
                let ranker = otr_data.ranker;
                let regident = otr_data.regident;
                let address = otr_data.address+" "+otr_data.addressdetail;
                let guardname = otr_data.guardname;
                let guardtarget = otr_data.guardtarget;
                let manager = otr_data.manager;
                let phone = otr_data.phone1;
                let sale =  parseInt(otr_data.sale.replace(/.0%|[^0-9]/g,''))/100;
                let cancled = otr_data.cancled.split(" ")[0];
                let buycnt = otr_buycnt.split(',');
                let buycnt_b = [];
                let buycnt_r = [];
                let payment_str = '';
                let companynumber = "<%=companynumber%>";
                let companynumber2 = "<%=bankinfo[0].companynum%>";
                let companyceo = "<%=companyceo%>";
                let companytel = "<%=bankinfo[0].companyphone%>";
                let companyfax = "<%=bankinfo[0].companyfax%>";
                let companyaddress = "<%=bankinfo[0].address%> "+"<%=bankinfo[0].addressdetail%>";
                let rentstart = otr_data.rentstart;
                let rentend = otr_data.rentend;
                let datenowarr = otr_data.datenow.replace(/(\[|\]|\'|\|| |&#39|\;)/g,'').split('~');
                let nextdatearr =  otr_data.nextdate.replace(/(\[|\]|\'|\|| |&#39|\;)/g,'').split(',');
                let bcode_sale_date = [];
                let bcode_cnt = 0;
                // let bon = dan*sale;
                // let gong = dan-bon;
                /*--------------------------------------------------------*
                // 전체 대여기간 급여제공기록지 생성
                *--------------------------------------------------------*/
               if(otr_rentstart.length>0){
                // let bcode_sale_cnt = 0;
                otr_product.forEach(function(obj2,index2){
                    let pcode_pname = obj2.replace(/((블루,레드)|(네이비,베이지))/g,'').replace(/\(오션블루, 버건디\)/g,'').split(',');
                    pcode_pname.forEach(function(obj,index_){
                        let pcode=obj.split('|')[0];
                        console.log("pcode",pcode)
                        if((order_print_product_all[pcode].target=='대여'||order_print_product_all[pcode].target=='구입 또는 대여')&&otr_rent_chk[index2]==1){
                            let pname = order_print_product_all[pcode].name;
                            let salecnt = 5;
                            if(pname=='전동침대')salecnt=10;
                            else if(pname=='욕창예방 매트리스')salecnt=3;
                            console.log("bcode:",bcode)
                            if(bcode[bcode_cnt].replace(/ /g,'')!="direct"&&bcode[bcode_cnt].replace(/ /g,'')!=""){
                                let newsaledates = new Date(bcodesalearr[pcode+"|"+bcode[bcode_cnt].replace(/ /g,'')]);
                                console.log(bcodesalearr[pcode+"|"+bcode[bcode_cnt]]);
                                if(bcodesalearr[pcode+"|"+bcode[bcode_cnt]]){
                                    newsaledates.setFullYear(newsaledates.getFullYear() + salecnt);
                                    newsaledates.setDate(newsaledates.getDate() - 1);
                                    bcode_sale_date.push(dateFormat(newsaledates));
                                }else{
                                    bcode_sale_date.push('');
                                }
                                
                            }else{
                                bcode_sale_date.push('');
                            }
                            
                        }
                        bcode_cnt++;
                    });
                });
                console.log("bcodesale:",bcode_sale_date)
                otr_rentstart.forEach(function(obj,index){
                    console.log("otr_rentstart:",otr_rentstart[index])
                    rentstart = otr_rentstart[index];
                    rentend = otr_rentend[index];
                    bcode_sale_cnt.push(0);
                    rentendResult[index]=[];
                    rentstartResult[index]=[];
                    if(new Date(rentend)>new Date(datenowarr[1])){
                        if(new Date(rentstart)<new Date(datenowarr[1])){
                            if(bcode_sale_date[index]!=''){
                                if(new Date(bcode_sale_date[index])>new Date(rentstart)){
                                    if(new Date(datenowarr[1])>new Date(bcode_sale_date[index])){
                                        di_arr[index]++;
                                        bcode_sale_cnt[index] = di_arr[index];
                                        rentendResult[index].push(bcode_sale_date[index]);
                                        rentstartResult[index].push(rentstart);
                                        let bocde_sale_date_plus = new Date(new Date(bcode_sale_date[index]).setDate(new Date(bcode_sale_date[index]).getDate() + 1));
                                        let bocde_sale_year = bocde_sale_date_plus.getFullYear();
                                        let bocde_sale_month = ('0' + (bocde_sale_date_plus.getMonth() + 1)).slice(-2);
                                        let bocde_sale_day = bocde_sale_date_plus.getDate() > 9 ? '' + bocde_sale_date_plus.getDate() : '0' + bocde_sale_date_plus.getDate();
                                        rentstart = bocde_sale_year + "-" + bocde_sale_month + "-" + bocde_sale_day;
                                    }else if(datenowarr[1]==bcode_sale_date[index]){
                                        di_arr[index]++;
                                        bcode_sale_cnt[index] = di_arr[index];
                                    }
                                }else{
                                    bcode_sale_cnt[index] = di_arr[index];
                                }
                            }
                            if(datenowarr[1]!=bcode_sale_date[index])di_arr[index]++;
                            rentendResult[index].push(datenowarr[1]);
                            rentstartResult[index].push(rentstart);
                            console.log("rentstartResult:",rentstartResult)
                        }
                        var nextdatearrLength = nextdatearr.length;
                        for (var i = nextdatearrLength - 1; i >= 0; i--) {
                            var nextdate = nextdatearr[i].split('~');
                            rentstartResult[index].push(nextdate[0]);
                            if (new Date(rentend) > new Date(nextdate[1])) {
                                if(bcode_sale_date[index]!=''&&bcode_sale_cnt[index]==0){
                                    if(new Date(bcode_sale_date[index])>new Date(nextdate[0])){
                                        if(new Date(nextdate[1])>new Date(bcode_sale_date[index])){
                                            di_arr[index]++;
                                            bcode_sale_cnt[index] = di_arr[index];
                                            rentendResult[index].push(bcode_sale_date[index]);
                                            // rentstartResult.push(nextdate[0]);
                                            let bocde_sale_date_plus = new Date(new Date(bcode_sale_date[index]).setDate(new Date(bcode_sale_date[index]).getDate() + 1));
                                            let bocde_sale_year = bocde_sale_date_plus.getFullYear();
                                            let bocde_sale_month = ('0' + (bocde_sale_date_plus.getMonth() + 1)).slice(-2);
                                            let bocde_sale_day = bocde_sale_date_plus.getDate() > 9 ? '' + bocde_sale_date_plus.getDate() : '0' + bocde_sale_date_plus.getDate();
                                            let rentstart = bocde_sale_year + "-" + bocde_sale_month + "-" + bocde_sale_day;
                                            rentstartResult[index].push(rentstart);
                                        }else if(nextdate[1]==bcode_sale_date[index]){
                                            di_arr[index]++;
                                            bcode_sale_cnt[index] = di_arr[index];
                                        }
                                    }else{
                                        bcode_sale_cnt[index] = di_arr[index];
                                    }
                                }
                                if(nextdate[1]!=bcode_sale_date[index])di_arr[index]++;
                                rentendResult[index].push(nextdate[1]);
                                console.log("rentstartResult:",rentstartResult)
                            } else {
                                if(bcode_sale_date[index]!=''&&bcode_sale_cnt[index]==0){
                                    console.log("bcode_sale_sestest")
                                    if(new Date(bcode_sale_date[index])>new Date(nextdate[0])){
                                        console.log("bcode_sale_sestest",nextdate[1])
                                        if(new Date(nextdate[1])>new Date(bcode_sale_date[index])&&new Date(rentend)>new Date(bcode_sale_date[index])){
                                            console.log("bcode_sale_cnt+++")
                                            di_arr[index]++;
                                            bcode_sale_cnt[index] = di_arr[index];
                                            rentendResult[index].push(bcode_sale_date[index]);
                                            // rentstartResult.push(nextdate[0]);
                                            let bocde_sale_date_plus = new Date(new Date(bcode_sale_date[index]).setDate(new Date(bcode_sale_date[index]).getDate() + 1));
                                            let bocde_sale_year = bocde_sale_date_plus.getFullYear();
                                            let bocde_sale_month = ('0' + (bocde_sale_date_plus.getMonth() + 1)).slice(-2);
                                            let bocde_sale_day = bocde_sale_date_plus.getDate() > 9 ? '' + bocde_sale_date_plus.getDate() : '0' + bocde_sale_date_plus.getDate();
                                            let rentstart = bocde_sale_year + "-" + bocde_sale_month + "-" + bocde_sale_day;
                                            rentstartResult[index].push(rentstart);
                                        }else if(nextdate[1]==bcode_sale_date[index]){
                                            di_arr[index]++;
                                            bcode_sale_cnt[index] = di_arr[index];
                                        }
                                    }else{
                                        
                                        bcode_sale_cnt[index] = di_arr[index];
                                    }
                                }
                                rentendResult[index].push(rentend);
                                console.log("rentstartResult:",rentstartResult)
                                break;
                            }
                        }
                    }else{
                        if(bcode_sale_date[index]!=''){
                            if(new Date(bcode_sale_date[index])>new Date(rentstart)){
                                if(new Date(datenowarr[1])>new Date(bcode_sale_date[index])&&new Date(rentend)>new Date(bcode_sale_date[index])){
                                    di_arr[index]++;
                                    bcode_sale_cnt[index] = di_arr[index];
                                    rentendResult[index].push(bcode_sale_date[index]);
                                    rentstartResult[index].push(rentstart);
                                    let bocde_sale_date_plus = new Date(new Date(bcode_sale_date[index]).setDate(new Date(bcode_sale_date[index]).getDate() + 1));
                                    let bocde_sale_year = bocde_sale_date_plus.getFullYear();
                                    let bocde_sale_month = ('0' + (bocde_sale_date_plus.getMonth() + 1)).slice(-2);
                                    let bocde_sale_day = bocde_sale_date_plus.getDate() > 9 ? '' + bocde_sale_date_plus.getDate() : '0' + bocde_sale_date_plus.getDate();
                                    rentstart = bocde_sale_year + "-" + bocde_sale_month + "-" + bocde_sale_day;
                                }else if(datenowarr[1]==bcode_sale_date[index]){
                                    di_arr[index]++;
                                    bcode_sale_cnt[index] = di_arr[index];
                                }
                            }else{
                                bcode_sale_cnt[index] = di_arr[index];
                            }
                        }
                        rentendResult[index].push(rentend);
                        rentstartResult[index].push(rentstart);
                        console.log("rentstartResult:",rentstartResult)
                    }
                });
                
               }
                console.log("di_arr",di_arr)
                let zero_money_chk = 0;
                if($('.zero_money_chk').is(":checked"))zero_money_chk = 1;
                // if(otr_data.rentproduct==''){
                    let pcode = '';
                    let pname2 = '';
                    console.log(otr_product)
                    let di_cnt = 0;
                    let index = 0;
                    let rent_cnt= 0;
                    otr_product.forEach(function(obj2,index2){
                        let pcode_pname = obj2.replace(/((블루,레드)|(네이비,베이지))/g,'').replace(/\(오션블루, 버건디\)/g,'').split(',');
                        pcode_pname.forEach(function(obj,index_){
                            pcode=obj.split('|')[0];
                            pname2=obj.split('|')[1];
                            let pname = '';
                            let pdan = '';
                            console.log("otr_rent_chk:",otr_rent_chk)
                            if((order_print_product_all[pcode].target=='구입'||order_print_product_all[pcode].target=='구입 또는 대여')&&otr_rent_chk[index2]==0){

                                pname = order_print_product_buy[pcode].split("|")[0];
                                pdan = parseInt(order_print_product_buy[pcode].split("|")[2]);
                                let buy_m = parseInt(parseInt(pdan*parseInt(buycnt[index]))*(sale));
                                let gong_m = parseInt(parseInt(pdan*parseInt(buycnt[index]))*(1-(sale)));
                                if(zero_money_chk==1){
                                    // buy_m = Math.floor(parseInt(parseInt(pdan*parseInt(buycnt[index]))*(sale))/10)*10;
                                    buy_m = Math.floor(parseInt(pdan*(sale))/10)*10 * parseInt(buycnt[index]);

                                    gong_m = parseInt((Math.ceil((pdan*(1-(sale)))/10)*10)*parseInt(buycnt[index]));
                                    alldm2 += buy_m;
                                    pdfbuytotal += buy_m;
                                    pdfgongtotal += gong_m;
                                }else{
                                    alldm2 += buy_m;
                                    pdfbuytotal += buy_m;
                                    pdfgongtotal += gong_m;
                                }
                                pdfstr1 += "<tr class='addpdf' height='40px;'><td class='br bd bl h35 pdfname'>"+pname+"</td><td class='br bd' style='font-size:14px;'>"+pname2+"</td><td class='br bd'>"+pcode+"</td><td class='br bd'>"+(pdan.toLocaleString())+"</td><td class='br bd'>"+cancled+"</td><td class='br bd pdfstr_custum_dan'>"+(pdan*parseInt(buycnt[index])).toLocaleString()+"</td><td class='br bd pdfstr_custum_buy'>"+buy_m.toLocaleString()+"</td><td class='br bd pdfstr_custum_gong'>"+gong_m.toLocaleString()+"</td></tr>";
                                alldm += pdan*parseInt(buycnt[index]);
                                
                                
                                pdfdantotal += pdan*parseInt(buycnt[index]);
                                

                                buycnt_b.push(buycnt[index]);
                            }else if((order_print_product_all[pcode].target=='대여'||order_print_product_all[pcode].target=='구입 또는 대여')&&otr_rent_chk[index2]==1){
                                
                                for(var index_plist=0; index_plist<order_print_plist_obj.plistdic_rent[pcode].length; index_plist++){
                                    let obj_dan = order_print_plist_obj.plistdic_rent[pcode][index_plist].split("|")[0];
                                    let obj_date = order_print_plist_obj.plistdic_rent[pcode][index_plist].split("|")[1];
                                    if(new Date(obj_date) < new Date(cancled)){
                                        pdan = obj_dan;
                                        //console.log(obj_dan, pdan, obj_date, cdate, index);
                                        break
                                    }
                                }
                                // console.log("cancled:",cancled,pdan)
                                pname = order_print_product_all[pcode].name;
                                // pdan = parseInt(order_print_product_all[pcode].rentprice);
                                buycnt_r.push(buycnt[index]);
                                /*--------------------------------------------------------*
                //             // 급여제공기록지 ROW 추가
                //             *--------------------------------------------------------*/
                                console.log(di_arr,rentendResult,rentstartResult)
                                let price_dan_copy = 0;
                                let price_buy_copy = 0;
                                let price_gong_copy = 0;
                                let price_dan = parseInt(pdan);
                                console.log("di_arr[di_cnt]",di_arr[di_cnt],di_cnt)
                                for(var y=0; y<di_arr[di_cnt]; y++){
                                    var dm = 0;
                                    var rs = rentstartResult[rent_cnt][y];
                                    var re = rentendResult[rent_cnt][y];
                                    console.log("rse:",rs,re,rent_cnt)
                                    // var dif = new Date(re.split('-')[0]+'-'+re.split('-')[1]+'-'+re.split('-')[2]) - new Date(rs.split('-')[0]+'-'+rs.split('-')[1]+'-01');
                                    // var cDay = 24 * 60 * 60 * 1000;// 시 * 분 * 초 * 밀리세컨
                                    // var cMonth = cDay * 30;// 월 만듬
                                    // var cmonth2 = (parseInt(dif/cMonth)+1);
                                    let cmonth2 = monthsBetweenDates(rs.split('-')[0]+'-'+rs.split('-')[1]+'-01',re.split('-')[0]+'-'+re.split('-')[1]+'-01');
                                    let bcode_sale_origin = bcode_sale_cnt[di_cnt];
                                    if(bcode_sale_date.length>1&&index_==1){
                                        bcode_sale_cnt[di_cnt] = 0;
                                    }
                                    let sale_txt = '';
                                    if((y+1)>=bcode_sale_cnt[di_cnt]&&bcode_sale_cnt[di_cnt]!=0){
                                        price_dan_copy = parseInt(price_dan/2);
                                        sale_txt = '<span style="font-size:22px; padding-left:5px;">½</span>';

                                    }else{
                                        price_dan_copy = price_dan;
                                    }
                                    for(var k=1; k<=cmonth2; k++){

                                        if(k==1){
                                            var lastDate = new Date(rs.split('-')[0], rs.split('-')[1], 0).getDate();
                                            var onem = parseInt(pdan)/lastDate;
                                            let sm2 = 0;
                                            var sm = lastDate-parseInt(rs.split('-')[2])+1;
                                            if((rs.split('-')[0]+rs.split('-')[1])==(re.split('-')[0]+re.split('-')[1])){
                                                sm2 = lastDate-parseInt(re.split('-')[2]);
                                            }
                                            if((y+1)>=bcode_sale_cnt[di_cnt]&&bcode_sale_cnt[di_cnt]!=0){
                                                
                                                dm+=parseInt((sm-sm2)*onem)/2;
                                            }else{
                                                dm+=(sm-sm2)*onem;
                                            }
                                            
                                        }else if(k==cmonth2){
                                            var lastDate = new Date(re.split('-')[0], re.split('-')[1], 0).getDate();
                                            var onem = parseInt(pdan)/lastDate;
                                            if((y+1)>=bcode_sale_cnt[di_cnt]&&bcode_sale_cnt[di_cnt]!=0){
                                                dm+=parseInt(parseInt(re.split('-')[2])*onem)/2;
                                            }else{
                                                dm+=parseInt(re.split('-')[2])*onem;
                                            }
                                            
                                        }else{
                                            if((y+1)>=bcode_sale_cnt[di_cnt]&&bcode_sale_cnt[di_cnt]!=0){
                                                dm+=parseInt(pdan)/2;
                                            }else{
                                                dm+=parseInt(pdan);
                                            }
                                            

                                        }

                                    }
                                    if(y==0){
                                        pdfdantotal += Math.floor(parseInt(price_dan_copy)/10)*10;
                                        pdfbuytotal += Math.floor(parseInt(price_dan_copy/10)*(sale))*10;
                                        pdfgongtotal += Math.floor(parseInt(parseInt(price_dan_copy/10))*(1-(sale)))*10;
                                    }
                                    
                                    // pdfstr1 += "<tr class='addpdf' style='height:40px;'><td class='br bl bd'>"+pname+"</td><td class='br bd'>"+pname2+"</td><td class='br bd'>"+pcode+"</td><td class='br bd'>"+((zero_money_chk==1)?(Math.floor(parseInt(price_dan_copy)/10)*10).toLocaleString():parseInt(price_dan_copy).toLocaleString())+"</td><td class='br bd'>"+rentstartResult[rent_cnt][y]+"~<br/>"+rentendResult[rent_cnt][y]+"</td><td class='br bd'>"+((zero_money_chk==1)?(Math.floor(parseInt(dm)/10)*10).toLocaleString():parseInt(dm).toLocaleString())+"</td><td class='br bd'>"+((zero_money_chk==1)?(Math.floor(parseInt(parseInt(dm)*(sale))/10)*10).toLocaleString():parseInt(parseInt(dm)*(sale)).toLocaleString())+"</td><td class='br bd'>"+((zero_money_chk==1)?(Math.floor(parseInt(parseInt(dm)*(1-sale))/10)*10).toLocaleString():parseInt(parseInt(dm)*(1-sale)).toLocaleString())+"</td></tr>";
                                    pdfstr1 += `<tr class='addpdf' style='height:40px;'>
                                        <td class='br bl bd'>${pname}</td>
                                        <td class='br bd'>${pname2}</td>
                                        <td class='br bd'>${pcode}</td>
                                        <td class='br bd'>${(zero_money_chk == 1) ? 
                                            (Math.floor(parseInt(price_dan_copy)/10)*10).toLocaleString() : 
                                            parseInt(price_dan_copy).toLocaleString()}${sale_txt}</td>
                                        <td class='br bd'>${rentstartResult[rent_cnt][y]}~<br/>${rentendResult[rent_cnt][y]}</td>
                                        <td class='br bd'>${(zero_money_chk == 1) ? 
                                            (Math.floor(parseInt(dm)/10)*10).toLocaleString() : 
                                            parseInt(dm).toLocaleString()}</td>
                                        <td class='br bd'>${(zero_money_chk == 1) ? 
                                            (Math.floor(parseInt(parseInt(dm)*(sale))/10)*10).toLocaleString() : 
                                            parseInt(parseInt(dm)*(sale)).toLocaleString()}</td>
                                        <td class='br bd'>${(zero_money_chk == 1) ? 
                                            (Math.floor(parseInt(parseInt(dm)*(1-sale))/10)*10).toLocaleString() : 
                                            parseInt(parseInt(dm)*(1-sale)).toLocaleString()}</td>
                                    </tr>`;
                                    if(bcode_sale_date.length>1&&index_==1){
                                        bcode_sale_cnt[di_cnt] = bcode_sale_origin;
                                    }
                                }   
                                
                                
                            }
                            index++;
                            
                        });
                        console.log("rent_cnt[index2]",otr_rent_chk[index2],index2,otr_rent_chk)
                        if(otr_rent_chk[index2]==1){
                            rent_cnt++;
                            di_cnt++; 
                        }
                        
                    });
                    index = 0;
                    rent_cnt = 0;
                    di_cnt = 0;
                    otr_product.forEach(function(obj2,index2){
                        let pcode_pname = obj2.replace(/((블루,레드)|(네이비,베이지))/g,'').replace(/\(오션블루, 버건디\)/g,'').split(',');
                        pcode_pname.forEach(function(obj,index_){
                            pcode=obj.split('|')[0];
                            pname2=obj.split('|')[1];
                            let pname = '';
                            let pdan = '';
                            let bcode_sale_date = '';
                            
                            if(order_print_product_all[pcode].target=='구입'||order_print_product_all[pcode].target=='구입 또는 대여'&&otr_rent_chk[index2]==0){
                                pname = order_print_product_buy[pcode].split("|")[0];
                                pdan = parseInt(order_print_product_buy[pcode].split("|")[2]);
                                let buy_m = (parseInt(pdan*sale)*parseInt(buycnt[index]));
                                if(zero_money_chk==1){
                                    // buy_m = Math.floor((parseInt(pdan*sale)*parseInt(buycnt[index]))/10)*10;
                                    buy_m = Math.floor(parseInt(pdan*(sale))/10)*10 * parseInt(buycnt[index]);

                                }
                                pdfstr1_2 += "<tr class='addpdf' height='40px;'><td class='tg-c3ow'>"+pname+"</td><td class='tg-c3ow'>"+pname2.replace('(네이비,베이지)','')+"</td><td class='tg-c3ow'>"+pcode+"</td><td class='tg-c3ow'>"+bcode[index].replace(/direct/g,"").replace(/\|/g,"<br/>")+"</td><td class='tg-c3ow'>"+(parseInt(pdan)).toLocaleString()+"원</td><td class='tg-c3ow'>"+buycnt[index]+"</td><td class='tg-c3ow'>"+(parseInt(pdan)*parseInt(buycnt[index])).toLocaleString()+"원</td><td class='tg-c3ow pdfstr_custum_buy'>"+buy_m.toLocaleString()+"원</td><td class='tg-c3ow sdate'>"+cancled+"</td></tr>";

                            }else if(order_print_product_all[pcode].target=='대여'||order_print_product_all[pcode].target=='구입 또는 대여'&&otr_rent_chk[index2]==1){
                                for(var index_plist=0; index_plist<order_print_plist_obj.plistdic_rent[pcode].length; index_plist++){
                                    let obj_dan = order_print_plist_obj.plistdic_rent[pcode][index_plist].split("|")[0];
                                    let obj_date = order_print_plist_obj.plistdic_rent[pcode][index_plist].split("|")[1];
                                    if(new Date(obj_date) < new Date(cancled)){
                                        pdan = obj_dan;
                                        //console.log(obj_dan, pdan, obj_date, cdate, index);
                                        break
                                    }
                                }
                                pname = order_print_product_all[pcode].name;
                                // pdan = parseInt(order_print_product_all[pcode].rentprice);
                                let salecnt = 5;
                                if(pname=='전동침대')salecnt=10;
                                else if(pname=='욕창예방 매트리스')salecnt=3;
                                let newsaledates = new Date(bcodesalearr[pcode+"|"+bcode[0]]);
                                newsaledates.setFullYear(newsaledates.getFullYear() + salecnt);
                                newsaledates.setDate(newsaledates.getDate() - 1);
                                bcode_sale_date = dateFormat(newsaledates);
                                let payment_product_arr = [];
                                let payment_product_arr2 = [];
                                for(var y=0; y<di_arr[di_cnt]; y++){
                                    let dm = 0;
                                    let rs = rentstartResult[rent_cnt][y];
                                    let re = rentendResult[rent_cnt][y];
                                    // let dif = new Date(re.split('-')[0]+'-'+re.split('-')[1]+'-'+re.split('-')[2]) - new Date(rs.split('-')[0]+'-'+rs.split('-')[1]+'-');
                                    // let cDay = 24 * 60 * 60 * 1000;// 시 * 분 * 초 * 밀리세컨
                                    // let cMonth = cDay * 30;// 월 만듬
                                    // let cmonth2 = (parseInt(dif/cMonth)+1);
                                    let cmonth2 = monthsBetweenDates(rs.split('-')[0]+'-'+rs.split('-')[1]+'-01',re.split('-')[0]+'-'+re.split('-')[1]+'-01');
                                    let bcode_sale_origin = bcode_sale_cnt[di_cnt];
                                    if(bcode_sale_date.length>1&&index_==1){
                                        bcode_sale_cnt[di_cnt] = 0;
                                    }
                                    for(var k=1; k<=cmonth2; k++){
                                        //console.log(k);
                                        if(k==1){
                                            var lastDate = new Date(rs.split('-')[0], rs.split('-')[1], 0).getDate();
                                            var onem = parseInt(pdan)/lastDate;
                                            var sm = lastDate-parseInt(rs.split('-')[2])+1;
                                            let sm2 = 0;
                                            var sm = lastDate-parseInt(rs.split('-')[2])+1;
                                            if((rs.split('-')[0]+rs.split('-')[1])==(re.split('-')[0]+re.split('-')[1])){
                                                sm2 = lastDate-parseInt(re.split('-')[2]);
                                            }
                                            if((y+1)>=bcode_sale_cnt[di_cnt]&&bcode_sale_cnt[di_cnt]!=0){
                                                
                                                dm+=parseInt((sm-sm2)*onem)/2;
                                            }else{
                                                dm+=(sm-sm2)*onem;
                                            }
                                            // dm+=parseInt((sm-sm2)*onem);
                                        }else if(k==cmonth2){
                                            var lastDate = new Date(re.split('-')[0], re.split('-')[1], 0).getDate();
                                            var onem = roundToOneDecimalPlace(parseInt(pdan)/lastDate);
                                            if((y+1)>=bcode_sale_cnt[di_cnt]&&bcode_sale_cnt[di_cnt]!=0){
                                                dm+=parseInt(parseInt(re.split('-')[2])*onem)/2;
                                            }else{
                                                dm+=parseInt(re.split('-')[2])*onem;
                                            }
                                            // dm+=parseInt(parseInt(re.split('-')[2])*onem);
                                        }else{
                                            if((y+1)>=bcode_sale_cnt[di_cnt]&&bcode_sale_cnt[di_cnt]!=0){
                                                    dm+=parseInt(pdan)/2;
                                                }else{
                                                    dm+=parseInt(pdan);
                                                }
                                            // dm+=parseInt(dan);

                                        }
                                    }
                                    if(zero_money_chk==1){
                                        alldm_r += Math.floor(parseInt(dm)/10)*10;
                                        alldm2_r += Math.floor((parseInt(dm)*(sale))/10)*10;
                                    }else{
                                        alldm_r += dm;
                                        alldm2_r += parseInt(parseInt(dm)*(sale));
                                    }
                                    payment_product_arr.push(pname);
                                    payment_product_arr2.push(pname2);
                                    //pdfstr1 += "<tr class='addpdf' height=47 style='mso-height-source:userset;height:35.25pt'><td colspan=3 height=47 class='xl368' style='border-right:1.0pt solid black; border-top:none;'>"+$('.'+targetclass+' .pdfname').eq(i).text()+"</td><td class='xl368' style='border-right:1.0pt solid black;border-top:none;border-left:none'>"+$('.'+targetclass+' .pdfname2').eq(i).text()+"</td><td class='xl368' style='border-right:1.0pt solid black;border-top:none;border-left:none'>"+$('.'+targetclass+' .pdfcode').eq(i).text()+"</td><td colspan=2 class='xl368' width=171 style='border-right:1.0pt solid black;border-top:none;border-left:none'>"+$('.'+targetclass+' .bcodeinput').eq(i).val()+"</td><td class='xl368' style='border-right:1.0pt solid black;border-top:none;border-left:none'>"+rentstartResult[y]+"</td><td class='xl368' style='border-right:1.0pt solid black;border-top:none;border-left:none'>~</td><td class='xl368' style='border-right:1.0pt solid black;border-top:none;border-left:none'>"+rentendResult[y]+"</td><td class='xl368' style='border-right:1.0pt solid black;border-top:none;border-left:none'>"+parseInt(dm).toLocaleString()+"원</td><td class='xl368 sdate' style='border-right:1.0pt solid black;border-right:1.0pt solid black;border-top:none;border-left:none'>"+parseInt(parseInt(dm)*(parseInt(psale)/100)).toLocaleString()+"원</td></tr>";
                                    pdfstr1_2_r += "<tr class='addpdf'><td class='tg-c3ow'>"+pname+"</td><td class='tg-c3ow'>"+pname2+"</td><td class='tg-c3ow'>"+pcode+"</td><td class='tg-c3ow'>"+bcode[index]+"</td><td class='tg-c3ow'>"+rentstartResult[rent_cnt][y]+"</td><td class='tg-c3ow'>~<br/></td><td class='tg-c3ow'>"+rentendResult[rent_cnt][y]+"</td><td class='tg-c3ow'>"+((zero_money_chk==1)?(Math.floor(parseInt(dm)/10)*10).toLocaleString():parseInt(dm).toLocaleString())+"원</td><td class='tg-c3ow sdate'>"+((zero_money_chk==1)?(Math.floor(parseInt(parseInt(dm)*(sale))/10)*10).toLocaleString():parseInt(parseInt(dm)*(sale)).toLocaleString())+"원</td></tr>";
                                    if(bcode_sale_date.length>1&&index_==1){
                                        bcode_sale_cnt[di_cnt] = bcode_sale_origin;
                                    }
                                }
                                // di_cnt++; 
                                //rent_cnt++;
                                // if(rent_cnt[index2]==1)rent_cnt++;
                            }
                            index++;
                            
                        });
                        if(otr_rent_chk[index2]==1){
                            rent_cnt++;
                            di_cnt++; 
                        }
                    });

                    rent_cnt = 0;
                    index = 0;
                    di_cnt = 0;
                    otr_product.forEach(function(obj2,index2){
                        let pcode_pname = obj2.replace(/((블루,레드)|(네이비,베이지))/g,'').replace(/\(오션블루, 버건디\)/g,'').split(',');
                        pcode_pname.forEach(function(obj,index_){
                            pcode=obj.split('|')[0];
                            pname2=obj.split('|')[1];
                            let pname = '';
                            let pdan = '';
                            if(order_print_product_all[pcode].target=='구입'||order_print_product_all[pcode].target=='구입 또는 대여'){
                                pname = order_print_product_buy[pcode].split("|")[0];
                                pdan = parseInt(order_print_product_buy[pcode].split("|")[2]);
                                let buy_m = (parseInt(pdan*sale)*parseInt(buycnt[index]));
                                if(zero_money_chk==1){
                                    // buy_m = Math.floor((parseInt(pdan*sale)*parseInt(buycnt[index]))/10)*10;
                                    buy_m = Math.floor(parseInt(pdan*(sale))/10)*10 * parseInt(buycnt[index]);

                                }
                                pdfstr1_3 += "<tr class='addpdf' style='height:40px;'><td height=32 class='tg-nrix'>판매</td><td class='tg-nrix'>"+pname+"</td><td class='tg-nrix'>"+pname2.replace('(네이비,베이지)','')+"</td><td class='tg-nrix'>"+pcode+"</td><td class='tg-nrix'>"+cancled+"</td><td class='tg-nrix'>"+(parseInt(pdan)*parseInt(buycnt[index])).toLocaleString()+"</td><td class='tg-nrix'>"+buy_m.toLocaleString()+"</td><td class='tg-nrix'></td></tr>";

                            }else if(order_print_product_all[pcode].target=='대여'){
                                for(var index_plist=0; index_plist<order_print_plist_obj.plistdic_rent[pcode].length; index_plist++){
                                    let obj_dan = order_print_plist_obj.plistdic_rent[pcode][index_plist].split("|")[0];
                                    let obj_date = order_print_plist_obj.plistdic_rent[pcode][index_plist].split("|")[1];
                                    if(new Date(obj_date) < new Date(cancled)){
                                        pdan = obj_dan;
                                        //console.log(obj_dan, pdan, obj_date, cdate, index);
                                        break
                                    }
                                }
                                pname = order_print_product_all[pcode].name;
                                // pdan = parseInt(order_print_product_all[pcode].rentprice);
                                /*--------------------------------------------------------*
                //             // 제품설치대장 ROW 추가
                //             *--------------------------------------------------------*/
                                for(var y=0; y<di_arr[di_cnt]; y++){
                                    var dm = 0;
                                    var rs = rentstartResult[rent_cnt][y];
                                    var re = rentendResult[rent_cnt][y];
                                    // var dif = new Date(re.split('-')[0]+'-'+re.split('-')[1]+'-'+re.split('-')[2]) - new Date(rs.split('-')[0]+'-'+rs.split('-')[1]+'-01');
                                    // var cDay = 24 * 60 * 60 * 1000;// 시 * 분 * 초 * 밀리세컨
                                    // var cMonth = cDay * 30;// 월 만듬
                                    // var cmonth2 = (parseInt(dif/cMonth)+1);
                                    let cmonth2 = monthsBetweenDates(rs.split('-')[0]+'-'+rs.split('-')[1]+'-01',re.split('-')[0]+'-'+re.split('-')[1]+'-01');
                                    let bcode_sale_origin = bcode_sale_cnt[di_cnt];
                                    if(bcode_sale_date.length>1&&index_==1){
                                        bcode_sale_cnt[di_cnt] = 0;
                                    }
                                    for(var k=1; k<=cmonth2; k++){
                                        if(k==1){
                                            var lastDate = new Date(rs.split('-')[0], rs.split('-')[1], 0).getDate();
                                            var onem = parseInt(pdan)/lastDate;
                                            let sm2 = 0;
                                            var sm = lastDate-parseInt(rs.split('-')[2])+1;
                                            if((rs.split('-')[0]+rs.split('-')[1])==(re.split('-')[0]+re.split('-')[1])){
                                                sm2 = lastDate-parseInt(re.split('-')[2]);
                                            }
                                            if((y+1)>=bcode_sale_cnt[di_cnt]&&bcode_sale_cnt[di_cnt]!=0){
                                                
                                                dm+=parseInt((sm-sm2)*onem)/2;
                                            }else{
                                                dm+=(sm-sm2)*onem;
                                            }
                                            
                                        }else if(k==cmonth2){
                                            var lastDate = new Date(re.split('-')[0], re.split('-')[1], 0).getDate();
                                            var onem = roundToOneDecimalPlace(parseInt(pdan)/lastDate);
                                            if((y+1)>=bcode_sale_cnt[di_cnt]&&bcode_sale_cnt[di_cnt]!=0){
                                                dm+=parseInt(parseInt(re.split('-')[2])*onem)/2;
                                            }else{
                                                dm+=parseInt(re.split('-')[2])*onem;
                                            }
                                            
                                        }else{
                                            if((y+1)>=bcode_sale_cnt[di_cnt]&&bcode_sale_cnt[di_cnt]!=0){
                                                dm+=parseInt(pdan)/2;
                                            }else{
                                                dm+=parseInt(pdan);
                                            }
                                            

                                        }

                                    }
                                    alldm3 += dm;
                                    alldm4 += parseInt(parseInt(dm)*sale);
                                    pdfstr1_3 += "<tr class='addpdf' style='height:40px;'><td height=32 class='tg-nrix'>대여</td><td class='tg-nrix'>"+pname+"</td><td class='tg-nrix'>"+pname2+"</td><td class='tg-nrix'>"+pcode+"</td><td class='tg-nrix'>"+rentstartResult[rent_cnt][y]+"~"+rentendResult[rent_cnt][y]+"</td><td class='tg-nrix pdfstr_custum_dan'>"+((zero_money_chk==1)?(Math.floor(parseInt(dm)/10)*10).toLocaleString():parseInt(dm).toLocaleString())+"</td><td class='tg-nrix pdfstr_custum_buy'>"+((zero_money_chk==1)?(Math.floor(parseInt(parseInt(dm)*(sale))/10)*10).toLocaleString():parseInt(parseInt(dm)*(sale)).toLocaleString())+"</td><td class='tg-nrix'></td></tr>";
                                    if(bcode_sale_date.length>1&&index_==1){
                                        bcode_sale_cnt[di_cnt] = bcode_sale_origin;
                                    }
                                }
                            //     di_cnt++;
                            //    //rent_cnt++;
                            //    if(rent_cnt[index2]==1)rent_cnt++;
                            }
                            index++;
                            
                        });
                        if(otr_rent_chk[index2]==1){
                            rent_cnt++;
                            di_cnt++; 
                        }
                    });
            //     }else{
            //         let pcode = '';
            //         let pname = '';
            //         let pname2 = '';
            //         let dan = '';
            //         let bcode_sale_date = '';
            //         pcode_pname.forEach(function(obj,index){
            //             pcode=obj.split('|')[0];
            //             pname2=obj.split('|')[1];
            //             pname = order_print_product_rent[pcode].split("|")[0];
            //             dan = order_print_product_rent[pcode].split("|")[2];
            //             let salecnt = 5;
            //             if(pname=='전동침대')salecnt=10;
            //             else if(pname=='욕창예방 매트리스')salecnt=3;
            //             let newsaledates = new Date(bcodesalearr[pcode+"|"+bcode[0]]);
            //             newsaledates.setFullYear(newsaledates.getFullYear() + salecnt);
            //             newsaledates.setDate(newsaledates.getDate() - 1);
            //             bcode_sale_date = dateFormat(newsaledates);

            //         });
                    
            //         let datenowarr = otr_data.datenow.replace(/(\[|\]|\'|\|| |&#39|\;)/g,'').split('~');
            //         let nextdatearr =  otr_data.nextdate.replace(/(\[|\]|\'|\|| |&#39|\;)/g,'').split(',');
            //         if(rentstart!=''&&pcode!=''&&pname!=''){
            //             let bon = dan*sale;
            //             let gong = dan-bon;
            //             /*--------------------------------------------------------*
            //             // 전체 대여기간 급여제공기록지 생성
            //             *--------------------------------------------------------*/
            //             if(new Date(rentend)>new Date(datenowarr[1])){
            //                 if(new Date(rentstart)<new Date(datenowarr[1])){
            //                     if(bcode_sale_date!=''){
            //                         if(new Date(bcode_sale_date)>new Date(rentstart)){
            //                             if(new Date(datenowarr[1])>new Date(bcode_sale_date)){
            //                                 di++;
            //                                 bcode_sale_cnt = di;
            //                                 rentendResult.push(bcode_sale_date);
            //                                 rentstartResult.push(rentstart);
            //                                 let bocde_sale_date_plus = new Date(new Date(bcode_sale_date).setDate(new Date(bcode_sale_date).getDate() + 1));
            //                                 let bocde_sale_year = bocde_sale_date_plus.getFullYear();
            //                                 let bocde_sale_month = ('0' + (bocde_sale_date_plus.getMonth() + 1)).slice(-2);
            //                                 let bocde_sale_day = bocde_sale_date_plus.getDate() > 9 ? '' + bocde_sale_date_plus.getDate() : '0' + bocde_sale_date_plus.getDate();
            //                                 rentstart = bocde_sale_year + "-" + bocde_sale_month + "-" + bocde_sale_day;
            //                             }
            //                         }else{
            //                             bcode_sale_cnt = di;
            //                         }
            //                     }
            //                     di++;
            //                     rentendResult.push(datenowarr[1]);
            //                     rentstartResult.push(rentstart);
            //                 }
            //                 var nextdatearrLength = nextdatearr.length;
            //                 for (var i = nextdatearrLength - 1; i >= 0; i--) {
            //                     var nextdate = nextdatearr[i].split('~');
            //                     rentstartResult.push(nextdate[0]);
            //                     if (new Date(rentend) > new Date(nextdate[1])) {
            //                         if(bcode_sale_date!=''&&bcode_sale_cnt==0){
            //                             if(new Date(bcode_sale_date)>new Date(nextdate[0])){
            //                                 if(new Date(nextdate[1])>new Date(bcode_sale_date)){
            //                                     di++;
            //                                     bcode_sale_cnt = di;
            //                                     rentendResult.push(bcode_sale_date);
            //                                     // rentstartResult.push(nextdate[0]);
            //                                     let bocde_sale_date_plus = new Date(new Date(bcode_sale_date).setDate(new Date(bcode_sale_date).getDate() + 1));
            //                                     let bocde_sale_year = bocde_sale_date_plus.getFullYear();
            //                                     let bocde_sale_month = ('0' + (bocde_sale_date_plus.getMonth() + 1)).slice(-2);
            //                                     let bocde_sale_day = bocde_sale_date_plus.getDate() > 9 ? '' + bocde_sale_date_plus.getDate() : '0' + bocde_sale_date_plus.getDate();
            //                                     let rentstart = bocde_sale_year + "-" + bocde_sale_month + "-" + bocde_sale_day;
            //                                     rentstartResult.push(rentstart);
            //                                 }
            //                             }else{
            //                                 bcode_sale_cnt = di;
            //                             }
            //                         }
            //                         di++;
            //                         rentendResult.push(nextdate[1]);
            //                     } else {
            //                         if(bcode_sale_date!=''&&bcode_sale_cnt==0){
            //                             console.log("bcode_sale_sestest")
            //                             if(new Date(bcode_sale_date)>new Date(nextdate[0])){
            //                                 console.log("bcode_sale_sestest",nextdate[1])
            //                                 if(new Date(nextdate[1])>new Date(bcode_sale_date)&&new Date(rentend)>new Date(bcode_sale_date)){
            //                                     console.log("bcode_sale_cnt+++")
            //                                     di++;
            //                                     bcode_sale_cnt = di;
            //                                     rentendResult.push(bcode_sale_date);
            //                                     // rentstartResult.push(nextdate[0]);
            //                                     let bocde_sale_date_plus = new Date(new Date(bcode_sale_date).setDate(new Date(bcode_sale_date).getDate() + 1));
            //                                     let bocde_sale_year = bocde_sale_date_plus.getFullYear();
            //                                     let bocde_sale_month = ('0' + (bocde_sale_date_plus.getMonth() + 1)).slice(-2);
            //                                     let bocde_sale_day = bocde_sale_date_plus.getDate() > 9 ? '' + bocde_sale_date_plus.getDate() : '0' + bocde_sale_date_plus.getDate();
            //                                     let rentstart = bocde_sale_year + "-" + bocde_sale_month + "-" + bocde_sale_day;
            //                                     rentstartResult.push(rentstart);
            //                                 }
            //                             }else{
                                            
            //                                 bcode_sale_cnt = di;
            //                             }
            //                         }
            //                         rentendResult.push(rentend);
            //                         break;
            //                     }
            //                 }
            //             }else{
            //                 if(bcode_sale_date!=''){
            //                     if(new Date(bcode_sale_date)>new Date(rentstart)){
            //                         if(new Date(datenowarr[1])>new Date(bcode_sale_date)&&new Date(rentend)>new Date(bcode_sale_date)){
            //                             di++;
            //                             bcode_sale_cnt = di;
            //                             rentendResult.push(bcode_sale_date);
            //                             rentstartResult.push(rentstart);
            //                             let bocde_sale_date_plus = new Date(new Date(bcode_sale_date).setDate(new Date(bcode_sale_date).getDate() + 1));
            //                             let bocde_sale_year = bocde_sale_date_plus.getFullYear();
            //                             let bocde_sale_month = ('0' + (bocde_sale_date_plus.getMonth() + 1)).slice(-2);
            //                             let bocde_sale_day = bocde_sale_date_plus.getDate() > 9 ? '' + bocde_sale_date_plus.getDate() : '0' + bocde_sale_date_plus.getDate();
            //                             rentstart = bocde_sale_year + "-" + bocde_sale_month + "-" + bocde_sale_day;
            //                         }
            //                     }else{
            //                         bcode_sale_cnt = di;
            //                     }
            //                 }
            //                 rentendResult.push(rentend);
            //                 rentstartResult.push(rentstart)
            //             }
            //             /*--------------------------------------------------------*
            //             // 당월 대여기간 급여제공기록지 생성
            //             *--------------------------------------------------------*/
            //             // if(new Date(rentstart)<new Date(year + '-' + mon + '-' + '01')){
            //             //     rentstartResult.push(year + '-' + mon + '-' + '01');
            //             // }else{
            //             //     rentstartResult.push(rentstart);
            //             // }

            //             // if(new Date(rentend)>new Date(last_chan_val)){
            //             //     rentendResult.push(last_chan_val);
            //             // }else{
            //             //     rentendResult.push(rentend);
            //             // }

            //             /*--------------------------------------------------------*
            //             // 급여제공기록지 ROW 추가
            //             *--------------------------------------------------------*/
            //             console.log(di,rentendResult,rentstartResult)
            //             let price_dan_copy = 0;
            //             let price_buy_copy = 0;
            //             let price_gong_copy = 0;
            //             let price_dan = parseInt(dan);
            //             for(var y=0; y<di; y++){
            //                 var dm = 0;
            //                 var rs = rentstartResult[y];
            //                 var re = rentendResult[y];
                            
            //                 var dif = new Date(re.split('-')[0]+'-'+re.split('-')[1]+'-01') - new Date(rs.split('-')[0]+'-'+rs.split('-')[1]+'-01');
            //                 var cDay = 24 * 60 * 60 * 1000;// 시 * 분 * 초 * 밀리세컨
            //                 var cMonth = cDay * 30;// 월 만듬
            //                 var cmonth2 = (parseInt(dif/cMonth)+1);
            //                 console.log("bcoce:",(y+1),' ',bcode_sale_cnt)
            //                 if((y+1)>=bcode_sale_cnt&&bcode_sale_cnt!=0){
            //                     price_dan_copy = parseInt(price_dan/2);
            //                 }else{
            //                     price_dan_copy = price_dan;
            //                 }
            //                 for(var k=1; k<=cmonth2; k++){

            //                     if(k==1){
            //                         var lastDate = new Date(rs.split('-')[0], rs.split('-')[1], 0).getDate();
            //                         var onem = parseInt(dan)/lastDate;
            //                         let sm2 = 0;
            //                         var sm = lastDate-parseInt(rs.split('-')[2])+1;
            //                         if((rs.split('-')[0]+rs.split('-')[1])==(re.split('-')[0]+re.split('-')[1])){
            //                             sm2 = lastDate-parseInt(re.split('-')[2]);
            //                         }
            //                         if((y+1)>=bcode_sale_cnt&&bcode_sale_cnt!=0){
                                        
            //                             dm+=parseInt((sm-sm2)*onem)/2;
            //                         }else{
            //                             dm+=parseInt((sm-sm2)*onem);
            //                         }
                                    
            //                     }else if(k==cmonth2){
            //                         var lastDate = new Date(re.split('-')[0], re.split('-')[1], 0).getDate();
            //                         var onem = parseInt(dan)/lastDate;
            //                         if((y+1)>=bcode_sale_cnt&&bcode_sale_cnt!=0){
            //                             dm+=parseInt(parseInt(re.split('-')[2])*onem)/2;
            //                         }else{
            //                             dm+=parseInt(parseInt(re.split('-')[2])*onem);
            //                         }
                                    
            //                     }else{
            //                         if((y+1)>=bcode_sale_cnt&&bcode_sale_cnt!=0){
            //                             dm+=parseInt(dan)/2;
            //                         }else{
            //                             dm+=parseInt(dan);
            //                         }
                                    

            //                     }

            //                 }

            //                 pdfdantotal += dm;
            //                 pdfbuytotal += parseInt(parseInt(dm)*(sale));
            //                 pdfgongtotal += parseInt(parseInt(dm)*(1-(sale)));
            //                 pdfstr1 += "<tr class='addpdf' style='height:40px;'><td class='br bl bd'>"+pname+"</td><td class='br bd'>"+pname2+"</td><td class='br bd'>"+pcode+"</td><td class='br bd'>"+parseInt(price_dan_copy).toLocaleString()+"</td><td class='br bd'>"+rentstartResult[y]+"~<br/>"+rentendResult[y]+"</td><td class='br bd'><textarea class='pdfstr_custum pdfstr_custum_dan' onchange='textarea_change(this)'>"+parseInt(dm).toLocaleString()+"</textarea></td><td class='br bd'><textarea class='pdfstr_custum pdfstr_custum_buy' onchange='textarea_change(this)'>"+parseInt(parseInt(dm)*(sale)).toLocaleString()+"</textarea></td><td class='br bd'><textarea class='pdfstr_custum pdfstr_custum_gong' onchange='textarea_change(this)'>"+parseInt(parseInt(dm)*(1-sale)).toLocaleString()+"</textarea></td></tr>";

            //                 // pdfstr1 += "<tr class='addpdf' style='height:40px;'><td class='br bl bd'>"+pname+"</td><td class='br bd'>"+pname2+"</td><td class='br bd'>"+pcode+"</td><td class='br bd'>"+parseInt(price_dan_copy).toLocaleString()+"</td><td class='br bd'>"+parseInt(price_buy_copy).toLocaleString()+"</td><td class='br bd'>"+parseInt(price_gong_copy).toLocaleString()+"</td><td class='br bd'>"+rentstartResult[y]+"~"+rentendResult[y]+"</td></tr>";
            //             }    
            //             /*--------------------------------------------------------*
            //             // 공급계약서 ROW 추가
            //             *--------------------------------------------------------*/
            //             let payment_product_arr = [];
            //             let payment_product_arr2 = [];
            //             for(var y=0; y<di; y++){
            //                 let dm = 0;
            //                 let rs = rentstartResult[y];
            //                 let re = rentendResult[y];
            //                 let dif = new Date(re.split('-')[0]+'-'+re.split('-')[1]+'-01') - new Date(rs.split('-')[0]+'-'+rs.split('-')[1]+'-01');
            //                 let cDay = 24 * 60 * 60 * 1000;// 시 * 분 * 초 * 밀리세컨
            //                 let cMonth = cDay * 30;// 월 만듬
            //                 let cmonth2 = (parseInt(dif/cMonth)+1);
            //                 for(var k=1; k<=cmonth2; k++){
            //                     //console.log(k);
            //                     if(k==1){
            //                         var lastDate = new Date(rs.split('-')[0], rs.split('-')[1], 0).getDate();
            //                         var onem = parseInt(dan)/lastDate;
            //                         var sm = lastDate-parseInt(rs.split('-')[2])+1;
            //                         let sm2 = 0;
            //                         var sm = lastDate-parseInt(rs.split('-')[2])+1;
            //                         if((rs.split('-')[0]+rs.split('-')[1])==(re.split('-')[0]+re.split('-')[1])){
            //                             sm2 = lastDate-parseInt(re.split('-')[2]);
            //                         }
            //                         if((y+1)>=bcode_sale_cnt&&bcode_sale_cnt!=0){
                                        
            //                             dm+=parseInt((sm-sm2)*onem)/2;
            //                         }else{
            //                             dm+=parseInt((sm-sm2)*onem);
            //                         }
            //                         // dm+=parseInt((sm-sm2)*onem);
            //                     }else if(k==cmonth2){
            //                         var lastDate = new Date(re.split('-')[0], re.split('-')[1], 0).getDate();
            //                         var onem = parseInt(dan)/lastDate;
            //                         if((y+1)>=bcode_sale_cnt&&bcode_sale_cnt!=0){
            //                             dm+=parseInt(parseInt(re.split('-')[2])*onem)/2;
            //                         }else{
            //                             dm+=parseInt(parseInt(re.split('-')[2])*onem);
            //                         }
            //                         // dm+=parseInt(parseInt(re.split('-')[2])*onem);
            //                     }else{
            //                         if((y+1)>=bcode_sale_cnt&&bcode_sale_cnt!=0){
            //                                 dm+=parseInt(dan)/2;
            //                             }else{
            //                                 dm+=parseInt(dan);
            //                             }
            //                         // dm+=parseInt(dan);

            //                     }
            //                 }
            //                 alldm += dm;
            //                 alldm2 += parseInt(parseInt(dm)*(sale));
            //                 payment_product_arr.push(pname);
            //                 payment_product_arr2.push(pname2);
            //                 //pdfstr1 += "<tr class='addpdf' height=47 style='mso-height-source:userset;height:35.25pt'><td colspan=3 height=47 class='xl368' style='border-right:1.0pt solid black; border-top:none;'>"+$('.'+targetclass+' .pdfname').eq(i).text()+"</td><td class='xl368' style='border-right:1.0pt solid black;border-top:none;border-left:none'>"+$('.'+targetclass+' .pdfname2').eq(i).text()+"</td><td class='xl368' style='border-right:1.0pt solid black;border-top:none;border-left:none'>"+$('.'+targetclass+' .pdfcode').eq(i).text()+"</td><td colspan=2 class='xl368' width=171 style='border-right:1.0pt solid black;border-top:none;border-left:none'>"+$('.'+targetclass+' .bcodeinput').eq(i).val()+"</td><td class='xl368' style='border-right:1.0pt solid black;border-top:none;border-left:none'>"+rentstartResult[y]+"</td><td class='xl368' style='border-right:1.0pt solid black;border-top:none;border-left:none'>~</td><td class='xl368' style='border-right:1.0pt solid black;border-top:none;border-left:none'>"+rentendResult[y]+"</td><td class='xl368' style='border-right:1.0pt solid black;border-top:none;border-left:none'>"+parseInt(dm).toLocaleString()+"원</td><td class='xl368 sdate' style='border-right:1.0pt solid black;border-right:1.0pt solid black;border-top:none;border-left:none'>"+parseInt(parseInt(dm)*(parseInt(psale)/100)).toLocaleString()+"원</td></tr>";
            //                 pdfstr1_2 += "<tr class='addpdf'><td class='tg-c3ow'>"+pname+"</td><td class='tg-c3ow'>"+pname2+"</td><td class='tg-c3ow'>"+pcode+"</td><td class='tg-c3ow'>"+bcode+"</td><td class='tg-c3ow'>"+rentstartResult[y]+"</td><td class='tg-c3ow'>~</td><td class='tg-c3ow'>"+rentendResult[y]+"</td><td class='tg-c3ow'>"+parseInt(dm).toLocaleString()+"원</td><td class='tg-c3ow sdate'>"+parseInt(parseInt(dm)*(sale)).toLocaleString()+"원</td></tr>";
            //             }
            //             console.log("????")
            //             /*--------------------------------------------------------*
            //             // 제품설치대장 ROW 추가
            //             *--------------------------------------------------------*/
            //             for(var y=0; y<di; y++){
            //                 var dm = 0;
            //                 var rs = rentstartResult[y];
            //                 var re = rentendResult[y];
            //                 var dif = new Date(re.split('-')[0]+'-'+re.split('-')[1]+'-01') - new Date(rs.split('-')[0]+'-'+rs.split('-')[1]+'-01');
            //                 var cDay = 24 * 60 * 60 * 1000;// 시 * 분 * 초 * 밀리세컨
            //                 var cMonth = cDay * 30;// 월 만듬
            //                 var cmonth2 = (parseInt(dif/cMonth)+1);
            //                 for(var k=1; k<=cmonth2; k++){
            //                     if(k==1){
            //                         var lastDate = new Date(rs.split('-')[0], rs.split('-')[1], 0).getDate();
            //                         var onem = parseInt(dan)/lastDate;
            //                         let sm2 = 0;
            //                         var sm = lastDate-parseInt(rs.split('-')[2])+1;
            //                         if((rs.split('-')[0]+rs.split('-')[1])==(re.split('-')[0]+re.split('-')[1])){
            //                             sm2 = lastDate-parseInt(re.split('-')[2]);
            //                         }
            //                         if((y+1)>=bcode_sale_cnt&&bcode_sale_cnt!=0){
                                        
            //                             dm+=parseInt((sm-sm2)*onem)/2;
            //                         }else{
            //                             dm+=parseInt((sm-sm2)*onem);
            //                         }
                                    
            //                     }else if(k==cmonth2){
            //                         var lastDate = new Date(re.split('-')[0], re.split('-')[1], 0).getDate();
            //                         var onem = parseInt(dan)/lastDate;
            //                         if((y+1)>=bcode_sale_cnt&&bcode_sale_cnt!=0){
            //                             dm+=parseInt(parseInt(re.split('-')[2])*onem)/2;
            //                         }else{
            //                             dm+=parseInt(parseInt(re.split('-')[2])*onem);
            //                         }
                                    
            //                     }else{
            //                         if((y+1)>=bcode_sale_cnt&&bcode_sale_cnt!=0){
            //                             dm+=parseInt(dan)/2;
            //                         }else{
            //                             dm+=parseInt(dan);
            //                         }
                                    

            //                     }

            //                 }
            //                 alldm3 += dm;
            //                 alldm4 += parseInt(parseInt(dm)*sale);
            //                 pdfstr1_3 += "<tr class='addpdf' style='height:40px;'><td height=32 class='tg-nrix'>대여</td><td class='tg-nrix'>"+pname+"</td><td class='tg-nrix'>"+pname2+"</td><td class='tg-nrix'>"+pcode+"</td><td class='tg-nrix'>"+rentstartResult[y]+"</td><td class='tg-nrix'>"+rentendResult[y]+"</td><td class='tg-nrix pdfstr_custum_dan'>"+parseInt(dm).toLocaleString()+"</td><td class='tg-nrix pdfstr_custum_buy'>"+parseInt(parseInt(dm)*(sale)).toLocaleString()+"</td><td class='tg-nrix'></td></tr>";
            //             }                    
            //     }
            // }

            otr_product.forEach(function(obj2,index2){
                let pcode_pname = obj2.replace(/((블루,레드)|(네이비,베이지))/g,'').replace(/\(오션블루, 버건디\)/g,'').split(',');
                pcode_pname.forEach(function(obj,index_){
                    pcode=obj.split('|')[0];
                    pname2=obj.split('|')[1];
                    let pname = order_print_product[pcode].split("|")[0];
                    payment_str += pname+'&nbsp;'+pname2+'<br/>';
                });
            });
                    let print_chk_box_cnt = 0;
                    let ionContents_length = 1;
                    // if(otr_data.rentproduct=='')ionContents_length = 2;
                    ionContents_length = 2;

                    for(var i=ionContents.length-ionContents_length; i>=0; i--){
//                         //console.log('lado')
//                         console.log("///");
                        // if(otr_data.rentproduct!=''&&i==5)continue;
                        // if(otr_data.rentproduct!=''&&i==1)continue;
                        // if(i==5)continue;
                        // if(i==1)continue;
                        if(i==2)continue;
                        // if(otr_data.rentproduct==''&&i==2)continue;
                        if($('.print_chk_box').eq(print_chk_box_cnt).is(":checked")){
                            /*======공통정보*/
                            let name_html_all = ionContents[i].contentDocument.querySelectorAll('.name');
                            name_html_all.forEach(function(obj,index){
                                obj.innerHTML = name;
                            });
                        
                            ionContents[i].contentDocument.querySelector('.number').innerHTML = number;
                            let company_html_all = ionContents[i].contentDocument.querySelectorAll('.company');
                            
                            /*======공통정보*/
                            
                            if(i!=1&&i!=0&&i!=2){
                                ionContents[i].contentDocument.querySelector('.regident').innerHTML = regident;
                                // ionContents[i].contentDocument.querySelector('.target').innerHTML = target + sale +"%";
//                                 // ionContents.querySelector('.target2').innerHTML = sale;
                                // ionContents[i].contentDocument.querySelector('.ranker').innerHTML = ranker;
//                                 //let addpdfElement = ionContents.querySelector('.addpdf');
                            
//                                 // addpdfElement && addpdfElement.remove();
                                // ionContents[i].contentDocument.querySelector('.address').innerHTML = address;
                            }
                            $('.ion').contents().find('.addpdf').remove();
                            $('.ion').contents().find('.addpdf2').remove();
                                if(i==5||i==6){
                                    $('.ion').contents().find('.zero_format').remove();
                                    if("<%=company%>"=="섬김복지용구지원센터"||"<%=company%>"=="토마토의료기"||"<%=company%>"=="우리집의료기 복지용구"){
                                        $('.ion').contents().find('.client_num_area').show();
                                        $('.ion').contents().find('.client_num').html(page_cnum_data[number]);
                                    }else if("<%=company%>"=="콤슨경기사업소"||"<%=company%>"=="케어팜"){
                                        $('.ion').contents().find('.qr_custum').show();
                                        $('.ion').contents().find('.qr_custum2').show();
                                    }else if("<%=company%>"=="건강100세"||"<%=company%>"=="건강한가족의료기"||"<%=company%>"=="건강100세 의료기"||"<%=company%>"=="건강한복지용구"){
                                        $('.ion').contents().find('.gungang_custum').show();
                                        $('.ion').contents().find('.pdfday_origin').hide();
                                    }
                                    if(buycnt_b.length>0&&buycnt_r.length>0){
                                        ionContents[i].contentDocument.querySelector('.file_type').innerHTML = '구입/대여';
                                    }else if(buycnt_r.length==0){
                                        ionContents[i].contentDocument.querySelector('.file_type').innerHTML = '구입'
                                    }else if(buycnt_b.length==0){
                                        ionContents[i].contentDocument.querySelector('.file_type').innerHTML = '대여'
                                    }
                                    var option1Radio = ionContents[i].contentDocument.querySelector('#option1');
                                    var option2Radio = ionContents[i].contentDocument.querySelector('#option2');
                                    if (option1Radio) {
                                        var checkboxInput = document.createElement('input');
                                        checkboxInput.setAttribute('type', 'checkbox');
                                        checkboxInput.setAttribute('name', option1Radio.getAttribute('name'));
                                        checkboxInput.setAttribute('value', option1Radio.getAttribute('value'));
                                        checkboxInput.setAttribute('checked', option1Radio.checked);
                                        option1Radio.parentNode.replaceChild(checkboxInput, option1Radio);
                                    }
                                    if (option2Radio) {
                                        option2Radio.removeAttribute('id');
                                    }

                                    // $('.ion').contents().find('#option1').prop("checked",true);
                                    let pdfadd = '.pdfadd';
                                    // if(otr_data.rentproduct!='')pdfadd = '.pdfadd2';
                                    ionContents[i].contentDocument.querySelector('div').classList.remove('mbody');
                                    
                                    company_html_all.forEach(function(obj,index){
                                        obj.innerHTML = "<%=company%>";
                                    });
                                    ionContents[i].contentDocument.querySelector('.target').innerHTML = target + otr_data.sale +" " + ranker;
                                    ionContents[i].contentDocument.querySelector('.companynum').innerHTML=companynumber;
//                                     $('.ion').contents().find('.zero_format').remove();
                                    ionContents[i].contentDocument.querySelector('.pdfguardname').innerHTML = guardname;
                                    if (guardtarget === '본인') ionContents[i].contentDocument.querySelector('.pdfguardname').innerHTML = name;
                                    ionContents[i].contentDocument.querySelector('.pdfguardtarget').innerHTML = guardtarget;
                                    // ionContents[i].contentDocument.querySelector('.manager').innerHTML = manager;
                                    ionContents[i].contentDocument.querySelector('.ceo').innerHTML = manager;
                                    if("<%=company%>"=="도우누리복지용구"){
                                        ionContents[i].contentDocument.querySelector('.ceo').innerHTML = "조남식";
                                    }else if('<%=company%>'=="한마음방문요양센터"){
                                        ionContents[i].contentDocument.querySelector('.ceo').innerHTML = "박장순";
                                    }
                                    ionContents[i].contentDocument.querySelector(pdfadd).insertAdjacentHTML('afterend', pdfstr1);
//                                     ionContents[i].contentDocument.querySelector('.pdfdantotal').innerHTML=pdfdantotal.toLocaleString();
//                                     ionContents[i].contentDocument.querySelector('.pdfbuytotal').innerHTML=pdfbuytotal.toLocaleString();
//                                     ionContents[i].contentDocument.querySelector('.pdfgongtotal').innerHTML=pdfgongtotal.toLocaleString();
                                    if (guardname === 'undefined' || guardname === 'null') ionContents[i].contentDocument.querySelector('.pdfguardname').innerHTML = name;
                                    if (guardtarget === 'undefined' || guardtarget === 'null') ionContents[i].contentDocument.querySelector('.pdfguardtarget').innerHTML = '본인';
                                    ionContents[i].contentDocument.querySelector('.pdfday').innerHTML = order_date;
                                    let topcm = '-20';
                                    let tcls = 'basic';
                                    let pdfstr2 = '<span class="' + tcls + ' msg_sign" style="position: absolute; z-index: 999; right:0px; top:' + topcm + 'px;"><image style="width:110px; -webkit-user-drag: none;" src="/signfiles/' + number + '/<%=company%>" onerror="this.style.display=\'none\'"></span>';
                                    let pdfstr3 = '<span class="msg_sign" style="position: absolute; right:0px; top:-15px;"><image style="width:60px; -webkit-user-drag: none;" src="/companystamp/<%=company.replace(/ /g,"%20")%>" onerror="this.style.display=\'none\'"></span>';
                                    // ionContents.querySelector('.pdfsign').innerHTML = ''; // 이 줄은 주석 처리된 것으로 추측되어 제외했습니다.
                                    let pdfSignElement = ionContents[i].contentDocument.querySelector('.pdfsign');
                                    while (pdfSignElement.firstChild) {
                                        pdfSignElement.removeChild(pdfSignElement.firstChild);
                                    }
                                    let pdfSign2Element = ionContents[i].contentDocument.querySelector('.pdfsign2');
                                    while (pdfSign2Element.firstChild) {
                                        pdfSign2Element.removeChild(pdfSign2Element.firstChild);
                                    }
                                    ionContents[i].contentDocument.querySelector('.pdfsign').insertAdjacentHTML('beforeend', pdfstr2);
                                    ionContents[i].contentDocument.querySelector('.pdfsign2').insertAdjacentHTML('beforeend', pdfstr3);
                                    ionContents[i].contentDocument.querySelectorAll('.right-middle').forEach(function(obj) {
                                        obj.style.zIndex = 0;
                                    });
                                }else if(i==4){
                                    $('.ion').contents().find(".new_tr").remove();
                                    // let pdfdantotal = '.pdfdantotal';
                                    // let pdfbuytotal = '.pdfbuytotal';
                                    // if(otr_data.rentproduct!=''){
                                    //     pdfdantotal = '.pdfdantotal2';
                                    //     pdfbuytotal = '.pdfbuytotal2';
                                        ionContents[i].contentDocument.querySelector('.pdfdantotal').innerHTML='';
                                        ionContents[i].contentDocument.querySelector('.pdfbuytotal').innerHTML='';
                                    // }else{
                                        ionContents[i].contentDocument.querySelector('.pdfdantotal2').innerHTML='';
                                        ionContents[i].contentDocument.querySelector('.pdfbuytotal2').innerHTML='';
                                    // }
                                    // ionContents[i].contentDocument.querySelector(pdfdantotal).innerHTML='';
                                    // ionContents[i].contentDocument.querySelector(pdfbuytotal).innerHTML='';
                                    ionContents[i].contentDocument.querySelector('.pdfdantotal').innerHTML=parseInt(alldm).toLocaleString();
                                    ionContents[i].contentDocument.querySelector('.pdfbuytotal').innerHTML=parseInt(alldm2).toLocaleString();
                                    ionContents[i].contentDocument.querySelector('.pdfdantotal2').innerHTML=parseInt(alldm_r).toLocaleString();
                                    ionContents[i].contentDocument.querySelector('.pdfbuytotal2').innerHTML=parseInt(alldm2_r).toLocaleString();
                                    if(alldm!=0&&alldm_r!=0){
                                        let newTrElement = document.createElement('tr');
                                        newTrElement.className = "new_tr";
                                        for (var j = 0; j < 3; j++) {
                                            let newTdElement = document.createElement('td');
                                            
                                            if(j==0){
                                                newTdElement.setAttribute("colspan", "5"); // colspan 속성 추가
                                                newTdElement.textContent = "총 합계 : "+parseInt(alldm+alldm_r).toLocaleString()+"원";
                                                newTdElement.style.textAlign = 'center';
                                                newTdElement.style.fontSize = '15px';
                                            }else if(j==1){
                                                newTdElement.setAttribute("colspan", "1"); // colspan 속성 추가

                                            }else if(j==2){
                                                newTdElement.setAttribute("colspan", "3"); // colspan 속성 추가
                                                newTdElement.style.textAlign = 'center';
                                                newTdElement.style.fontSize = '15px';
                                                newTdElement.textContent = "총 합계 : "+parseInt(alldm2+alldm2_r).toLocaleString()+"원";
                                            }
                                            

                                            // 새로운 td 요소를 tr에 추가
                                            newTrElement.appendChild(newTdElement);
                                        }
                                        let trElement = ionContents[i].contentDocument.querySelector('.pdfbuytotal2').closest('tr');
                                        trElement.parentNode.insertBefore(newTrElement, trElement.nextSibling);
                                    }
                                    
                                    let topcm = '-20';
                                    let tcls = 'basic';
                                    let pdfstr2 = '<span class="' + tcls + ' msg_sign" style="position: absolute; z-index: 999; right:-10px; top:' + topcm + 'px;"><image style="width:110px; -webkit-user-drag: none;" src="/signfiles/' + number + '/<%=company%>" onerror="this.style.display=\'none\'"></span>';
                                    let pdfstr3 = '<span class="msg_sign" style="position: absolute; right:505; top:-15px;"><image style="width:60px; -webkit-user-drag: none;" src="/companystamp/<%=company.replace(/ /g,"%20")%>" onerror="this.style.display=\'none\'"></span>';

                                    // let pdfSignElement = ionContents[i].contentDocument.querySelector('.pdfsign');
                                    // while (pdfSignElement.firstChild) {
                                    //     pdfSignElement.removeChild(pdfSignElement.firstChild);
                                    // }
                                    // let pdfSign2Element = ionContents[i].contentDocument.querySelector('.pdfsign2');
                                    // while (pdfSign2Element.firstChild) {
                                    //     pdfSign2Element.removeChild(pdfSign2Element.firstChild);
                                    // }
                                    $('.ion').contents().find(".msg_sign").remove();
                                    ionContents[i].contentDocument.querySelector('.pdfsign').insertAdjacentHTML('beforeend', pdfstr2);
                                    ionContents[i].contentDocument.querySelector('.pdfsign2').insertAdjacentHTML('beforeend', pdfstr3);
                                    let pdfadd = '.pdfadd';
                                    if(otr_data.rentproduct!='')pdfadd = '.pdfadd2';
                                    ionContents[i].contentDocument.querySelector('.pdfadd').insertAdjacentHTML('afterend', pdfstr1_2);
                                    ionContents[i].contentDocument.querySelector('.pdfadd2').insertAdjacentHTML('afterend', pdfstr1_2_r);

                                    ionContents[i].contentDocument.querySelector('.address').innerHTML = address;
                                    // ionContents[i].contentDocument.querySelector('.pdfday').innerHTML = order_date;
                                    let pdf_day_all = ionContents[i].contentDocument.querySelectorAll('.pdfday');
                                    pdf_day_all.forEach(function(obj,index){
                                        obj.innerHTML = order_date;
                                    });
                                    // ionContents[i].contentDocument.querySelector('.pdfguardtarget').innerHTML = guardtarget;
                                    ionContents[i].contentDocument.querySelector('.pdfguardname').innerHTML = guardname;
                                    if (guardname === 'undefined' || guardname === 'null') ionContents[i].contentDocument.querySelector('.pdfguardname').innerHTML = name;
                                    if (guardtarget === '본인') ionContents[i].contentDocument.querySelector('.pdfguardname').innerHTML = name;

                                    // if (guardtarget === 'undefined' || guardtarget === 'null') ionContents[i].contentDocument.querySelector('.pdfguardtarget').innerHTML = '본인';

                                    ionContents[i].contentDocument.querySelector('.target').innerHTML = target + otr_data.sale;
                                    ionContents[i].contentDocument.querySelectorAll('.target2')[0].innerHTML = "";
                                    ionContents[i].contentDocument.querySelectorAll('.target2')[1].innerHTML = "";
                                    ionContents[i].contentDocument.querySelectorAll('.target2')[0].innerHTML = otr_data.sale;
                                    if(otr_data.rentproduct!=''){
                                        ionContents[i].contentDocument.querySelectorAll('.target2')[0].innerHTML = "";
                                        ionContents[i].contentDocument.querySelectorAll('.target2')[1].innerHTML = otr_data.sale;
                                    }
                                    ionContents[i].contentDocument.querySelector('.ranker').innerHTML = ranker;
                                    ionContents[i].contentDocument.querySelector('.companynum').innerHTML=companynumber;
                                    company_html_all.forEach(function(obj,index){
                                        obj.innerHTML = "<%=company%>";
                                    });
                                    let ceo_html_all = ionContents[i].contentDocument.querySelectorAll('.ceo');
                                    ceo_html_all.forEach(function(obj,index){
                                        obj.innerHTML = companyceo;
                                    });
                                    ionContents[i].contentDocument.querySelector('.banknumber').innerHTML=managerinfoarr[manager].split("|")[0];
                                    ionContents[i].contentDocument.querySelector('.pdfphone1').innerHTML = phone.replace(/^(\d{3})(\d{4})(\d{4})$/, "$1-$2-$3");
                                    if("<%=company%>"=="주안애복지용구"){
                                        let str = `* 대여제품은 1년이내 변심반납시 설치/회수/소독비가 발생할 수 있습니다`;
                                        $('.ion').contents().find('.buyrent_txt_chkbox').prop('checked',true);
                                        $('.ion').contents().find('.buyrent_txt_area').show();
                                        $('.ion').contents().find('.buyrent_txtarea').html(str);
                                        $('.ion').contents().find('.buyrent_txtarea').css({'font-size':'12px','font-weight':'bold'});
                                        $('.ion').contents().find('.buyrent_txtarea').css({"height":'30px'});
                                        const height = $('.ion').contents().find('.buyrent_txtarea').prop('scrollHeight') + 2;
                                        console.log(height,"height")
                                        
                                        $('.ion').contents().find('.buyrent_txtarea').css({"height":height+'px'});
                                    }
                                    if("<%=company%>"=="주안애복지용구"){
                                        // if(!$('.ion').contents().find('.custum_tr')){
                                            $('.ion').contents().find('.custum_tr').remove();
                                            let custum_tr = `<tr class="custum_tr">
                                                <td class="tg-baqh" colspan="4">사업소 주소 / 연락처 :</td>
                                                <td class="tg-baqh" colspan="5">인천 미추홀구 경인로354번길 79 101 호 <br/> 010-3561-0889 </td>
                                            </tr>`;
                                            $('.ion').contents().find('.table_tbody').append(custum_tr);
                                        // }
                                        
                                    }
//                                     ionContents[i].contentDocument.querySelector('.companynum').innerHTML="";
//                                     ionContents[i].contentDocument.querySelector('.pdfadd2').insertAdjacentHTML('afterend', pdfstr1_2);
//                                     ionContents[i].contentDocument.querySelector('.pdfdantotal2').innerHTML=alldm.toLocaleString();
//                                     ionContents[i].contentDocument.querySelector('.pdfbuytotal2').innerHTML=alldm2.toLocaleString();
//                                     ionContents[i].contentDocument.querySelector('.target2');
//                                     let target2_all = ionContents[i].contentDocument.querySelectorAll('.target2');
//                                     target2_all.forEach(function(obj,index){
//                                         obj.innerHTML = sale +"%";
//                                     });
//                                     if('<%=company%>'=='가좌의료기'){
//                                         ionContents[i].contentDocument.querySelector('.buyrent_terms_4').setAttribute("style","text-decoration:underline; font-size:12px;");
//                                     }else if("<%=company%>"=="(주)핸디케어"){
//                                         let str = `1. 대여품목은 반환사유가 발생하면, 즉시(주)핸디케어로 알려주셔야합니다.(T.032-513-8852/010-3504-8852)
// 2. 침대 대여중 요양병원,일반병원 입원시 입.퇴원 날짜를 반드시 통보하여주셔야합니다.`;
//                                         // ionContents[i].contentDocument.querySelector('.buyrent_txt_chkbox').checked = true;
//                                         //ionContents[i].contentDocument.querySelector('.buyrent_txt_area').style.display = 'block';
//                                         ionContents[i].contentDocument.querySelector('.buyrent_txtarea').innerHTML = str;
//                                         const height = ionContents[i].contentDocument.querySelector('.buyrent_txtarea').scrollHeight + 2;
//                                         ionContents[i].contentDocument.querySelector('.buyrent_txtarea').style.height = height + 'px';
//                                     }
//                                     ionContents[i].contentDocument.querySelector('.banknumber').innerHTML=banknum;

                            

//                                 let company_html_all = ionContents[i].contentDocument.querySelectorAll('.company');
//                                 company_html_all.forEach(function(obj,index){
//                                     obj.innerHTML = "<%=company%>";
//                                 });

//                                 ionContents[i].contentDocument.querySelector('.pdfphone1').innerHTML = phone;

//                                 ionContents[i].contentDocument.querySelector('.pdfday').innerHTML = chan_val + getTodayLabel();


//                                 let topcm = '-20';
//                                 let tcls = 'basic';
//                                 let pdfstr2 = '<span class="' + tcls + ' msg_sign" style="position: absolute; z-index: 999; left:0px; top:' + topcm + 'px;"><image style="width:110px; -webkit-user-drag: none;" src="/signfiles/' + number + '/<%=company%>" onerror="this.style.display=\'none\'"></span>';
//                                 let pdfstr3 = '<span class="msg_sign" style="position: absolute; right:0px; top:-35px;"><image style="width:80px; -webkit-user-drag: none;" src="/companystamp/<%=company%>" onerror="this.style.display=\'none\'"></span>';
//                                 // ionContents.querySelector('.pdfsign').innerHTML = ''; // 이 줄은 주석 처리된 것으로 추측되어 제외했습니다.
//                                 let pdfSignElement = ionContents[i].contentDocument.querySelector('.pdfsign');
//                                 while (pdfSignElement.firstChild) {
//                                     pdfSignElement.removeChild(pdfSignElement.firstChild);
//                                 }
//                                 let pdfSign2Element = ionContents[i].contentDocument.querySelector('.pdfsign2');
//                                 while (pdfSign2Element.firstChild) {
//                                     pdfSign2Element.removeChild(pdfSign2Element.firstChild);
//                                 }

//                                 //ionContents.querySelector('.pdfsign').insertAdjacentHTML('beforeend', pdfstr2);
//                                 ionContents[i].contentDocument.querySelector('.pdfsign2').insertAdjacentHTML('beforeend', pdfstr3);

                            }else if(i==3){
                                // ionContents[i].contentDocument.querySelector('.address').innerHTML = address;
                                let topcm = '-20';
                                let tcls = 'basic';
                                let pdfstr2 = '<span class="' + tcls + ' msg_sign" style="position: absolute; z-index: 999; right:0px; top:' + topcm + 'px;"><image style="width:110px; -webkit-user-drag: none;" src="/signfiles/' + number + '/<%=company%>" onerror="this.style.display=\'none\'"></span>';
                                let pdfstr3 = '<span class="msg_sign" style="position: absolute; right:0px; top:-15px;"><image style="width:60px; -webkit-user-drag: none;" src="/companystamp/<%=company.replace(/ /g,"%20")%>" onerror="this.style.display=\'none\'"></span>';
                                // ionContents.querySelector('.pdfsign').innerHTML = ''; // 이 줄은 주석 처리된 것으로 추측되어 제외했습니다.
                                let pdfSignElement = ionContents[i].contentDocument.querySelector('.pdfsign');
                                while (pdfSignElement.firstChild) {
                                    pdfSignElement.removeChild(pdfSignElement.firstChild);
                                }
                                ionContents[i].contentDocument.querySelector('.pdfsign').insertAdjacentHTML('beforeend', pdfstr2);
                                ionContents[i].contentDocument.querySelector('.pdfday').innerHTML = order_date;
                                ionContents[i].contentDocument.querySelector('.pdfguardname').innerHTML = guardname;
                                if (guardtarget === '본인' || guardname === '본인') ionContents[i].contentDocument.querySelector('.pdfguardname').innerHTML = name;
                                ionContents[i].contentDocument.querySelector('.pdfguardtarget').innerHTML = guardtarget;
                                if (guardname === 'undefined' || guardname === 'null' || guardname === '') ionContents[i].contentDocument.querySelector('.pdfguardname').innerHTML = name;
                                if (guardtarget === 'undefined' || guardtarget === 'null' || guardtarget === '') ionContents[i].contentDocument.querySelector('.pdfguardtarget').innerHTML = '본인';
                                company_html_all.forEach(function(obj,index){
                                    obj.innerHTML = "<%=company%>";
                                });
                                let ceo_html_all = ionContents[i].contentDocument.querySelectorAll('.ceo');
                                ceo_html_all.forEach(function(obj,index){
                                    obj.innerHTML = companyceo;
                                });
                                ionContents[i].contentDocument.querySelector('.tel').innerHTML = companytel;
                                ionContents[i].contentDocument.querySelector('.fax').innerHTML = companyfax;
                                ionContents[i].contentDocument.querySelector('.caddress').innerHTML = companyaddress;
                                if("<%=company%>"=="(주)엠코리아토탈서비스"){
                                    let pdfstr3 = '<span class="msg_sign" style="position: absolute; right:505; top:-15px;"><image style="width:60px; -webkit-user-drag: none;" src="/companystamp/<%=company.replace(/ /g,"%20")%>" onerror="this.style.display=\'none\'"></span>';
                                    ionContents[i].contentDocument.querySelector('.pdfsign2').insertAdjacentHTML('beforeend', pdfstr3);
                                    $('.ion').contents().find('.privacy_custum').show();
                                }
                                let bcnt_b = 0;
                                let bcnt_r = 0;
                                buycnt_b.forEach(function(obj,index){
                                    bcnt_b += parseInt(obj);
                                });
                                buycnt_r.forEach(function(obj,index){
                                    bcnt_r += parseInt(obj);
                                });
                                // if(otr_data.rentproduct!=''){
                                //     ionContents[i].contentDocument.querySelector('.bcnt').innerHTML = '';
                                //     ionContents[i].contentDocument.querySelector('.rcnt').innerHTML = bcnt;
                                // }else{
                                //     ionContents[i].contentDocument.querySelector('.rcnt').innerHTML = '';
                                //     ionContents[i].contentDocument.querySelector('.bcnt').innerHTML = bcnt;
                                // }
                                ionContents[i].contentDocument.querySelector('.bcnt').innerHTML = '';
                                ionContents[i].contentDocument.querySelector('.rcnt').innerHTML = '';
                                ionContents[i].contentDocument.querySelector('.bcnt').innerHTML = bcnt_b;
                                ionContents[i].contentDocument.querySelector('.rcnt').innerHTML = bcnt_r;
//                                 ionContents[i].contentDocument.querySelector('.name').innerHTML = name;
//                                 ionContents[i].contentDocument.querySelector('.number').innerHTML = number;
//                                 ionContents[i].contentDocument.querySelector('.companynum').innerHTML="";
//                                 ionContents[i].contentDocument.querySelector('.address').innerHTML = address;
//                                 let company_html_all = ionContents[i].contentDocument.querySelectorAll('.company');
//                                 company_html_all.forEach(function(obj,index){
//                                     obj.innerHTML = "<%=company%>";
//                                 });
//                                 let dantotal_html_all = ionContents[i].contentDocument.querySelectorAll('.pdfdantotal');
//                                 dantotal_html_all.forEach(function(obj,index){
//                                     obj.innerHTML = pdfdantotal.toLocaleString();
//                                 });
//                                 // ionContents[i].contentDocument.querySelector('.pdfdantotal').innerHTML=pdfdantotal.toLocaleString();
//                                 let buytotal_html_all = ionContents[i].contentDocument.querySelectorAll('.pdfbuytotal');
//                                 buytotal_html_all.forEach(function(obj,index){
//                                     obj.innerHTML =pdfbuytotal.toLocaleString();
//                                 });
//                                 // ionContents[i].contentDocument.querySelector('.pdfbuytotal').innerHTML=pdfbuytotal.toLocaleString();

//                                 ionContents[i].contentDocument.querySelector('.pdfgongtotal').innerHTML=pdfgongtotal.toLocaleString();
//                                 ionContents[i].contentDocument.querySelector('.pdfday').innerHTML = chan_val + getTodayLabel();
//                                 let ceo_html_all = ionContents[i].contentDocument.querySelectorAll('.ceo');
//                                 ceo_html_all.forEach(function(obj,index){
//                                     obj.innerHTML = "";
//                                 });
//                                 let payment_str = '';
//                                 payment_product_arr.forEach(function(obj,index){
//                                     payment_str += obj+'&nbsp;'+payment_product_arr2[index]+'<br/>';
//                                 });
//                                 ionContents[i].contentDocument.querySelector('.sdate').innerHTML = rentstart + '~' +rentend;
//                                 $('.ion').contents().find('.product_arr').html(payment_str);
                                
//                                 let topcm = '-20';
//                                 let tcls = 'basic';
//                                 let pdfstr3 = '<span class="msg_sign" style="position: absolute; left:0px; top:-35px;"><image style="width:80px; -webkit-user-drag: none;" src="/companystamp/<%=company%>" onerror="this.style.display=\'none\'"></span>';
//                                 let pdfSign2Element = ionContents[i].contentDocument.querySelector('.pdfsign2');
//                                 while (pdfSign2Element.firstChild) {
//                                     pdfSign2Element.removeChild(pdfSign2Element.firstChild);
//                                 }
//                                 ionContents[i].contentDocument.querySelector('.pdfsign2').insertAdjacentHTML('beforeend', pdfstr3);
                            }else if(i==1||i==2){
                                let topcm = '-20';
                                let tcls = 'basic';
                                let pdfstr2 = '<span class="' + tcls + ' msg_sign" style="position: absolute; z-index: 999; right:0px; top:' + topcm + 'px;"><image style="width:110px; -webkit-user-drag: none;" src="/signfiles/' + number + '/<%=company%>" onerror="this.style.display=\'none\'"></span>';
                                let pdfstr3 = '<span class="msg_sign" style="position: absolute; right:0px; top:-15px;"><image style="width:60px; -webkit-user-drag: none;" src="/companystamp/<%=company.replace(/ /g,"%20")%>" onerror="this.style.display=\'none\'"></span>';
                                // ionContents.querySelector('.pdfsign').innerHTML = ''; // 이 줄은 주석 처리된 것으로 추측되어 제외했습니다.
                                let pdfSignElement = ionContents[i].contentDocument.querySelector('.pdfsign');
                                while (pdfSignElement.firstChild) {
                                    pdfSignElement.removeChild(pdfSignElement.firstChild);
                                }
                                let pdfSign2Element = ionContents[i].contentDocument.querySelector('.pdfsign2');
                                while (pdfSign2Element.firstChild) {
                                    pdfSign2Element.removeChild(pdfSign2Element.firstChild);
                                }
                                ionContents[i].contentDocument.querySelector('.pdfsign').insertAdjacentHTML('beforeend', pdfstr2);

                                ionContents[i].contentDocument.querySelector('.pdfsign2').insertAdjacentHTML('beforeend', pdfstr3);
                                ionContents[i].contentDocument.querySelector('.pdfadd2').insertAdjacentHTML('afterend', pdfstr1_3);

                                ionContents[i].contentDocument.querySelector('.target').innerHTML = target + otr_data.sale;
                                ionContents[i].contentDocument.querySelector('.address').innerHTML = address;
                                let ceo_html_all = ionContents[i].contentDocument.querySelectorAll('.ceo');
                                ceo_html_all.forEach(function(obj,index){
                                    if(("<%=company%>"=="건강100세"||"<%=company%>"=="건강100세 의료기"||"<%=company%>"=="건강한복지용구"||"<%=company%>"=="건강한가족의료기")&&index==0){
                                        obj.innerHTML = '';
                                    }else{
                                        obj.innerHTML = companyceo;
                                    }
                                });
                                ionContents[i].contentDocument.querySelector('.pdfphone1').innerHTML = phone.replace(/^(\d{3})(\d{4})(\d{4})$/, "$1-$2-$3");
                                let sdate_html_all = ionContents[i].contentDocument.querySelectorAll('.sdate');
                                if(("<%=company%>"!="건강100세"&&"<%=company%>"!="건강100세 의료기"&&"<%=company%>"!="건강한복지용구"&&"<%=company%>"!="건강한가족의료기")){
                                    sdate_html_all.forEach(function(obj,index){
                                        obj.innerHTML = order_date;
                                    });
                                    $('.ion').contents().find(".pdfday").text(order_date+getTodayLabel());
                                    $('.ion').contents().find(".installer").text(companyceo);
                                    let deliverymanager_data = otr_data.deliverymanager;
                                    let deliver_txt = '직배송(전용차량)';
                                    if(deliverymanager_data=="none"){
                                        deliver_txt = '직배송(전용차량)';
                                    }else if(deliverymanager_data=='basic'){
                                        deliver_txt = '택배배송';
                                        // $('.ion').contents().find('.installer').html('');
                                    }else if(deliverymanager_data=='not'){
                                        deliver_txt = '내방';
                                    }else if(deliverymanager_data=='clean'){
                                        deliver_txt = '소독업체직배송';
                                    }else if(deliverymanager_data=='supply'){
                                        deliver_txt = '공급업체직배송';
                                        $('.ion').contents().find('.installer').html('');
                                    }
                                    $('.ion').contents().find('.delivery').html(deliver_txt);
                                }
                                if("<%=company%>"=="해오름재가노인복지센터")ionContents[i].contentDocument.querySelector('.installer').innerHTML = '배주완';
                                // ionContents[i].contentDocument.querySelector('.sdate').innerHTML = order_date;
                                ionContents[i].contentDocument.querySelector('.pdfguardname').innerHTML = guardname;
                                if (guardname === 'undefined' || guardname === 'null') ionContents[i].contentDocument.querySelector('.pdfguardname').innerHTML = name;
                                if (guardtarget === '본인') ionContents[i].contentDocument.querySelector('.pdfguardname').innerHTML = name;


                            }else if(i==0){
                                ionContents[i].contentDocument.querySelector('div').classList.remove('mbody');
                                let topcm = '-20';
                                let tcls = 'basic';
                                let pdfstr2 = '<span class="' + tcls + ' msg_sign" style="position: absolute; z-index: 999; right:0px; top:' + topcm + 'px;"><image style="width:110px; -webkit-user-drag: none;" src="/signfiles/' + number + '/<%=company%>" onerror="this.style.display=\'none\'"></span>';
                                let pdfstr3 = '<span class="msg_sign" style="position: absolute; right:0px; top:-15px;"><image style="width:60px; -webkit-user-drag: none;" src="/companystamp/<%=company.replace(/ /g,"%20")%>" onerror="this.style.display=\'none\'"></span>';
                                // ionContents.querySelector('.pdfsign').innerHTML = ''; // 이 줄은 주석 처리된 것으로 추측되어 제외했습니다.
                                let pdfSign2Element = ionContents[i].contentDocument.querySelector('.pdfsign2');
                                while (pdfSign2Element.firstChild) {
                                    pdfSign2Element.removeChild(pdfSign2Element.firstChild);
                                }
                                ionContents[i].contentDocument.querySelector('.pdfsign2').insertAdjacentHTML('beforeend', pdfstr3);
                                ionContents[i].contentDocument.querySelector('.product_arr').innerHTML = payment_str;
                                ionContents[i].contentDocument.querySelector('.companynum').innerHTML=companynumber;
                                let ceo_html_all = ionContents[i].contentDocument.querySelectorAll('.ceo');
                                ceo_html_all.forEach(function(obj,index){
                                    obj.innerHTML = companyceo;
                                });
                                company_html_all.forEach(function(obj,index){
                                    obj.innerHTML = "<%=company%>";
                                });
                                ionContents[i].contentDocument.querySelector('.companynum2').innerHTML=companynumber2;
                                ionContents[i].contentDocument.querySelector('.address').innerHTML=companyaddress;
                                if(otr_data.rentproduct!=''){
                                    ionContents[i].contentDocument.querySelector('.sdate').innerHTML = rentstart + '~' +rentend;
                                    
                                }else{
                                    ionContents[i].contentDocument.querySelector('.sdate').innerHTML = order_date
                                }
                                let dantotal_html_all = ionContents[i].contentDocument.querySelectorAll('.pdfdantotal');
                                dantotal_html_all.forEach(function(obj,index){
                                    obj.innerHTML = parseInt(alldm+alldm_r).toLocaleString();
                                });
                                
                                let buytotal_html_all = ionContents[i].contentDocument.querySelectorAll('.pdfbuytotal');
                                buytotal_html_all.forEach(function(obj,index){
                                    obj.innerHTML =parseInt(alldm2+alldm2_r).toLocaleString();
                                });
                                ionContents[i].contentDocument.querySelector('.pdfgongtotal').innerHTML=parseInt((alldm+alldm_r)-(alldm2+alldm2_r)).toLocaleString();
                                ionContents[i].contentDocument.querySelector('.pdfday').innerHTML = order_date;

                                // if(alldm!=0&&alldm_r!=0){
                                //     let newTrElement = document.createElement('tr');
                                //     newTrElement.className = "new_tr";
                                //     for (var j = 0; j < 3; j++) {
                                //         let newTdElement = document.createElement('td');
                                        
                                //         if(j==0){
                                //             newTdElement.setAttribute("colspan", "5"); // colspan 속성 추가
                                //             newTdElement.textContent = "총 합계 : "+parseInt(alldm+alldm_r).toLocaleString()+"원";
                                //             newTdElement.style.textAlign = 'center';
                                //         }else if(j==1){
                                //             newTdElement.setAttribute("colspan", "1"); // colspan 속성 추가

                                //         }else if(j==2){
                                //             newTdElement.setAttribute("colspan", "3"); // colspan 속성 추가
                                //             newTdElement.style.textAlign = 'center';
                                //             newTdElement.textContent = "총 합계 : "+parseInt(alldm2+alldm2_r).toLocaleString()+"원";
                                //         }
                                        

                                //         // 새로운 td 요소를 tr에 추가
                                //         newTrElement.appendChild(newTdElement);
                                //     }
                                //     let trElement = ionContents[i].contentDocument.querySelector('.pdfbuytotal2').closest('tr');
                                //     trElement.parentNode.insertBefore(newTrElement, trElement.nextSibling);
                                // }
                                
                            }
                            
                            
                            err_obj.name_arr.push(name);
                            err_obj.number_arr.push(number);
//                             //console.log(ionContents.querySelector('body').innerHTML);
//                             // const ionContents2 = ionContents;
                            err_obj.el_arr.push(ionContents[i].contentDocument.querySelector('html').innerHTML);
                        }
                        
                        
                        print_chk_box_cnt++;
                    }
                    
//                 }
            }
        });
        await getBase64Image(err_obj);
        
        
    }


    function arrowclick(x){
        let cnt = 1;
        let mbody = document.querySelector('.rent_add_iframe').contentDocument.querySelectorAll('.mbody');
        console.log("mbodylen",mbody.length);
        let cntt;
        for (let i = 0; i < mbody.length; i++) {
            let element = mbody[i];
            if (element.classList.contains('ion')) {
                console.log(i);
                let cntt;
                if (x == 'r') {
                    cntt = (i == mbody.length - 1) ? 0 : i + 1;
                }
                if (x == 'l') {
                    cntt = (i == 0) ? mbody.length - 1 : i - 1;
                }
                mbody[cntt].classList.add('ion');
                mbody[cntt].style.zIndex = 1;
                mbody[cntt].style.opacity = 1;
                mbody[cntt].classList.remove('ioff');
                for (let j = 0; j < mbody.length; j++) {
                    let el = mbody[j];
                    if (el !== mbody[cntt]) {
                        el.classList.remove('ion');
                        el.classList.add('ioff');
                        el.style.zIndex = el.dataset.zindex;
                        el.style.opacity = 0;
                    }
                }
                console.log('??');
                break; // forEach의 return false와 같은 역할을 하여 루프 종료
            }
        }
    }

    async function print_func(){
        // let img_load_cnt = 0;
        // $('.rent_add_iframe').contents().find('img').load(async function(){
        //     img_load_cnt++;
        //     console.log(img_load_cnt)
        //     if(img_load_cnt>name.length-1){
                $('.rent_add_iframe').contents().find('.mbody').css({"opacity":"1"});
                $('.rent_add_iframe').contents().find('.mbody').css({"position":"relative"});
                await window.frames['rent_add_iframe'].print();
                Swal.close();
        //         return 0
        //     }
            
        // });
    }

    async function getBase64Image(el_obj) {
        const uniqueArr = [...new Set(el_obj.number_arr)];
        $('.print_cnt_client').text(uniqueArr.length);
        $('.print_cnt_page').text(el_obj.name_arr.length);
        $('.rent_add_iframe').contents().find('body').html('')
        //const base64Images = [];
        //const popbillDom = document.querySelector('.rent_add_dom');
        //popbillDom.innerHTML = "<html></html>";
        var iframe = document.querySelector('.rent_add_iframe');
        for (let i = 0; i < el_obj.name_arr.length; i++) {
            var iframeDocument = iframe.contentDocument || iframe.contentWindow.document;
            var bodyElement = iframeDocument.querySelector('body');

            // obj[i]를 새로운 div로 감싸고 추가합니다.
            var divElement = document.createElement('div');
            divElement.style.background="#fff";
            divElement.className = 'mbody';
            if(i==0){
                divElement.className = 'mbody ion';
            }
            divElement.style.width="21cm";
            divElement.style.minHeight="29.7cm";
            divElement.style.padding="1.5cm 1.5cm 2cm 1.5cm";
            // else{
            //     divElement.style.opacity=0;
            // }
            // divElement.style.position="absolute";
            divElement.style.zIndex="-"+i;
            divElement.dataset.zindex = "-"+i;
            divElement.innerHTML = el_obj.el_arr[i];
            bodyElement.appendChild(divElement);

        }
        // let img_load_cnt = 0;
        // $('.rent_add_iframe').contents().find('img').load(async function(){
        //     img_load_cnt++;
        //     if(img_load_cnt>name.length-1){
                
        //         await window.frames['rent_add_iframe'].print();
        //         return 0
        //     }
            
        // });
    }

    var order_print_product_buy = {};
    var order_print_product_rent = {};
    var order_print_product = {};
    var order_print_product_all = {};
    const order_print_plist_obj = {
        plistdic_tax : {},
        plistdic_name : {},
        plistdic_rent: {},
        plistdic_buy : {},
    }
    function chk_printing(obj){
        let tab = document.querySelector('.make_print_btn').getAttribute("data-on");;
        console.log("tab",tab)
        if(tab=="doc_tab_1"){
            if($('.rent_add_btn').hasClass('add_on')){
                $('.swal2-popup').css({"width":"95%"});
            }else{
                $('.swal2-popup').css({"width":"1100px"});
            }
            rent_add_make_doc($('.ordertable'));
        }else if(tab=="doc_tab_2"){
            if($('.rent_add_btn').hasClass('add_on')){
                $('.swal2-popup').css({"width":"95%"});
            }else{
                $('.swal2-popup').css({"width":"1100px"});
            }
            rent_add_make_doc_zero($('.ordertable'));
        }else if(tab=="doc_tab_3"){
            if($('.rent_add_btn').hasClass('add_on')){
                $('.swal2-popup').css({"width":"95%"});
            }else{
                $('.swal2-popup').css({"width":"1500px"});
            }
            rent_add_make_doc_receipt($('.ordertable'));
        }
        
    }

    let slideIndex = 0;
    function moveSlide(direction) {
        if (direction === 'prev') {
            slideIndex = (slideIndex - 1 + slides.length) % slides.length;
        } else if (direction === 'next') {
            slideIndex = (slideIndex + 1) % slides.length;
        }

        const slideWidth = slides[0].offsetWidth;
        const newPosition = -slideIndex * slideWidth;
        slider.style.transform = `translateX(${newPosition}px)`;
    }
    
    function order_print_product_get(){
        console.log("order_print_plist_obj")
        axios({
            url:"/ProductListGetOrder",
            method:"post",
        }).then(res=>{
            const data = res.data;
            if(data.code==200){
                var plist = data.plist;
                console.log("plist",plist)
                for(pl of plist){
                    order_print_plist_obj.plistdic_tax[pl.code] = [pl.tax];
                    order_print_plist_obj.plistdic_name[pl.code] = [pl.name,pl.name2];
                    if(pl.target=='대여'){
                        if(!Object.keys(order_print_plist_obj.plistdic_rent).includes(pl.code))order_print_plist_obj.plistdic_rent[pl.code] = [];
                        order_print_plist_obj.plistdic_rent[pl.code].push(pl.rentprice+'|'+pl.date);
                        // plistdic[pl.code+'|'+pl.date]=[pl.rentprice];
                    }else if(pl.target=='구입'){
                        if(!Object.keys(order_print_plist_obj.plistdic_buy).includes(pl.code))order_print_plist_obj.plistdic_buy[pl.code] = [];
                        order_print_plist_obj.plistdic_buy[pl.code].push(pl.buyprice+'|'+pl.date);
                    }else if(pl.target=='구입 또는 대여'){
                        if(!Object.keys(order_print_plist_obj.plistdic_buy).includes(pl.code))order_print_plist_obj.plistdic_buy[pl.code] = [];
                        order_print_plist_obj.plistdic_buy[pl.code].push(pl.buyprice+'|'+pl.date);
                        if(!Object.keys(order_print_plist_obj.plistdic_rent).includes(pl.code))order_print_plist_obj.plistdic_rent[pl.code] = [];
                        order_print_plist_obj.plistdic_rent[pl.code].push(pl.rentprice+'|'+pl.date);
                    }
                    
                }
                console.log("order_print_plist_obj",order_print_plist_obj);
                data.data.forEach(function(obj,index){
                    order_print_product[obj.code] = obj.name+"|"+obj.name2;
                    order_print_product_all[obj.code] = {name:obj.name,name2:obj.name2,buyprice:obj.buyprice,rentprice:obj.rentprice,target:obj.target};
                    if(obj.rentprice==0){
                        order_print_product_buy[obj.code] = obj.name+"|"+obj.name2+"|"+obj.buyprice;
                    }else{
                        if(obj.target=="구입 또는 대여"){
                            order_print_product_buy[obj.code] = obj.name+"|"+obj.name2+"|"+obj.buyprice;
                        }else{
                            order_print_product_rent[obj.code] = obj.name+"|"+obj.name2+"|"+obj.rentprice;
                        }
                        
                    }
                });
            }
        });
    }
    var now_doc_create = '';
    function doc_tab_click(obj){
        $(obj).addClass("doc_tab_on");
        $(".doc_tab").not($(obj)).removeClass("doc_tab_on");

        if($(obj).data('type')=='basic'){
            $('.rent_add_btn').show();
            $('.swal2-deny').css({'display':'block'});
            $('.doc_tab_1').show();
            $('.doc_tab_2').hide();
            $('.doc_title').text("제공계약서");
            // $('.make_print_btn').data("on","doc_tab_1");
            document.querySelector('.make_print_btn').setAttribute("data-on", "doc_tab_1");
        }else if($(obj).data('type')=='zero'){
            $('.rent_add_btn').hide();
            $('.swal2-deny').css({'display':'none'});
            $('.doc_tab_2').show();
            $('.doc_tab_1').hide();
            $('.doc_title').text("기초서류");
            // $('.make_print_btn').data("on","doc_tab_2");
            document.querySelector('.make_print_btn').setAttribute("data-on", "doc_tab_2");
        }else if($(obj).data('type')=='receipt'){
            $('.rent_add_btn').hide();
            $('.swal2-deny').css({'display':'none'});
            $('.doc_tab_2').hide();
            $('.doc_tab_1').hide();
            $('.doc_title').text("영수증");
            // $('.make_print_btn').data("on","doc_tab_2");
            document.querySelector('.make_print_btn').setAttribute("data-on", "doc_tab_3");
            
            
        }
    }

    async function rent_add_history_get(number_arr){
        return axios({
            method:'post',
            url:'/rentaddhistorygetorder',
            data:{
                company:company,
                numberarr:number_arr
            }
        }).then(res=>{
            const data = res.data;
            if(data.code==200){
                return data
            }else{
                return 300
            }
        })
    }

    function rent_add_area_btn(obj){
        if($(obj).hasClass("add_on")){
            $(obj).removeClass("add_on");
            $('.rent_add_area').hide();
            $('.swal2-popup').css({'width':'1100px'});
            $('.doc_create_area').css({'width':'100%'});
            
        }else if(!$(obj).hasClass("add_on")){
            $(obj).addClass("add_on");
            $('.rent_add_area').show();
            $('.swal2-popup').css({'width':'95%'});
            $('.doc_create_area').css({'width':'58%'});
        }
        
        
    }

    async function sms_insert(name,number,company,phonereq,phoneres,doc,type,key){
        let res_cnt = 0;
        let res_data = {
            code: 300,
            signkeyarr: Array(key.length)  // key 길이만큼 빈 배열을 초기화
        };

        const results = await Promise.all(key.map((obj, index) => {
            return axios({
                method: 'post',
                url: '/smsinsert',
                data: {
                    name: name[index],
                    number: number[index],
                    company: company,
                    phonereq: phonereq,
                    phoneres: phoneres[index],
                    doc: doc,
                    orderkey: key[index],
                    type: type
                }
            }).then(res => {
                res_data.signkeyarr[index] = res.data.signkey;  // 인덱스 위치에 저장
                res_data.code = 200;  // 성공 코드 업데이트
                if(res_cnt==key.length)return res_data
            });
        }));

        return res_data;  // 모든 요청이 완료된 후 res_data 반환
        // return axios({
        //     method:'post',
        //     url:'/smsinsertrentadd',
        //     data:{
        //         name:name[0],
        //         number:number[0],
        //         company:company,
        //         phonereq:phonereq,
        //         phoneres:phoneres[0],
        //         doc:doc,
        //         orderkey:key[0],
        //         type:type
        //     }
        // }).then(res=>{
        //     const data = res.data;
        //     return data;
        // })
    }

    var kakao_channel_name = '';
    function ListPlusFriendID(){
        let companynum = "<%=bankinfo[0].companynum%>";
        axios({
            method:'post',
            url:'/ListPlusFriendID',
            data:{
                companynum:companynum.replace(/[^0-9]/g,'')
            }
        }).then(res=>{
            const data = res.data.data;
            console.log(data.result[0].plusFriendID);
            kakao_channel_name = data.result[0].plusFriendID;

        });
    }

    var rent_add_obj = [];
    function orderlookup_chk_print(){
        let chk_cnt = 0;
        $('.ordertr').each(function(i){
            if($(this).children('td').eq(0).children('input').is(":checked")){
                chk_cnt++;
            }
        });
        if(chk_cnt!=0){
            Swal.fire({
                width: '1100px',
                fontsize:'13px',
                title: '출력 선택',
                html:`
                <div class="flex">
                    <div class="flexcolumn doc_create_area" style="">
                        <div class="flex">
                            <div style="font-weight:bold; font-size:20px;">수급자수: <span class="print_cnt_client" style="font-weight:bold; font-size:20px;">0</span>명</div>&nbsp;&nbsp;&nbsp;&nbsp;
                            <div style="font-weight:bold; font-size:20px;">출력수: <span class="print_cnt_page" style="font-weight:bold; font-size:20px;">0</span>장</div>
                        </div>
                        <div class="flex">
                            <div class="make_print doc_tab doc_tab_on" onclick="doc_tab_click(this)" data-type="basic">제공계약서</div>
                            <div style="width:30px;"></div>
                            <div class="make_print doc_tab" onclick="doc_tab_click(this)" data-type="zero">기초서류</div>
                            <div style="width:30px;"></div>
                            <div class="make_print doc_tab" onclick="doc_tab_click(this)" data-type="receipt">영수증</div>
                        </div>
                        <div class="doc_tab_1">
                            <div>
                                <div class="" style="width:100%; display:flex; justify-content:center; align-items:center;">
                                    <div class="flex_space" style="width:80%; font-weight:bold; background:#fff; border-radius:10px;">
                                        <div class="flexcolumn" style="padding: 20px;"><input type="checkbox" class="print_chk_box" data-id="doc1" checked><div>급여제공기록지</div></div>
                                        <div class="flexcolumn" style="padding: 20px;"><input type="checkbox" class="print_chk_box" data-id="doc2" checked><div>공급계약서</div></div>
                                        <div class="flexcolumn" style="padding: 20px;"><input type="checkbox" class="print_chk_box" data-id="doc3" checked><div>개인정보</div></div>
                                        <div class="flexcolumn" style="padding: 20px;"><input type="checkbox" class="print_chk_box" data-id="doc4" checked><div>제품설치대장</div></div>
                                        <div class="flexcolumn" style="padding: 20px;"><input type="checkbox" class="print_chk_box" data-id="doc5" checked><div>급여비용명세서</div></div>

                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="doc_tab_2" style="display:none;">
                            <div>
                                <div class="" style="width:100%; display:flex; justify-content:center; align-items:center;">
                                    <div class="flex_space" style="width:80%; font-weight:bold; background:#fff; border-radius:10px;">
                                        <div class="flexcolumn" style="padding: 20px;"><input type="checkbox" class="print_chk_box_zero" checked><div>이용신청서</div></div>
                                        <div class="flexcolumn" style="padding: 20px;"><input type="checkbox" class="print_chk_box_zero" checked><div>이용내역서</div></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="flex_space" style="width:100%;">
                            <div></div><div class="flex"><div class="make_print make_print_btn" onclick="chk_printing(this)" style="font-weight:bold;" data-on="doc_tab_1"><span class="doc_title" style="font-weight:bold;">제공계약서</span> 생성</div>&nbsp;&nbsp;&nbsp;&nbsp;<div style="line-height:20px;"><input type="checkbox" style="width:25px; height:25px;" class="zero_money_chk"></div><div>원단위 절삭</div></div><div class="make_print rent_add_btn" onclick="rent_add_area_btn(this);">연장내역 추가출력▶</div>
                        </div>
                        <div class="print_area" style="display:flex; flex-direction:column; justify-content:center; width:100%; height: 550px;">
                            <iframe id="rent_add_iframe" class='rent_add_iframe' name="rent_add_iframe" src="/orderprintiframe" frameborder="0"></iframe>
                            <!--div>
                                <button class="print_prev" onclick="arrowclick('l')">◀</button>
                                <button class="print_next" onclick="arrowclick('r')">▶</button>
                            </div-->
                        </div>

                    </div>
                    <div class="flexcolumn rent_add_area" style="width:42%; display:none;">
                        <div style="font-size:18px; font-weight:bold; padding:0px 0px 20px 0px;">연장내역 추가 출력 <span style="font-size:13px; font-weight:bold;">(연장'진행날짜'와 동일한 주문서일자의 주문서와 같이 출력됩니다)</span></div>
                        <div>
                            <table class="rent_add_table">
                                <thead>
                                    <th><input type="checkbox" class="rent_add_chk" onclick="rent_add_all_chk(this)"></th><th>성함</th><th>인정번호</th><th>품목명</th><th>바코드</th><th>연장시작일</th><th>연장종료일</th><th>진행날짜</th>
                                </thead>
                                <tbody class="rentadd_area_tbody">
                                    <tr class="load_txt" style="display:flex; justify-content:center;"><td style="width:100%; font-size:18px; font-weight:bold;">연장내역 불러오는중...</td></tr>

                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
                `,
                showCancelButton: true,
                showDenyButton:true,
                denyButtonText:"문자발송",
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: '출력',
                cancelButtonText: '취소',
                allowOutsideClick: false,
                didOpen:()=>{
                    order_print_product_get();
                    // // 이전 버튼 클릭 시
                    // prevButton.addEventListener('click', () => {
                    // moveSlide('prev');
                    // });

                    // // 다음 버튼 클릭 시
                    // nextButton.addEventListener('click', () => {
                    // moveSlide('next');
                    // });
                    let tr_data = $('.ordertr');
                    let number_arr = [];
                    $.each(tr_data,async function(i){
                        if($(tr_data[i]).children('td').eq(0).children('input').is(":checked")){
                            let otr_data = page_otr_data[i];
                            let number = otr_data.number;
                            number_arr.push(number);
                        }
                    });
                    rent_add_history_get(number_arr).then(async res=>{
                        console.warn(res)
                        if(res!=300){
                            // let companymember = {};
                            // res.companymember.forEach(function(obj,index){
                            //     companymember[obj.name] = obj.banknum;
                            // });
                            let history_str = '';
                            res.data.forEach(function(obj,index){
                                let bcode_sale_date = '';
                                if(obj.bcodesale6_date!=null&&obj.bcodesale6_date!=''){
                                    let salecnt = 5;
                                    if(obj.productname=='전동침대')salecnt=10;
                                    else if(obj.productname=='욕창예방 매트리스')salecnt=3;
                                    let newsaledates = new Date(obj.bcodesale6_date);
                                    newsaledates.setFullYear(newsaledates.getFullYear() + salecnt);
                                    newsaledates.setDate(newsaledates.getDate() - 1);
                                    bcode_sale_date = dateFormat(newsaledates);
                                }
                                history_str += `<tr class="rent_add_tr">
                                    <td><input type="checkbox" class="rent_add_chk"></td>
                                    <td>${obj.name}</td>
                                    <td>${obj.number}</td>
                                    <td>${obj.productname}</td>
                                    <td>${obj.bcode}</td>
                                    <td>${obj.constartdate.replace(/[^0-9]/g,'')}</td>
                                    <td>${obj.date.replace(/[^0-9]/g,'')}</td>
                                    <td>${obj.condate}</td></tr>`;
                                rent_add_obj.push(
                                    {
                                        name:obj.name,
                                        number:obj.number,
                                        productname:obj.productname,
                                        pcode:obj.pcode,
                                        bcode:obj.bcode,
                                        constartdate:obj.constartdate,
                                        date:obj.date,
                                        orderdate:obj.condate,
                                        sale:obj.sale,
                                        datenow:obj.datenow,
                                        nextdate:obj.nextdate,
                                        target:obj.target,
                                        ranker:obj.ranker,
                                        regident:obj.regident,
                                        address:obj.address+' '+obj.addressdetail,
                                        guardname:obj.guardname,
                                        guardtarget:obj.guardtarget,
                                        manager:obj.manager,
                                        phone:obj.phone1,
                                        bcode_sale_date:bcode_sale_date,
                                        // banknum:companymember[obj.manager]
                                    }
                                )
                            });
                            $('.load_txt').remove();
                            $('.rentadd_area_tbody').append(history_str);
                        }else{
                            $('.load_txt td').text("선택한 수급자 연장내역이 없습니다.");
                        }
                        
                    });
                },
                didRender:()=>{
                    // chk_printing()
                },
                preConfirm:()=>{
                    print_func();
                    return false;
                },
                preDeny:async ()=>{
                    if($('.print_cnt_client').text()=='0'){
                        Swal.showValidationMessage(`
                            <div>문자발송: 출력할 계약서가 없습니다. 제공계약서를 생성해주세요.</div>
                        `);
                        return false;
                    }else if(parseInt($('.print_cnt_client').text())>10){
                        Swal.showValidationMessage(`
                            <div>문자발송: 최대 10명까지 발송 가능합니다.</div>
                        `);
                        return false;
                    }else if(now_doc_create==''){
                        Swal.showValidationMessage(`
                            <div>문자발송: 계약서를 생성해주세요.</div>
                        `);
                        return false;
                    }else if(now_doc_create!='basic'){
                        Swal.showValidationMessage(`
                            <div>문자발송: 제공계약서만 발송가능합니다.</div>
                        `);
                        return false;
                    }else{
                        Swal.resetValidationMessage();
                    }
                    Swal.showLoading(Swal.getDenyButton()); // Loading 표시
                    // 추가 작업을 위한 시간 지연
                    await new Promise(resolve => setTimeout(resolve, 1000));
                    $('#popbillModal').show();
                    $('.tablinks').eq(0).hide();
                    $('.tablinks').eq(2).hide();
                    $('.sms_send_input').parent().hide();
                    $('.sms_send_input2').parent().hide();
                    GetSenderNumberList();
                    ListATSTemplate();
                    let html_obj = $('.rent_add_iframe').contents().find('.mbody');
                    let tr_data = $('.ordertr');
                    let doc_cnt = -1;
                    let name = [];
                    let number = [];
                    let num = [];
                    let phone = [];
                    let client_cnt = 0;
                    let client_str = '';
                    $('.client_tr').remove();
                    
                    $('.confirm_area').children('.confirm_btn').hide();
                    let loadingDots = 0;
                    $('.confirm_loading').show();
                    await new Promise(resolve => setTimeout(resolve, 100));
                    $.each(tr_data,async function(i){
                        // await new Promise(resolve => setTimeout(resolve, 2000));
                        if($(tr_data[i]).children('td').eq(0).children('input').is(":checked")){
                            if(number.indexOf(page_otr_data[i].number)== -1){
                                client_cnt++;
                                name.push(page_otr_data[i].name);
                                number.push(page_otr_data[i].number);
                                num.push(page_otr_data[i].num);
                                phone.push(page_otr_data[i].phone1);
                                client_str += `<tr class="client_tr"><td><input type="checkbox" style="width:30px; height:30px;" checked></td><td>${page_otr_data[i].name}</td><td>${page_otr_data[i].number}</td><td>${page_otr_data[i].phone1}</td></tr>`;
                                if($('.doc_tab_on').text()=="영수증"){
                                    doc_cnt++;
                                    let data_id = 'doc8';
                                    await html2canvas(html_obj[doc_cnt]).then(canvas => {
                                        console.log(doc_cnt,i,name,page_otr_data)
                                        let dataUrl = canvas.toDataURL('image/png');
                                        let data = {
                                            data: dataUrl,
                                            id:page_otr_data[i].name+page_otr_data[i].number+data_id,
                                            type:'jpg',
                                            name:"<%=company%>",
                                            orderkey:page_otr_data[i].num,
                                        }
                                        console.log(data)
                                        sendMessage2(data);
                                        
                                        //$('.sendmsg_make_doc_cnt').text(i+1);
                                    });
                                }else{
                                    $('.print_chk_box').each(async function(index){
                                        if($('.print_chk_box').eq(index).is(':checked')){
                                            let data_id = $('.print_chk_box').eq(index).data('id');
                                            $('.sms_send_label').filter(function() {
                                                return $(this).children('input').data('id') == data_id;
                                            }).css('display', 'block').children('input').prop("checked",true);
                                            doc_cnt++;
                                            
                                            await html2canvas(html_obj[doc_cnt]).then(async canvas => {
                                                console.log(doc_cnt,i,name,page_otr_data);
                                                let dataUrl = canvas.toDataURL('image/png');
                                                let data = {
                                                    data: dataUrl,
                                                    id: page_otr_data[i].name + page_otr_data[i].number + data_id,
                                                    type: 'jpg',
                                                    name: "<%=company%>",
                                                    orderkey: page_otr_data[i].num,
                                                };
                                                
                                                // sendMessage2의 응답을 기다림
                                                await sendMessage2(data);
                                            
                                            //$('.sendmsg_make_doc_cnt').text(i+1);
                                            });
                                            
                                            console.log(doc_cnt);
                                        }
                                        
                                    })
                                }
                                
                            }else{
                                name.push(page_otr_data[i].name);
                                number.push(page_otr_data[i].number);
                                num.push(page_otr_data[i].num);
                                phone.push(page_otr_data[i].phone1);
                            }
                            
                            
                        }

                    });
                    $('.confirm_area').children('.confirm_btn').show();
                    $('.confirm_loading').hide();
                    $('.confirm_btn').off('click');
                    $('.confirm_btn').click(function(){
                        if($('.sms_send_number').val()=='none'){
                            $('.swal2-content').css({'display':'block'});
                            Swal.showValidationMessage(`
                                <div>발송실패: 발신번호를 선택해주세요.</div>
                            `);
                            return false
                        }else if($('.sms_receive_number').val()==''){
                            $('.swal2-content').css({'display':'block'});
                            Swal.showValidationMessage(`
                                <div>발송실패: 수신번호를 입력해주세요.</div>
                            `);
                            return false
                        }else{
                            let name_arr = name;
                            let number_arr = number;
                            let phone_arr = phone;
                            let num_arr = num;
                            let tcode = '';
                            let content = '';
                            let popbill_id = "<%=bankinfo[0].popbillid%>";
                            let send_number = '';
                            let type = '';
                            // name_arr.push('');
                            // number_arr.push('');
                            // phone_arr.push($('.sms_receive_number').val());
                            content = '';
                            send_number = $('.sms_send_number').val();
                            if($('.sms_tab_on').hasClass('doc')){
                                if($('.sms_textarea').eq(2).val()==''){
                                    $('.swal2-content').css({'display':'block'});
                                    Swal.showValidationMessage(`
                                        <div>발송실패: 발신 내용이 없습니다.</div>
                                    `);
                                    return false
                                }else{
                                    let input_chk = 0;
                                    let doc_num_arr = [];
                                    content = $('.sms_textarea').eq(2).val();
                                    $('.sms_send_input').each(function(index){
                                        if($(this).is(":checked")){
                                            input_chk = 1;
                                            // getBase64Image2(name_arr, number_arr, $('.iprint').eq(index).contents().find('html'),$(this).attr('data-id'),key,$( "#doc_date" ).val())
                                            doc_num_arr.push(index);
                                        }
                                    });
                                    if(input_chk==0){
                                        console.log("???")
                                        Swal.showValidationMessage(`
                                            <div>발송실패: 계약서 미선택</div>
                                        `);
                                        return false
                                    }else{
                                        sms_insert(name_arr,number_arr,"<%=company%>",send_number,phone_arr,doc_num_arr,'basic',num_arr).then(res=>{
                                            if(res.code==200){
                                                axios({
                                                    method:'post',
                                                    url:'/SendFTS_multi',
                                                    data:{
                                                        name:name_arr,
                                                        number:number_arr,
                                                        phone:phone_arr,
                                                        tcode:tcode,
                                                        sendnumber:send_number,
                                                        content:content,
                                                        companynum:"<%=bankinfo[0].companynum.replace(/[^0-9]/g,'')%>",
                                                        kakaochannelname:kakao_channel_name,
                                                        popbillid:popbill_id,
                                                        type:'orderDoc',
                                                        company:"<%=company%>",
                                                        docarr:doc_num_arr,
                                                        signkey:res.signkeyarr,
                                                        orderkey:num_arr,
                                                    }
                                                }).then(res2=>{
                                                    console.log('??',res2.data.data.code);
                                                    console.log(res2)
                                                    console.log(
                                                    {
                                                        name:name_arr,
                                                        number:number_arr,
                                                        phone:phone_arr,
                                                        tcode:tcode,
                                                        sendnumber:send_number,
                                                        content:content,
                                                        companynum:"<%=bankinfo[0].companynum.replace(/[^0-9]/g,'')%>",
                                                        kakaochannelname:kakao_channel_name,
                                                        popbillid:popbill_id,
                                                        type:'orderDoc',
                                                        company:"<%=company%>",
                                                        docarr:doc_num_arr,
                                                        signkey:res.signkey,
                                                        orderkey:num_arr[0]
                                                    })
                                                    if(res2.data.data.code){
                                                        Swal.fire(
                                                            '전송 실패',
                                                            res2.data.data.message,
                                                            'error'
                                                        )
                                                    }else{
                                                        Swal.fire(
                                                            '전송 완료',
                                                            '',
                                                            'success'
                                                        )
                                                    }
                                                });
                                            }else{
                                                Swal.fire(
                                                    '전송 실패',
                                                    '',
                                                    'warning'
                                                )
                                            }
                                        })
                                    }
                                }
                            }else if($('.sms_tab_on').hasClass('custum')){
                                if($('.sms_textarea').eq(0).val()==''){
                                    $('.swal2-content').css({'display':'block'});
                                    Swal.showValidationMessage(`
                                        <div>발송실패: 발신 내용이 없습니다.</div>
                                    `);
                                    return false
                                }else{
                                    content = $('.sms_textarea').eq(0).val();
                                    sms_insert(name_arr,number_arr,"<%=company%>",send_number,phone_arr,'','custum',num_arr).then(res2=>{
                                        axios({
                                            method:'post',
                                            url:'/SendFTS_multi',
                                            data:{
                                                name:name_arr,
                                                number:number_arr,
                                                phone:phone_arr,
                                                tcode:tcode,
                                                sendnumber:send_number,
                                                content:content,
                                                companynum:"<%=bankinfo[0].companynum.replace(/[^0-9]/g,'')%>",
                                                kakaochannelname:kakao_channel_name,
                                                popbillid:popbill_id,
                                                type:'',
                                                company:"<%=company%>",
                                                orderkey:num_arr
                                            }
                                        }).then(res=>{
                                            console.log('??',res.data.data.code);
                                            console.log(res)
                                            if(res.data.data.code){
                                                Swal.fire(
                                                    '전송 실패',
                                                    res.data.data.message,
                                                    'error'
                                                )
                                            }else{
                                                Swal.fire(
                                                    '전송 완료',
                                                    '',
                                                    'success'
                                                )
                                            }
                                        });
                                    });
                                }
                            }else if($('.sms_tab_on').hasClass('alert')&&$('.sms_alert_tab_on').text()=='계약서 발송'){
                                if($('.sms_textarea').eq(1).val()==''){
                                    $('.swal2-content').css({'display':'block'});
                                    Swal.showValidationMessage(`
                                        <div>발송실패: 발신 내용이 없습니다.</div>
                                    `);
                                    return false
                                }else{
                                    let input_chk = 0;
                                    let doc_num_arr = [];
                                    tcode = $('.sms_alert_tab_on').next().next('input').val();
                                    content = $('.sms_textarea').eq(2).val();
                                    $('.sms_send_input2').each(function(index){
                                        if($(this).is(":checked")){
                                            input_chk = 1;
                                            // getBase64Image2(name_arr, number_arr, $('.iprint').eq(index).contents().find('html'),$(this).attr('data-id'),key,$('#doc_date2').val())
                                            doc_num_arr.push(index);
                                        }
                                    });
                                    if(input_chk==0){
                                        console.log("???")
                                        Swal.showValidationMessage(`
                                            <div>발송실패: 계약서 미선택</div>
                                        `);
                                        return false
                                    }else{
                                        sms_insert(name_arr,number_arr,"<%=company%>",send_number,phone_arr,doc_num_arr,'alert',num_arr).then(res=>{
                                            console.log("sms_insert",res);
                                            if(res.code==200){
                                                axios({
                                                    method:'post',
                                                    url:'/SendATS_multi',
                                                    data:{
                                                        name:name_arr,
                                                        number:number_arr,
                                                        phone:phone_arr,
                                                        tcode:tcode,
                                                        sendnumber:send_number,
                                                        content:content,
                                                        companynum:"<%=bankinfo[0].companynum.replace(/[^0-9]/g,'')%>",
                                                        kakaochannelname:kakao_channel_name,
                                                        popbillid:popbill_id,
                                                        type:'orderDoc',
                                                        company:"<%=company%>",
                                                        docarr:doc_num_arr,
                                                        signkey:res.signkeyarr,
                                                        orderkey:num_arr,
                                                    }
                                                }).then(res2=>{
                                                    console.log('??',res2.data.data.code);
                                                    console.log(res2)
                                                    console.log(
                                                    {
                                                        name:name_arr,
                                                        number:number_arr,
                                                        phone:phone_arr,
                                                        tcode:tcode,
                                                        sendnumber:send_number,
                                                        content:content,
                                                        companynum:"<%=bankinfo[0].companynum.replace(/[^0-9]/g,'')%>",
                                                        kakaochannelname:kakao_channel_name,
                                                        popbillid:popbill_id,
                                                        type:'orderDoc',
                                                        company:"<%=company%>",
                                                        docarr:doc_num_arr,
                                                        signkey:res.signkeyarr,
                                                        orderkey:num_arr,
                                                    })
                                                    if(res2.data.data.code){
                                                        Swal.fire(
                                                            '전송 실패',
                                                            res2.data.data.message,
                                                            'error'
                                                        )
                                                    }else{
                                                        Swal.fire(
                                                            '전송 완료',
                                                            '',
                                                            'success'
                                                        )
                                                    }
                                                });
                                            }else{
                                                Swal.fire(
                                                    '전송 실패',
                                                    '',
                                                    'warning'
                                                )
                                            }
                                            $('#popbillModal').hide();
                                        })
                                    }
                                }
                            }else if($('.sms_tab_on').hasClass('alert')){
                                if($('.sms_textarea').eq(1).val()==''){
                                    $('.swal2-content').css({'display':'block'});
                                    Swal.showValidationMessage(`
                                        <div>발송실패: 발신 내용이 없습니다.</div>
                                    `);
                                    return false
                                }else{
                                    tcode = $('.sms_alert_tab_on').next().next('input').val();
                                    content = $('.sms_textarea').eq(1).val();
                                    sms_insert(name_arr,number_arr,"<%=company%>",send_number,phone_arr,'','alert',num_arr).then(res2=>{
                                        axios({
                                            method:'post',
                                            url:'/SendATS_multi',
                                            data:{
                                                name:name_arr,
                                                number:number_arr,
                                                phone:phone_arr,
                                                tcode:tcode,
                                                sendnumber:send_number,
                                                content:content,
                                                companynum:"<%=bankinfo[0].companynum.replace(/[^0-9]/g,'')%>",
                                                popbillid:popbill_id,
                                                orderkey:num_arr
                                            }
                                        }).then(res=>{
                                            console.log(res);
                                            if(res.data.data.code){
                                                Swal.fire(
                                                    '전송 실패',
                                                    res.data.data.message,
                                                    'error'
                                                )
                                            }else{
                                                Swal.fire(
                                                    '전송 완료',
                                                    '',
                                                    'success'
                                                )
                                            }
                                        });
                                    });
                                }
                            }else{
                                Swal.showValidationMessage(`
                                    <div>발송실패: 발신 종류를 선택해주세요</div>
                                `);
                                return false
                            }
                        }
                    });
                    $('.popbill_res_cnt').html(client_cnt);
                    $('.popbill_res_tbody').append(client_str);
                    Swal.hideLoading();
                    return false;
                }
            }).then((result) => {
                if (result.isConfirmed){
                    //print_func(name_arr)
                }
            });
        }else{
            Swal.fire("수급자를 선택해주세요",'','info')
        }
        
    }

    function sendMessage2(data) {
        return new Promise((resolve, reject) => {
            var msg = JSON.stringify(data);
            var xhr = new XMLHttpRequest();

            xhr.onreadystatechange = () => {
            if (xhr.readyState === 4) {
                if (xhr.status === 200) {
                console.log(xhr.response);
                resolve(xhr.response);
                } else {
                reject(new Error('Request failed'));
                }
            }
            };

            xhr.onerror = () => {
            reject(new Error('Network error'));
            };

            xhr.open('POST', '/popbill_send_msg_doc_order');
            xhr.send(msg);
        });
    }

    function GetSenderNumberList(){
        let companynum = "<%=bankinfo[0].companynum%>";
        axios({
            method:'post',
            url:'/GetSenderNumberList',
            data:{
                companynum:companynum.replace(/[^0-9]/g,'')
            }
        }).then(function(res){
            const data = res.data.data.result;
            let str = '';
            if(data!=undefined){
                data.forEach((obj,index)=>{
                    console.log("number:",obj.number);
                    str += '<option value="'+obj.number+'">'+obj.number+'</option>';
                });
                
            }
            $('.sms_send_number').append(str);

            
        });
    }

    function ListATSTemplate(){
        let companynum = "<%=bankinfo[0].companynum%>";
        axios({
            method:"post",
            url:"/ListATSTemplate",
            data:{
                companynum:companynum.replace(/[^0-9]/g,'')
            }
        }).then(res=>{
            const data = res.data.data.result;
            console.log('kakao',data);
            let str = '';
            if(data!=undefined){
                $('.sms_alert_tab').remove();
                data.forEach((obj,index)=>{
                    str +=`<button class="button sms_alert_tab" onclick="openTemplate(event, 'template1', this)">${obj.templateName}</button><textarea style="display:none;">${obj.template.replace('#{company}','<%=company%>').replace('#{사업소명}','<%=company%>').replace('#{성함}','').replace('#{인정번호}','')}</textarea><input class="tcode" type="hidden" value="${obj.templateCode}">`;
                    // str +='<div class="popbill_msg_type kakao_template" onclick="popbill_msg_type_on(this)">(알림톡 템플릿)<br/>'+obj.templateName+'<textarea style="display:none;">'+obj.template.replace('#{company}','<%=company%>')+'</textarea><input class="tcode" type="hidden" value="'+obj.templateCode+'"></div>'
                });
            }
            if(str!=''){
                $('.sms_alert_area').append(str);
            }
        })
    }

    function openTemplate(evt, tabName, obj) {
        $('.sms_textarea').val('');
        $(obj).addClass('sms_alert_tab_on');
        $('.sms_alert_tab').not($(obj)).removeClass('sms_alert_tab_on');
        $('.swal2-confirm').show();
        $('.sms_textarea').val($(obj).next('textarea').val());
        if($(obj).text()=="계약서 발송"){
            $('.doc_input_area').show();
            $('.doc_date_area').show();
        }else{
            $('.doc_input_area').hide();
            $('.doc_date_area').hide();
        }
        // $('.sms_textarea').prop('readonly', true);
        
    }

    function rent_add_merge(){
        page_otr_data.push(
            {
                name:obj.name,
                number:obj.number,
                product:obj.pcode+"|"+obj.productname,
                buybcode:obj.bcode,
                orderdate:obj.constartdate,
                rentend:obj.date,
                rentstart:obj.condate,
                sale:obj.sale,
                datenow:obj.datenow,
                nextdate:obj.nextdate,
                target:obj.target,
                ranker:obj.ranker,
                regident:obj.regident,
                address:obj.address+' '+obj.addressdetail,
                guardname:obj.guardname,
                guardtarget:obj.guardtarget,
                manager:obj.manager,
                phone1:obj.phone1,
                bcode_sale_date:bcode_sale_date,
                banknum:companymember[obj.manager]
            }
        )
    }

    async function cnum_get(number){
        return axios({
            method:"post",
            url:"/CnumGet",
            data:{
                company:company,
                number:number
            }
        }).then(res=>{
            const data = res.data;
            return data;
        })
    }

    async function orderlookup(page,username,dates,datee,query,ccontract,ddelivery,pproduct,ccentername,mmanager,pphone,bbcode,pprintchk,cconfirm1,cconfirm2,ddeliverycar,ccontentssize,bbuyrentview,mmemo){
        page_cnum_data={};
        //socket.emit('login', {'name': uid});
        if(dates=='2020-01-01'){
            $('.clientupbtn').removeClass('don');
            $('.clientupbtn').addClass('doff');
        }
        console.log("firest",ccontentssize)
        if(mmemo!=''){
            // dates와 datee의 차이가 1개월이 넘는지 확인
            let date1 = new Date(dates);
            let date2 = new Date(datee);
            let diffMonth = (date2.getFullYear() - date1.getFullYear()) * 12 + (date2.getMonth() - date1.getMonth());
            if(diffMonth > 1) {
                Swal.fire({
                    title: '메모필터 사용알림',
                    text: '메모필터는 검색 기간이 1개월을 초과할 수 없습니다.',
                    icon: 'warning',
                    confirmButtonText: '확인'
                });
                return false;
            }
        }
        Swal.fire({
            background: '#fff',
            backdrop: `rgba(255,255,255,0.1)`,
            showConfirmButton: false,
            customClass: {
                popup: 'no-shadow'
            },
            width: '5%',
            allowOutsideClick: false,
        });
        Swal.showLoading();
        let share_chk_obj = [];
        $('.share_chk').each(function(){
            if($(this).is(':checked')){
                if("<%=company%>"!=$(this).val()){
                    share_chk_obj.push($(this).val());
                }
            }
        });
        $.ajax({
            url:"/orderlookup",
            data: "company=" + company +
                  '&page=' + page +
                  '&username=' + username +
                  '&dates=' + dates +
                  '&datee=' + datee +
                  '&query=' + query +
                  '&contract=' + ccontract +
                  '&delivery=' + ddelivery +
                  '&product=' + pproduct +
                  '&centername=' + ccentername +
                  '&manager=' + mmanager +
                  '&phone=' + pphone +
                  '&bcode=' + bbcode.replace(/ /g,'') +
                  '&printchk=' + pprintchk +
                  '&confirm1=' + cconfirm1 +
                  '&confirm2=' + cconfirm2 +
                  '&deliverycar=' + ddeliverycar +
                  '&contentssize=' + ccontentssize +
                  '&buyrentview=' + bbuyrentview +
                  '&memo=' + mmemo +
                  '&share_chk_obj=' + share_chk_obj,
            type:'POST',
            dataType:"JSON",
            async:true,
            success:function(results){
                $('.ordertr, .copydata, .orderpaging').remove();
                if(results){
                    var filterarr = [];
                    $('.filterarr').text('');
                    if(ccontract){
                        var dd = '';
                        if(ccontract=='ok')dd = '계약완료';
                        else if(ccontract=='cok')dd = '취소계약완료';
                        else if(ccontract=='n')dd = '미계약';
                        else if(ccontract=='vok')dd = '부분계약완료';
                        filterarr.push({'계약상태':dd});
                    }
                    if(ddelivery){
                        var dd = '';
                        if(ddelivery=='end')dd = '배송완료';
                        else if(ddelivery=='wait')dd = '배송대기';
                        else if(ddelivery=='back')dd = '회수중';
                        else if(ddelivery=='backend')dd = '회수완료';
                        filterarr.push({'배송상태':dd});
                    }
                    if(ddeliverycar){
                        var dd = '';
                        if(ddeliverycar=='basic')dd = '택배';
                        else if(ddeliverycar=='not')dd = '직접전달';
                        else if(ddeliverycar=='none')dd = '물류';
                        else if(ddeliverycar=='clean')dd = '소독업체';
                        else if(ddeliverycar=='supply')dd = '공급업체';
                        filterarr.push({'배송방법':dd});
                    }
                    if(pprintchk){
                        var pp = '';
                        if(pprintchk=='pok')pp = '출력';
                        else if(pprintchk=='pno')pp = '미출력';
                        filterarr.push({'인쇄':pp});
                    }
                    if(pproduct){
                        filterarr.push({'품목명':pproduct});
                    }
                    if(pphone){
                        filterarr.push({'연락처':pphone});
                    }
                    if(bbcode){
                        filterarr.push({'바코드':bbcode});
                    }
                    if(mmanager){
                        filterarr.push({'담당자':mmanager.slice(0, -1)});
                    }
                    if(ccentername){
                        filterarr.push({'센터명':ccentername});
                    }
                    if(bbuyrentview){
                        filterarr.push({'판매구분':bbuyrentview});
                    }
                    if(mmemo){
                        filterarr.push({'메모':mmemo});
                    }
                    
                    for(f of filterarr){
                        $('.filterarr').append('<div class="filtercls"><div class="fitems">'+Object.keys(f)+':'+f[Object.keys(f)]+'</div><div class="material-icons filter_close" style="color:#ff0000; cursor:pointer; font-weight:bold;" onclick="filterdel(\'1\',\''+uid+'\',\''+$('#datepicker').val()+'\',\''+$('#datepicker2').val()+'\',\''+results.query+'\',\''+ccontract+'\',\''+ddelivery+'\',\''+pproduct+'\',\''+ccentername+'\',\''+mmanager+'\',\''+pphone+'\',\''+bbcode+'\',\''+pprintchk+'\',\''+Object.keys(f)+'\',\''+confirm1+'\',\''+confirm2+'\',\''+ddeliverycar+'\',\''+ccontentssize+'\',\''+bbuyrentview+'\',\''+mmemo+'\')">close</div></div>');
                    }

                    if(member_target=="영업"){
                        $(".filter_close").hide();
                    }else{
                        $(".filter_close").show();
                    }
                    
                    //socket.emit('vschk', {'name': uid,'msg':String(results.vschk)});
                    var otr = results.articles.contents;
                    var str = '';
                    var str2 ='';
                    var pstr ='';
                    var pclick1 = '';
                    var pclick2 = '';
                    var pclick3 = '';
                    var pclick4 = '';
                    var pnum = '';
                    var pnumclick = '';
                    var mpricetotal = 0;
                    var query = results.query;
                    contract = results.contract;
                    delivery = results.delivery;
                    product = results.product;
                    centername = results.centername;
                    manager = results.manager;
                    phone = results.phone;
                    bcode = results.bcode;
                    printchk = results.printchk;
                    confirm1 = results.confirm1;
                    confirm2 = results.confirm2;
                    deliverycar = results.deliverycar;
                    console.log(results.contentssize)
                    contents_size = results.contentssize;
                    buyrentview = results.buyrentview;
                    memo = results.memo;
                    console.log(buyrentview,"buyrentview")
                    if (otr.length != 0) {
                        $('.noment').remove();
                        if(results.articles.pageNum-10<1){
                            pclick1='disabled';
                        }else{
                            pclick1='waves-effect';
                        }
                        if(results.articles.pageNum==1){
                            pclick2='disabled';
                        }else{
                            pclick2='waves-effect';
                        }
                        if(results.articles.pageNum==results.articles.pnTotal){
                            pclick3='disabled';
                        }else{
                            pclick3='waves-effect';
                        }
                        if(results.articles.pageNum+10>results.articles.pnTotal){
                            pclick4='disabled';
                        }else{
                            pclick4='waves-effect';
                        }
                        for(var j=results.articles.pnStart; j<=results.articles.pnEnd; j++){
                            if(j===results.articles.pageNum){
                                pnumclick = 'active';
                            }else{
                                pnumclick = '';
                            }
                            pnum += '<li class="'+pnumclick+'"><a class="pnumlock" style="z-index:0;" >'+j+'</a></li>';
                        }
                        pstr =
                        `<td class="orderpaging" colspan="21">
                            <div class="tablemenutop" style="text-align:center;">
                            <div class="mobile chk_print_area"><span class="chk_print" onclick="orderlookup_chk_print()">선택일괄출력</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#fff;"><select style="color:#000; height:40px; line-height:40px; width:80px; border-radius:5px;" class="order_contents_size" onchange="orderlookup(${1},'${uid}','${dates}','${datee}','${query}','${contract}','${delivery}','${product}','${centername}','${manager.replace(/ /g,'')}','${phone}','${bcode}','${printchk}','${confirm1}','${confirm2}','${deliverycar}',this.value,'${buyrentview}','${memo}')"><option value="10" selected>10</option><option value="20">20</option><option value="50">50</option></select>개씩 보기</span></div>
                            <ul class="pagination">
                                <li class="${pclick1}"><a onclick=${(results.articles.pageNum-10 >= 1) ?`orderlookup(${results.articles.pageNum-10},"${uid}","${dates}","${datee}","${query}","${contract}","${delivery}","${product}","${centername}","${manager.replace(/ /g,'')}","${phone}","${bcode}","${printchk}","${confirm1}","${confirm2}","${deliverycar}","${contents_size}","${buyrentview}","${memo}")`:''}>
                                <i class="material-icons">keyboard_double_arrow_left</i></a></li>
                                <li class="${pclick2}"><a onclick=${(results.articles.pageNum>1) ?`orderlookup(${results.articles.pageNum-1},"${uid}","${dates}","${datee}","${query}","${contract}","${delivery}","${product}","${centername}","${manager.replace(/ /g,'')}","${phone}","${bcode}","${printchk}","${confirm1}","${confirm2}","${deliverycar}","${contents_size}","${buyrentview}","${memo}")`:''}>
                                <i class="material-icons">chevron_left</i></a></li>
                                ${pnum}
                                <li class="${pclick3}"><a class="waves-effect" onclick=${(results.articles.pageNum<results.articles.pnTotal) ?`orderlookup(${results.articles.pageNum+1},"${uid}","${dates}","${datee}","${query}","${contract}","${delivery}","${product}","${centername}","${manager.replace(/ /g,'')}","${phone}","${bcode}","${printchk}","${confirm1}","${confirm2}","${deliverycar}","${contents_size}","${buyrentview}","${memo}")`:''}>
                                <i class="material-icons">chevron_right</i></a></li>
                                <li class="${pclick4}"><a class="waves-effect" onclick=${(results.articles.pageNum+10 <= results.articles.pnTotal) ?`orderlookup(${results.articles.pageNum+10},"${uid}","${dates}","${datee}","${query}","${contract}","${delivery}","${product}","${centername}","${manager.replace(/ /g,'')}","${phone}","${bcode}","${printchk}","${confirm1}","${confirm2}","${deliverycar}","${contents_size}","${buyrentview}","${memo}")`:''}>
                                <i class="material-icons">keyboard_double_arrow_right</i></a></li>
                            </ul>
                            <div class="topmenuright mobile">
                                <div style="cursor:pointer; display:none; align-items:center;">
                                    <input class="share_chk" type="checkbox" value="건강한복지용구" style="accent-color:#4CAF50; width:20px; height:20px; margin-right:5px; cursor:pointer;" onclick="event.stopPropagation()"><span style="user-select:none;" onclick="$(this).prev().click()">건강한복지용구</span>
                                </div>
                                <div style="cursor:pointer; display:none; align-items:center;">
                                    <input class="share_chk" type="checkbox" value="건강100세" style="accent-color:#4CAF50; width:20px; height:20px; margin-right:5px; cursor:pointer;" onclick="event.stopPropagation()"><span style="user-select:none;" onclick="$(this).prev().click()">건강100세</span>
                                </div>
                                <div style="cursor:pointer; display:none; align-items:center;">
                                    <input class="share_chk" type="checkbox" value="건강한가족의료기" style="accent-color:#4CAF50; width:20px; height:20px; margin-right:5px; cursor:pointer;" onclick="event.stopPropagation()"><span style="user-select:none;" onclick="$(this).prev().click()">건강한가족의료기</span>
                                </div>
                                <div style="cursor:pointer; display:none; align-items:center;">
                                    <input class="share_chk" type="checkbox" value="건강100세 의료기" style="accent-color:#4CAF50; width:20px; height:20px; margin-right:5px; cursor:pointer;" onclick="event.stopPropagation()"><span style="user-select:none;" onclick="$(this).prev().click()">건강100세 의료기</span>
                                </div>
                            </div>
                            </div>
                            </td>`
                    }
                    page_otr_data = [];
                    $.each(otr,function(i){
                        
                        mpricetotal+=parseInt(otr['SUM(money)']);
                        
                        var trcolor = 'success';
                        if(otr[i].target.replace(/[a-z0-9]|[ \[\]{}()<>?|`~!@#$%^&*-_+=,.;:\"'\\]/g,'')=='감경'){
                                trcolor = 'warning';
                        }
                        if(otr[i].target.replace(/[a-z0-9]|[ \[\]{}()<>?|`~!@#$%^&*-_+=,.;:\"'\\]/g,'')=='기초'){
                                trcolor = 'danger';
                        }
                        if(otr[i].target.replace(/[a-z0-9]|[ \[\]{}()<>?|`~!@#$%^&*-_+=,.;:\"'\\]/g,'')=='의료급여'){
                                trcolor = 'info';
                        }
                        
                        var productcode = '';
                        var productcoderesult1 = [];
                        var productcoderesult2 = [];
                        if (otr.length != 0) {
                            productcoderesult1 = [];
                            productcoderesult2 = [];
                            productcode = otr[i].product.replace(/((블루,레드)|(네이비,베이지))/g,'').replace(/\(오션블루, 버건디\)/g,'').split(',');
                            
                            productcode = productcode.filter(function (el) {
                                return el != "";
                            });
                            for(var j = 0; j< productcode.length; j++){
                                productcodesplit = productcode[j].split('|');
                                productcoderesult1.push(productcodesplit[0]);
                                productcoderesult2.push(productcodesplit[1]);
                            }
                        }

                        var producttext = '';
                        if(productcoderesult2.length!=1){
                            producttext = "외"+(productcoderesult2.length-1)+"개";
                        }else{
                            producttext = '';
                        }
                        var t = '';
                        if(otr[i].status == "back" || otr[i].status == "backend"){
                            t = '-';
                        }

                        var status = '';
                        if(otr[i].status == "end") status = '배송완료'; else if(otr[i].status == "wait") status = '배송대기'; else if(otr[i].status == "back") status = '회수중'; else if(otr[i].status == "backend") status = '회수완료';
                        var gongchk = 'close';
                        var color = 'red';
                        if(otr[i].chk=='ok') {gongchk = 'check'; color = 'green'; } else if(otr[i].chk=='n') {gongchk = 'close'; color = 'red';} else if(otr[i].chk=='cok') { gongchk = 'change_history'; color = 'green'; } else if(otr[i].chk=='vok') { gongchk = 'star'; color = 'orange'; }
                        if(otr[i].buybcode.split('|')[0]=='비급여') {gongchk = '-'; color = '#000'; }
                        var brchk = '';
                        if(otr[i].rentproduct==''){
                            brchk = '판매';
                            if(otr[i].status == "back"||otr[i].status == "backend")brchk = '판매회수';
                        }else{
                            brchk = '대여'+((otr[i].rental!='')?'</br>('+otr[i].rental+')':'');
                            if(otr[i].status == "back"||otr[i].status == "backend")brchk = brchk+'회수';
                        }
                        if(otr[i].print!=null){
                            otr[i].print = otr[i].print;
                        }else{
                            otr[i].print = '';
                        }

                        var releasetxt = otr[i].manager;
                        var releasenumber = '';
                        var releasecompany = '';
                        if(otr[i].releasenum!=''&&company==otr[i].releasenum.split('|')[0]){
                            releasetxt = '<div style="font-weight:bold;"><span style="color:#ff0000; font-weight:bold;">출고요청</span><br/>['+otr[i].company+']</div>';
                            releasenumber = otr[i].releasenum.split('|')[1];
                            releasecompany = otr[i].releasenum.split('|')[0];
                            //trcolor = '';
                        }else if(cconfirm1=='as'){
                            releasetxt = (otr[i].receiptendtxt=='')?"미처리":otr[i].receiptendtxt;
                        }
                        var deliverytxt = '';
                        if(otr[i].deliverymanager=='not'){
                            deliverytxt = '직접전달';
                        }else if(otr[i].deliverymanager=='basic'){
                            deliverytxt = '택배';
                        }else if(otr[i].deliverymanager=='none'){
                            deliverytxt = '물류';
                        }else if(otr[i].deliverymanager=='clean'){
                            deliverytxt = '소독업체';
                        }else if(otr[i].deliverymanager=='supply'){
                            deliverytxt = '공급업체';
                        }

                        let cancled = otr[i].cancled.split(' ')[0];
                        let requestmemo = otr[i].reqeustmemo;
                        let centername = ((otr[i].centername!='')?otr[i].centername:'개인');
                        if(cconfirm1=='as'){
                            $('.delrow').hide();
                            $('.tr_date').text("A/S접수일자");
                            $('.tr_centername').text("수리/보수 요청사항");
                            // $('.tr_delivery').text("처리내용");
                            $('.tr_manager').html("A/S <br/>처리내용");
                            $('.tr_status').html("A/S <br/>처리일자");
                            cancled = otr[i].receiptdate.split(' ')[0];
                            centername = otr[i].receipttxt;
                            status = (otr[i].receiptenddate=='')?'<span class="material-icons red" style="font-size:30px;">close</span>':otr[i].receiptenddate;
                        }else{
                            $('.delrow').show();
                            $('.tr_date').text("일자");
                            $('.tr_centername').text("센터명");
                            $('.tr_manager').text("담당자");
                            $('.tr_status').text("배송상태");
                        }
                        str += 
                            '<tr class="ordertr active center borderblack table-bordered '+trcolor+' tr'+otr[i].num+'" style="display:none;">'+
                            '<td class="chkbox"><input type="checkbox" class="listcheckbox listcheckbox2" name="chk" placeholder="X" value="'+i+'"></td>'+
                            '<td>'+cancled+'</td>'+
                            `<td>${otr[i].name}${(company=="주안애복지용구"||company=="우리집의료기 복지용구"||"<%=company%>"=="토마토의료기")?'<br/>('+otr[i].cnum+')':''}</td>`+
                            `<td>${otr[i].number}</td>`+
                            // '<td class="mobile">'+otr[i].regident.slice(0, 5) + '**-**</td>'+
                            '<td class="mobile">'+otr[i].regident+'</td>'+
                            '<td class="mobile">'+otr[i].target+'</td>'+
                            '<!--td class="mobile">'+otr[i].ranker+'</td>'+
                            '<td class="mobile">'+otr[i].sale+'</td-->'+
                            '<td class="productcode">'+
                                productcoderesult2[0]+ 
                                producttext + 
                                ((otr[i].src && otr[i].src.includes("이로움")) || (otr[i].src && otr[i].src.includes("가가온")) || (otr[i].src && otr[i].src.includes("보필"))? '<br/>' : '') +
                                (otr[i].src && otr[i].src.includes("이로움") ? 
                                    '<span style="background-color: ' + (otr[i].src_num ? (otr[i].src_from.split(',').includes('1') ? 'orange' : '#6b6b6b') : '#6b6b6b') + '; color: white; padding: 2px 5px; border-radius: 3px; margin-left: 5px; font-size: 11px;">이로움</span>' : 
                                '') + 
                                (otr[i].src && otr[i].src.includes("가가온") ? 
                                    '<span style="background-color: ' + (otr[i].src_num ? (otr[i].src_from.split(',').includes('0') ? 'pink' : '#6b6b6b') : '#6b6b6b') + '; color: white; padding: 2px 5px; border-radius: 3px; margin-left: 5px; font-size: 11px;">가가온</span>' : 
                                '') + 
                                (otr[i].src && otr[i].src.includes("보필") ? 
                                    '<span style="background-color: ' + (otr[i].src_num ? (otr[i].src_from.split(',').includes('2') ? 'green' : '#6b6b6b') : '#6b6b6b') + '; color: white; padding: 2px 5px; border-radius: 3px; margin-left: 5px; font-size: 11px;">보필</span>' : 
                                '') + 
                                '<input type="hidden" value="'+productcoderesult1+'">'+
                            '</td>'+
                            '<td class="cnttd">'+t+ productcode.length+'</td>'+
                            '<td class="deliverytxt mobile" style="width:150px;">'+((otr[i].address=='undefined undefined')?'미입력':otr[i].address)+'</td>'+
                            '<td class="mobile">'+((otr[i].guardname=='')?'본인':otr[i].guardname)+'</td>'+
                            '<td class="mobile">'+brchk+'</td>'+
                            // '<td class="mobile">'+((otr[i].phone1)?otr[i].phone1.replace(/[^0-9]/g,'').slice(0, 3) + '****' + otr[i].phone1.replace(/[^0-9]/g,'').slice(7):'')+'</td>'+
                            '<td class="mobile">'+((otr[i].phone1)?otr[i].phone1:'')+'</td>'+
                            '<td class="mobile">'+centername+'</td>'+
                            '<td class="mobile">'+((releasetxt=='')?otr[i].manager:releasetxt)+'</td>'+
                            '<td class="memotxt mobile">'+requestmemo+'</td>'+
                            '<td class="mobile">'+deliverytxt+'</td>'+
                            '<td class="mobile">'+status+'<input class="releasenumber" type="hidden" value="'+releasenumber+'"><input class="releasecompany" type="hidden" value="'+releasecompany+'"></td>'+
                            '<td class="sign"><span class="material-icons '+color+'" style="font-size:30px;">'+gongchk+'</span></td><td>'+((otr[i].print!='n')?otr[i].print:'')+'</td>'+'<td class="mobile">'+(otr[i].type?"<span class=\'material-icons\' style=\'color:green; font-size:30px;\'>radio_button_unchecked</span>":"")+'<td width="50px;" class="copyclip" onclick="copyclip(this)">복사</td>'+
                            '</tr>';
                        cnum_get(otr[i].number).then(cnum_res=>{
                            if(cnum_res.code==200){
                                page_cnum_data[cnum_res.data[0].number] = cnum_res.data[0].cnum;
                            }
                        });
                        page_otr_data.push(otr[i]);
                        
                    });
                    console.log("otr::::",otr)
                    
                    //document.addEventListener("DOMContentLoaded", function() {
                        
                        
                    //});
                    
                    $('.ordertable tbody').append(str);
                    $('.mprice').html(mpricetotal);
                    $('.ordertr').show();
                    Swal.close();
                    
                    const boxTit = Array.from(document.querySelectorAll('.deliverytxt'));  
                    const box = [];
                    const textSlice = function(tits, lengths){
                        tits.forEach((el, idx) => {
                            const tix = el.textContent;
                            const memberPart = tix.slice(0, lengths);
                            const t = memberPart.concat('...');
                            box.push(t);

                            tits[idx].innerHTML = box[idx];
                        });
                    };
                    textSlice(boxTit, 20);
                    
                    var tr_length = $('.table tr td').length;
                    var tab_td = $('.table tr td');//tb 테이블의 td들 불러오기
                    
                    $(tab_td).click(async function(){
                        if(($(this).parent().hasClass('tablemenu')!=1&&$(this).hasClass('chkbox')!=true&&$(this).hasClass('copyclip')!=true)){
                            //window.frames['clientmodify'].location.href("//localhost:802/ordermodify/1/<%=username%>/"+$(this).parent().children('td:eq(3)').text()+"/"+$(this).parent().prev().val());
                            var targeted_popup_class = $('[data-popup-open2]').attr('data-popup-open2');
                            $('[data-popup="' + targeted_popup_class + '"]').css('opacity', 0).show().animate({opacity: 1}, 500);
                            var releasen = $(this).parents('tr').children('td').children('.releasenumber').val();
                            var releasec = $(this).parents('tr').children('td').children('.releasecompany').val();
                            var uid2 = uid;
                            
                            if(releasen!=''&&releasec==company){
                                if(uid.includes('(')){
                                    if(uid.split('(')[1].replace(')','')==releasen){
                                        uid2 = uid;
                                    }else{
                                        uid2 = uid.split('(')[0];
                                    }
                                }else{
                                    uid2 = uid+'('+releasen+')';
                                }
                            }
                            if(guide_chk!=0){
                                $('.ordertable').css({"position":"relative","z-index":""});

                            }
                            if(guide_chk==3){
                                if($(this).parents('tr').children('td').eq(17).text()=="close"){
                                    if($(this).parents('tr').children('td').eq(10).text()=="판매"){
                                        guide_chk=3;
                                    }else{
                                        guide_chk=5;
                                    }
                                }else{
                                    guide_chk=4;
                                }
                            }

                            if(guide_chk==6){
                                if($(this).parents('tr').children('td').eq(17).text()=="close"){
                                    if($(this).parents('tr').children('td').eq(10).text()=="대여"){
                                        guide_chk=6;
                                    }else{
                                        guide_chk=7;
                                    }
                                }else{
                                    guide_chk=4;
                                }
                            }
                            
                            await $('.clientmodify').attr('src',"//localhost:802/ordermodify/1/"+uid2+"/"+$(this).parent().children('td:eq(3)').text()+"/"+$(this).parent().prev().val()+"?relid="+uid);
                            window.frames['clientmodify'].src="//localhost:802/ordermodify/1/"+uid2+"/"+$(this).parent().children('td:eq(3)').text()+"/"+$(this).parent().prev().val()+"?relid="+uid;
                            document.getElementById('clientmodify').onload = function() {
                                //$('.clientmodify').contents().find('.reloading').css({'display':'none'});
                                if(guide_chk==1){
                                    guide_on_ordermodify_1();
                                }else if(guide_chk==2){
                                    guide_on_ordermodify_1_2();
                                }else if(guide_chk==3){
                                    guide_on_ordermodify_2_2();
                                }else if(guide_chk==4){
                                    guide_on_ordermodify_2_3();
                                    Swal.fire(
                                        "계약된 주문서입니다",
                                        "미계약 주문서로 다시 학습 시도해주세요",
                                        "warning",
                                    );
                                }else if(guide_chk==5){
                                    guide_on_ordermodify_2_3();
                                    Swal.fire(
                                        "판매 주문서가 아닙니다",
                                        "판매 주문서로 다시 학습 시도해주세요",
                                        "warning",
                                    );
                                }else if(guide_chk==7){
                                    guide_on_ordermodify_2_3();
                                    Swal.fire(
                                        "대여 주문서가 아닙니다",
                                        "대여 주문서로 다시 학습 시도해주세요",
                                        "warning",
                                    );
                                }else if(guide_chk==6){
                                    guide_on_ordermodify_3_1();
                                }
                                
                            }
                            //document.getElementById('clientmodify').onload = await function() {
                                //$('[data-popup="' + targeted_popup_class + '"]').fadeIn(350);
                            window.frames['clientmodify'].focus();
                            //}
                            
                            //e.preventDefault();
                        }
                    });
                            
                    $(tab_td).hover(function(){
                        if($(this).parent().hasClass('tablemenu')!=1)$(this).parent().css({"cursor":"pointer","opacity":"0.5"});
                    }, function() {
                        if($(this).parent().hasClass('tablemenu')!=1)$(this).parent().css({"opacity":"1"});
                    });
                    for (var i = 0; i < tr_length; i++) {
                        var td2 = tab_td.eq(i);
                    }
                    
                    $.each(otr,function(i){
                        
                        str2 = `
                        <input class="copydata notecopy" type="hidden" value="`+otr[i].note+`">
                        <input class="copydata bcodecopy" type="hidden" value="`+otr[i].buybcode+`">
                        <input class="copydata pcodecopy" type="hidden" value="`+otr[i].product+`">
                        <input class="copydata requestmemocopy" type="hidden" value="`+otr[i].reqeustmemo+`">
                        <input class="copydata addresscopy" type="hidden" value="`+otr[i].address+` [`+otr[i].addressdetail+`]">
                        <input class="copydata listnum" type="hidden" value="`+otr[i].num+`">`;
                        $('.tr'+otr[i].num).before(str2);
                    });

                    cmtview().then(mres=>{
                        $(".memotxt").each(function(){
                            var length = 20; //표시할 글자수 정하기
                            $(this).each(function(){
                                if( $(this).text().length >= length ){
                                    $(this).text( $(this).text().substr(0,length)+'...') 
                                    //지정할 글자수 이후 표시할 텍스트
                                }
                            });
                        });
                    });
                    //$('.ordertr').remove();             
                }
                
                $('.search-bar').val('');
                $('#datepicker').val(dates);
                $('#datepicker2').val(datee);
                $('.orderpagingtr').append(pstr);
                if("<%=company%>"=='건강한복지용구'||"<%=company%>"=='건강100세'||"<%=company%>"=='건강100세 의료기'||"<%=company%>"=='건강한가족의료기'){
                    $('.share_chk').parent().show();
                }
                let share_chk_obj = results.share_chk_obj;
                console.log(share_chk_obj);
                if(share_chk_obj.length > 0){
                    $('.share_chk').each(function(){
                        if(share_chk_obj.length == 1){
                            if(share_chk_obj[0] == "<%=company%>"){
                                $('.chk_print').show();
                            }else{
                                if(share_chk_obj.includes($(this).val())){
                                    $('.chk_print').hide();
                                    $(this).prop('checked', true);
                                }
                            }
                        }else{
                            if(share_chk_obj.includes($(this).val())){
                                $('.chk_print').hide();
                                $(this).prop('checked', true);
                            }
                        }
                    });
                }
                $('.share_chk').each(function(){
                    if("<%=company%>"==$(this).val()){
                        $(this).prop('checked', true);
                    }
                });
                $('.order_contents_size').val(contents_size).prop("selected",true);
                if(Mobile()==true){
                    $('.mobile').css("display","none");
                    $('.pc').css("display","");
                }else{
                    $('.pc').css("display","none");
                    $('.mobile').css("display","");
                }
                setTimeout(function() {
                    $('.pnumlock').on('click',async function(){
                        console.log(contents_size)
                        await orderlookup($(this).text(),uid,dates,datee,query,contract,delivery,product,centername,manager,phone,bcode,printchk,confirm1,confirm2,deliverycar,contents_size,buyrentview,memo);
                        //$(this).parent().addClass("disabled");
                    });
                },300);
                setTimeout(function() {
                    var buttons = document.getElementsByClassName("btnlock");
                    Array.from(buttons).forEach(function(button) {
                        button.addEventListener("click", function() {
                            button.disabled = true;
                            setTimeout(function() {
                            button.disabled = false;
                            }, 500);
                        });
                    });
                }, 1000);
                $('.sort_tr td').off('click');
                $('.sort_tr td').removeClass('asc').removeClass('desc');
                $('.sort_tr td').click(function() {
                    if(!$(this).hasClass("order_chkbox")){
                        var table = $(this).closest('table');
                        var index = $(this).index();
                        var asc = $(this).hasClass('asc');
                        var rows = table.find('.ordertr').toArray().sort(nameComparer(index, asc));
                        if($(this).hasClass("sort_date")){
                            rows = table.find('.ordertr').toArray().sort(dateComparer(index, asc));
                        }else if($(this).hasClass("sort_cnt")){
                            rows = table.find('.ordertr').toArray().sort(numberComparer(index, asc));

                        }else if($(this).hasClass("sort_name")){
                            rows = table.find('.ordertr').toArray().sort(nameComparer(index, asc));

                        }

                        var inputs = [];
                        table.find('.ordertr').each(function() {
                            var $prevInputs = $(this).prevAll('input').slice(0, 6).toArray();
                            inputs = inputs.concat($prevInputs);
                    
                        });
                        console.log(inputs);
                        if (!this.asc) {
                            rows = rows.reverse();
                        }
                        for (var i = 0; i < rows.length; i++) {
                            // var $row = $(rows[i]);
                            // var prevInputs = $row.prevAll('input').slice(0, 6);
                            // console.log(i,prevInputs);
                            // var $prevRow = $row;
                            
                            //$prevRow.before(prevInputs);
                            
                            table.append(rows[i]);
                            let rows_input = '';
                            console.log(inputs);
                            inputs.forEach(function(obj,j){
                                
                                if($(rows[i]).hasClass("tr"+obj.defaultValue)){
                                    page_otr_data = moveObjectToIndex(page_otr_data,obj.defaultValue,i);
                                    console.log(obj.defaultValue)
                                    for(var k=5; k>=0; k--){
                                        $(rows[i]).before($(inputs[j+k]));
                                    }
                                }
                            });
                        }
                        $('.sort_tr td').removeClass('asc').removeClass('desc');
                        $(this).addClass(asc ? 'desc' : 'asc');
                    }
                    
                });
            }
        });
    }

    function moveObjectToIndex(arr, objectKey, targetIndex) {
        // 배열에서 이동할 객체의 인덱스 찾기
        const index = arr.findIndex(obj => obj.num == objectKey);
        console.log("index",index)
        // 객체가 배열에 있는지 확인
        if (index === -1) {
            return arr; // 객체가 배열에 없으면 원본 배열 반환
        }
        
        // 객체를 배열에서 제거
        const [objectToMove] = arr.splice(index, 1);
        
        // 객체를 배열의 targetIndex 위치에 추가
        arr.splice(targetIndex, 0, objectToMove);
        
        return arr;
    }

    function dateComparer(index, asc) {
        return function(a, b) {
        var valA = getCellValue(a, index),
            valB = getCellValue(b, index);
        var result = new Date(valA) - new Date(valB);
        return asc ? result : -result;
        };
    }

    function numberComparer(index, asc) {
        return function(a, b) {
        var valA = parseFloat(getCellValue(a, index)),
            valB = parseFloat(getCellValue(b, index));
        var result = valA - valB;
        return asc ? result : -result;
        };
    }

    function nameComparer(index, asc) {
    return function(a, b) {
        var valA = getCellValue(a, index),
        valB = getCellValue(b, index);
        var result = valA.localeCompare(valB);
        return asc ? result : -result;
    };
    }

    function getCellValue(row, index) {
        return $(row).children('td').eq(index).text();
    }

    function detailsearch(){
        const { value: formValues } = Swal.fire({
        title: '상세검색',
        html:
            '<form class="detailsearch" action="//localhost:802/order/1/'+uid+'/2019-01-01/'+$('#datepicker2').val()+'" method="get" style="position:relative;">'+
            '<div class="flex"><span style="width:100px; font-weight:bold;">계약상태</span><select id="swal-input1" class="swal2-input" name="contract"><option value="">전체</option><option value="ok">계약완료</option><option value="vok">부분계약완료</option><option value="cok">취소계약완료</option><option value="n">미계약</option></select></div>'+
            '<div class="flex"><span style="width:100px; font-weight:bold;">배송상태</span><select id="swal-input2" class="swal2-input" name="delivery"><option value="">전체</option><option value="end">배송완료</option><option value="wait">배송대기</option><option value="back">회수중</option><option value="backend">회수완료</option></select></div>'+
            '<div class="flex"><span style="width:100px; font-weight:bold;">배송방법</span><select id="swal-input9" class="swal2-input" name="deliverycar"><option value="">전체</option><option value="not">직접전달</option><option value="basic">택배</option><option value="none">물류</option><option value="clean">소독업체</option><option value="supply">공급업체</option></select></div>'+
            '<div class="flex"><span style="width:100px; font-weight:bold;">인쇄</span><select id="swal-input8" class="swal2-input" name="printchk"><option value="">선택</option><option value="pok">출력</option><option value="pno">미출력</option></select></div>'+
            '<div class="flex"><span style="width:100px; font-weight:bold;">판매구분</span><select id="swal-input10" class="swal2-input" name="buyrentview"><option value="">선택</option><option value="판매">판매</option><option value="대여">대여</option></select></div>'+
            '<div class="flex"><span style="width:100px; font-weight:bold;">품목명</span><input id="swal-input3" class="swal2-input" name="product" value=""></div>' +
            '<div class="flex"><span style="width:100px; font-weight:bold;">센터명</span><input id="swal-input4" class="swal2-input" name="centername" value="<%=centername%>"></div>' +
            '<div class="flex manager_search"><span style="width:100px; font-weight:bold;">담당자</span><input id="swal-input5" class="swal2-input" name="manager" value="<%=manager%>" readonly></div>' +
            '<div id="checkboxList" style="display: none; width:100%; position:relative;">'+
                '<div id="checkboxList2" style="display:flex; width:100%; flex-wrap:wrap;">'+
                '</div>'+
            '</div>'+
            '<div class="flex" style="position:absolute; background:#fff;"><span style="width:100px; font-weight:bold;" id="manageradd"></span></div>'+
            '<div class="flex"><span style="width:100px; font-weight:bold;">연락처</span><input id="swal-input6" class="swal2-input" name="phone" value="<%=phone%>"></div>'+
            '<div class="flex"><span style="width:100px; font-weight:bold;">바코드</span><input id="swal-input7" class="swal2-input" name="bcode" value="<%=bcode%>"></div>'+
            '<div class="flex"><span style="width:100px; font-weight:bold;">메모</span><input id="swal-input11" class="swal2-input" name="memo" value="<%=memo%>"></div>'+
            '</form>'
            
            ,
        focusConfirm: false,
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: '검색',
        cancelButtonText: '취소',
        didOpen: () => {
            if(member_target=="영업"){
                $(".manager_search").hide();
            }
            $('.swal2-input').eq(10).val(memo);
            $('.swal2-input').eq(9).val(bcode);
            $('.swal2-input').eq(8).val(phone);
            $('.swal2-input').eq(7).val(manager);
            $('.swal2-input').eq(6).val(centername);
            $('.swal2-input').eq(5).val(product);
            $('.swal2-input').eq(4).val(buyrentview).prop('selected',1);
            $('.swal2-input').eq(3).val(printchk).prop('selected',1);
            $('.swal2-input').eq(2).val(deliverycar).prop('selected',1);
            $('.swal2-input').eq(1).val(delivery).prop('selected',1);
            $('.swal2-input').eq(0).val(contract).prop('selected',1);
            
            $.each(managerarr,function(i){
                $('#checkboxList2').append('<label class="citem"><input type="checkbox" value="'+managerarr[i]+'"> '+managerarr[i]+'</label>');
            });

        

            const input = document.getElementById('swal-input5');
            const checkboxList = document.getElementById('checkboxList');
            const checkboxes = $('#checkboxList2').children('label').children('input');
            if(manager!=''){
                //console.log(manager);
                const managerchkarr = manager.replace(/ /g,'').split(',');
                managerchkarr.pop();
                $.each(checkboxes,function(i){
                    //console.log('managerchkarr',managerchkarr);
                    //console.log('checkboxes[i].value',checkboxes[i].value);
                    if (managerchkarr.includes(checkboxes[i].value)) {
                        checkboxes.eq(i).prop('checked',1);
                    }
                });
                
            }
            input.addEventListener('click', function() {
                checkboxList.style.display = 'block';
                
            });

            document.addEventListener('click', function(event) {
            if (!input.contains(event.target) && !checkboxList.contains(event.target)) {
                checkboxList.style.display = 'none';
            }
            });

            for (let i = 0; i < checkboxes.length; i++) {
                checkboxes[i].addEventListener('click', function() {
                    if (this.checked) {
                        input.value += this.value + ',';
                    } else {
                        input.value = input.value.replace(this.value + ',', '');
                    }
                });
            }
            
        },
        }).then((result) => {
            if (result.isConfirmed) {
                orderlookup(1,uid,$('#datepicker').val(),$('#datepicker2').val(),'',$('#swal-input1').val(),$('#swal-input2').val(),$('#swal-input3').val(),$('#swal-input4').val(),$('#swal-input5').val(),$('#swal-input6').val(),$('#swal-input7').val(),$('#swal-input8').val(),confirm1,confirm2,$('#swal-input9').val(),contents_size,$('#swal-input10').val(),$('#swal-input11').val());
            }
        });
        //$( '.searchdetail' ).toggle( 'slow' );
    }
    
    async function cmtview(){
        const cmtwait = await $.ajax({
            url:"/cmtview2",
            data:"company="+company,
            type:'POST',
            dataType:"JSON",
            async:1,
            success:function(results){
                if(results){
                    $.each(results.results,function(i){
                        $('.tr'+results.results[i].orderkey).children('.memotxt').text(results.results[i].text);
                    });
                }
            }
        });
        return cmtwait;
    }

    function orderup(){
        $('#clientup').attr('src', `//localhost:802/orderup/1/${uid}`);
        if(guide_chk==1){
            guide_on_orderup_1();
        }
        var targeted_popup_class = $('[data-popup-open]').attr('data-popup-open');
        $('[data-popup="' + targeted_popup_class + '"]').fadeIn(350);
    }

    function addzero(n){                        // 한자리가 되는 숫자에 "0"을 넣어주는 함수
        return n < 10 ? "0" + n: n;
    }

    function dateInputd(n,m){
        var date = new Date();
        var start = new Date(date.getTime() - n * 24 * 60 * 60 * 1000);
        var today = new Date(date.getTime() - m * 24 * 60 * 60 * 1000);
        
        if(n < 10){
            start.setMonth(start.getMonth()-n);
        }
        var yyyy = start.getFullYear();
        var mm = start.getMonth()+1;
        var dd = start.getDate();
        
        var t_yyyy = today.getFullYear();
        var t_mm = today.getMonth()+1;
        var t_dd = today.getDate();
        
        //return yyyy+'-'+addzero(mm)+'-'+addzero(dd);
        return t_yyyy+'-'+addzero(t_mm)+'-'+addzero(t_dd);
        
    }

    // function dateInputm(n,m){
    //     var date = new Date();
    //     var start = new Date(date.getTime() - n * 24 * 60 * 60 * 1000);
    //     var today = new Date(date.getTime() - m * 24 * 60 * 60 * 1000);
        
    //     // if(n < 10){
    //     //     start.setMonth(start.getMonth()-n);
    //     // }
    //     var yyyy = start.getFullYear();
    //     var mm = start.getMonth()+1;
    //     var dd = start.getDate();
        
    //     var t_yyyy = today.getFullYear();
    //     var t_mm = today.getMonth()+1;
    //     var t_dd = today.getDate();
        
    //     return yyyy+'-'+addzero(mm)+'-'+addzero(dd);
    //     //return t_yyyy+'-'+addzero(t_mm)+'-'+addzero(t_dd);
        
    // }

    function dateInputm(n, m) {
        // 현재 날짜 구하기
        var now = moment();

        // n일 전 날짜 계산
        var start = now.clone().subtract(n, 'month');
        
        // m일 전 날짜 계산
        var today = now.clone().subtract(m, 'days');

        // 날짜 형식 지정
        var yyyy = start.year();
        var mm = addzero(start.month() + 1); // month()는 0부터 시작
        var dd = addzero(start.date());

        // 결과 반환
        return yyyy + '-' + mm + '-' + dd;
    }

    function dateInputy(n,m){
        var date = new Date();
        var start = new Date(date.getTime() - n * 24 * 60 * 60 * 1000);
        var today = new Date(date.getTime() - m * 24 * 60 * 60 * 1000);
        
        if(n < 10){
            start.setMonth(start.getMonth()-n);
        }
        var yyyy = start.getFullYear();
        var mm = start.getMonth()+1;
        var dd = start.getDate();
        
        var t_yyyy = today.getFullYear();
        var t_mm = today.getMonth()+1;
        var t_dd = today.getDate();
        
        return yyyy+'-'+addzero(mm)+'-'+addzero(dd);
        //return t_yyyy+'-'+addzero(t_mm)+'-'+addzero(t_dd);
        
    }

    // let lastDate4 = new Date(year4, mon4, 0);
    // const rentmoneycal4 = lastDate4.getDate();

    function datesearch(x,obj){
        var startdt = $('#datepicker').val();
        var enddt = $('#datepicker2').val();
        $(obj).removeClass('doff');
        $(obj).addClass('don');
        $('.clientupbtn').not($(obj)).removeClass('don');
        $('.clientupbtn').not($(obj)).addClass('doff');
        if(x=='dday'){
            startdt = chan_val;
            enddt = chan_val;
        }else if(x=='yday'){
            startdt = dateInputd(0,1);
            enddt = dateInputd(0,1);
        }else if(x=='dmon'){
            let lastDate = new Date(dateInputd(0,0).split('-')[0], dateInputm(0,0).split('-')[1], 0);
            const rentmoneycal = lastDate.getDate()    
            startdt = dateInputd(0,0).split('-')[0]+'-'+dateInputm(0,0).split('-')[1]+'-01';
            enddt = dateInputd(0,0).split('-')[0]+'-'+dateInputm(0,0).split('-')[1]+'-'+rentmoneycal;
        }else if(x=='ymon'){
            let lastDate = new Date(dateInputm(1,0).split('-')[0], dateInputm(1,0).split('-')[1], 0);
            const rentmoneycal = lastDate.getDate()    
            startdt = dateInputm(1,0).split('-')[0]+'-'+dateInputm(1,0).split('-')[1]+'-01';
            enddt = dateInputm(1,0).split('-')[0]+'-'+dateInputm(1,0).split('-')[1]+'-'+rentmoneycal;
        }else if(x=='all'){
            startdt = '1999-01-01';
            enddt = '2099-01-01';
        }
        //console.log(confirm1);
        //console.log(confirm2);
        orderlookup(1,uid,startdt,enddt,query,contract,delivery,product,centername,manager,phone,bcode,printchk,confirm1,confirm2,deliverycar,contents_size,buyrentview,memo);
    //location.href='//localhost:802/order/1/'+uid+'/'+$('.date1').val()+'/'+$('.date2').val()+'?product='+product+'&centername='+centername+'&manager='+manager+'&phone='+phone+'&delivery='+delivery+'&contract='+contract+'&bcode=';
    }

    function allchk(x){
        if($(x).is(":checked")) $("input[name=chk]").prop("checked", true); else $("input[name=chk]").prop("checked", false);
    }

    function deleterow(){
        var row = [];
        $.each($('.listcheckbox2'),function(i){
            if($('.listcheckbox2').eq(i).prop("checked")){
                row.push($('.listcheckbox2').eq(i).parent().parent().prev().val());
            }
        });
        Swal.fire({
            width: '500px',
            fontsize:'15px',
            title: '정말로 삭제 하시겠습니까?',
            text: "다시 되돌릴 수 없습니다. 신중하세요.",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: '삭제',
            cancelButtonText: '취소',
            // preConfirm:()=>{
            //     Swal.fire();
            //     Swal.showLoading();
            // }
        }).then((result) => {
            if (result.isConfirmed) {
                Swal.fire({
                    allowOutsideClick:false,
                });
                Swal.showLoading();
                $.ajax({
                    url: "/deleterow",
                    data: "id=" + uid + "&row=" + row,
                    type: 'POST',
                    dataType: "JSON",
                    success: function (result) {
                        if(row.length>0){
                            var buycode = [];
                            var buybcode = [];
                            if(result.result==200){
                                // if(result.result2.length>0){
                                //     if(result.result2[0].product.includes(',')){
                                //         var buycodesplit = result.result2[0].product.split(',');
                                //         var buybcodesplit = result.result2[0].buybcode.split(',');
                                //         $.each(buycodesplit,function(i){
                                //             buycode.push(buycodesplit[i].split('|')[0]);
                                //         });
                                //         $.each(buybcodesplit,function(i){
                                //             if(buybcodesplit[i].includes('|')){
                                //                 buybcode = buybcodesplit[i].split('|');
                                //                 $.each(buybcode,function(y){
                                //                     $.ajax({
                                //                         url:"/bcodelistmodify",
                                //                         data:"company="+company+"&buybcode="+buybcode[y]+"&contractselect=cok"+"&buycode="+buycode[i],
                                //                         type:'POST',
                                //                         dataType:"JSON",
                                //                         async:false,
                                //                         success:function(results){
                                //                             if(results)console.log(results);
                                //                         }
                                //                     });
                                                
                                //                 });

                                //             }else{
                                //                 buybcode = buybcodesplit;
                                //                 $.each(buybcode,function(z){
                                //                     $.ajax({
                                //                         url:"/bcodelistmodify",
                                //                         data:"company="+company+"&buybcode="+buybcode[z]+"&contractselect=cok"+"&buycode="+buycode[z],
                                //                         type:'POST',
                                //                         dataType:"JSON",
                                //                         async:false,
                                //                         success:function(results){
                                //                             if(results)console.log(results);
                                //                         }
                                //                     });
                                //                 });
                                //             }
                                //         });
                                        
                                        
                                //     }else{
                                //         buycode.push(result.result2[0].product.split('|')[0]);
                                        
                                //         if(result.result2[0].buybcode.includes('|')){
                                //             buybcode = result.result2[0].buybcode.split('|');
                                //             $.each(buycode,function(i){
                                //                 $.each(buybcode,function(y){
                                //                     $.ajax({
                                //                         url:"/bcodelistmodify",
                                //                         data:"company="+company+"&buybcode="+buybcode[y]+"&contractselect=cok"+"&buycode="+buycode[i],
                                //                         type:'POST',
                                //                         dataType:"JSON",
                                //                         async:false,
                                //                         success:function(results){
                                //                             if(results)console.log(results);
                                //                         }
                                //                     });
                                //                 });
                                                
                                //             });

                                //         }else{
                                //             buycode.push(result.result2[0].product.split('|')[0]);
                                //             buybcode.push(result.result2[0].buybcode);
                                //                 $.each(buybcode,function(i){
                                //                     $.ajax({
                                //                         url:"/bcodelistmodify",
                                //                         data:"company="+company+"&buybcode="+buybcode[i]+"&contractselect=cok"+"&buycode="+buycode[i],
                                //                         type:'POST',
                                //                         dataType:"JSON",
                                //                         async:false,
                                //                         success:function(results){
                                //                             if(results)console.log(results);
                                //                         }
                                //                     });
                                //                 });
                                                
                                //         }
                                //     }
                                    
                                // }
                                location.reload();
                                Swal.fire(
                                    '삭제되었습니다.',
                                    '',
                                    'success'
                                );
                            }else{
                                Swal.fire(
                                    '삭제불가',
                                    `<b>출고처리된 주문서는 삭제가 불가합니다.<br/> 
                                    출고취소 작업을 진행해주세요.</b>`,
                                    'warning'
                                );
                            }
                        }else{
                            Swal.fire(
                                '삭제주문이 없습니다.',
                                '',
                                'error'
                        );
                        }
                    }
                });
            }
        });

    }

    function optionchk(x){
        var gongchk1 = 'none';
        var gongchk2 = 'none';
        var deliverychk1 = 'none';
        var deliverychk2 = 'none';
        var deliveryend1 = 'none';
        var deliveryend2 = 'none';
        var deliveryending1 = 'none';
        var deliveryending2 = 'none';
        var bchk1 = 'none';
        var bchk2 = 'none';
        var allchk = 'none' 
        var inputchk = []; 
        $.each($('.menu1'),function(i){
            if($('.menu1').eq(i).children('input').prop('checked')) inputchk.push(i);
        });
        if(!inputchk.includes(0)) deliverychk2 = 'ok'; else deliverychk2 = 'none';
        if(!inputchk.includes(4)) gongchk2 = 'ok'; else gongchk2 = 'none';
        if(!inputchk.includes(2)) deliveryend2 = 'ok'; else deliveryend2 = 'none';
        if(!inputchk.includes(1)) deliveryending2 = 'ok'; else deliveryending2 = 'none';
        if(!inputchk.includes(3)) bchk2 = 'ok'; else bchk2 = 'none';
        location.href='//localhost:802/order/1/'+uid+'/'+$('.date1').val()+'/'+$('.date2').val()+'?deliverychk2='+deliverychk2+'&gongchk2='+gongchk2+'&deliveryend2='+deliveryend2+'&deliveryending2='+deliveryending2+'&bchk2='+bchk2+'&product='+product+'&centername='+centername+'&manager='+manager+'&phone='+phone;
    }

    //optionchk();

    function docprint(){
        var i =0;

            var doctr = $('.listcheckbox').eq(1).parent().parent();
            window.frames['clientmodify'].location.reload();
            $('.clientmodify').attr('src',"//localhost:802/ordermodify/1/<%=username%>/"+doctr.children('td:eq(3)').text()+"/"+doctr.prev().val());
            window.frames['clientmodify'].src="//localhost:802/ordermodify/1/<%=username%>/"+doctr.children('td:eq(3)').text()+"/"+doctr.prev().val();
            var targeted_popup_class = $('[data-popup-open2]').attr('data-popup-open2');
            $('[data-popup="' + targeted_popup_class + '"]').fadeIn(350);
            $('#clientmodify').on( 'load', function() {
                // code will run after iframe has finished loading
                window.frames['clientmodify'].printiframe('a');

            } );

        
    }
    
    function toastm(txt,state){
        const Toast = Swal.mixin({
        toast: true,
        position: 'middle',
        showConfirmButton: false,
        timer: 1000,
        timerProgressBar: true,
        didOpen: (toast) => {
            toast.addEventListener('mouseenter', Swal.stopTimer)
            toast.addEventListener('mouseleave', Swal.resumeTimer)
        }
        });

        Toast.fire({
        icon: state,
        title: txt
        });
    }
    
    function copyclip(x){
        var ndiv = $(x).parents('tr').children('td');
        var cdiv1 = '';
        var t = '\n';
        var t1='';
        if(confirm1=='as'){
            cdiv1 += "[A/S 접수 내역]\n";
        }
        $.each(ndiv,function(i){
            if(i!=7&&i!=8&&i!=10&&i!=14&&i!=16&&i!=17&&i!=18&&i!=19&&i!=20){
                if(ndiv.eq(i).text()=='undefined undefined')ndiv.eq(i).test('미입력');
                if(i==2||i==3||i==5||i==9||i==11||i==12)t=' '; else t='\n';
                if(ndiv.eq(i).text()!='')cdiv1 += ((i==13)?'[담당자:'+ndiv.eq(i).text()+']'+t:(i==15)?'[배송방법:'+ndiv.eq(i).text()+']\n':ndiv.eq(i).text()+t);
            }
        });
        let pcode = $(x).parents('tr').prev().prev().prev().prev().val().replace(/((블루,레드)|(네이비,베이지)|(오션블루, 버건디)|(오션블루,버건디))/g,'');
        let pcodedic = {};
        let bcode = $(x).parents('tr').prev().prev().prev().prev().prev().val();
        let note = $(x).parents('tr').prev().prev().prev().prev().prev().prev().val();
        if(pcode.includes(',')){
            var pcodearr = pcode.split(',');
            var bcodearr = bcode.split(',');
            let notearr = note.split(',');
            $.each(pcodearr,function(i){
                let note_txt = '';
                if(notearr[i]!=''){
                    note_txt = ' 비고:['+notearr[i]+']';
                }
                if(pcodedic[pcodearr[i].split('|')[1]]){
                    pcodedic[pcodearr[i].split('|')[1]]=pcodedic[pcodearr[i].split('|')[1]]+'|'+bcodearr[i]+note_txt;
                }else{
                    pcodedic[pcodearr[i].split('|')[1]]=bcodearr[i]+note_txt;
                }
                
            });
        }else{
            pcodedic[pcode.split('|')[1]]=bcode;
        }
        cdiv1+=$(x).parents('tr').prev().prev().val();
        
        
        //cdiv1+='\n'+$(x).parents('tr').prev().prev().prev().val();
        $.ajax({
            url:"/cmtview",
            data:"company="+company+"&orderkey="+$(x).parents('tr').prev().val(),
            type:'POST',
            dataType:"JSON",
            async:0,
            success:function(results){
                if(results){
                    $.each(results.results,function(i){
                        cdiv1+=((i==0)?'\n\n':'')+results.results[i].manager+' : '+results.results[i].text;
                    });
                }
            }
        });
        $.each(Object.keys(pcodedic),function(i){
            if(pcodedic[Object.keys(pcodedic)[i]]!=''&&pcodedic[Object.keys(pcodedic)[i]]!=null&&pcodedic[Object.keys(pcodedic)[i]]!=undefined){
                pcodedic[Object.keys(pcodedic)[i]] = pcodedic[Object.keys(pcodedic)[i]].replace(/\|/g,',').replace(/direct/g,'미입력');
            }
            cdiv1+=((i==0)?'\n\n':'\n')+Object.keys(pcodedic)[i]+(pcodedic[Object.keys(pcodedic)[i]] ? ' ('+pcodedic[Object.keys(pcodedic)[i]]+')' : '');
        });

        if((ndiv.eq(16).text()=="회수중"||ndiv.eq(16).text()=="회수완료")&&(ndiv.eq(10).text()=="대여회수")){
            $.ajax({
                url:"/canclet",
                data:"company="+company+"&orderkey="+$(x).parents('tr').prev().val(),
                type:'POST',
                dataType:"JSON",
                async:false,
                success:function(results){
                    if(results.code==200){
                        cdiv1+='\n회수사유: '+results.results[0].canclet
                    }
                }
            })
        }
        const textArea = document.createElement('textarea');
        document.body.appendChild(textArea);
        textArea.value = cdiv1;
        textArea.select();
        document.execCommand('copy');
        toastm('복사완료','success');
    }
    
    var filesarr = new Array();
    
    function validation(obj){
            const fileTypes = ['application/pdf', 'image/gif', 'image/jpeg', 'image/png', 'image/bmp', 'image/tif', 'application/haansofthwp', 'application/x-hwp'];
            if (obj.name.length > 100) {
                alert("파일명이 100자 이상인 파일은 제외되었습니다.");
                return false;
            } else if (obj.size > (100 * 1024 * 1024)) {
                alert("최대 파일 용량인 100MB를 초과한 파일은 제외되었습니다.");
                return false;
            } else if (obj.name.lastIndexOf('.') == -1) {
                alert("확장자가 없는 파일은 제외되었습니다.");
                return false;
            } else if (!fileTypes.includes(obj.type)) {
                alert("첨부가 불가능한 파일은 제외되었습니다.");
                return false;
            } else {
                return true;
            }
    }

    function fileUpload(obj){
        for (const file of obj.files) {
            // 첨부파일 검증
            if (validation(file)) {
                // 파일 배열에 담기
                var reader = new FileReader();
                reader.onload = function () {
                    filesarr.push(file);
                };
                reader.readAsDataURL(file);
            }
        }
        var inputFile = $('.btn-file');
        //reader.readAsDataURL(inputFile[inputFile.length-1].files);
        for( var i=0; i<inputFile.length; i++ ){
            if( inputFile[i].files.length > 0 ){
                for( var j = 0; j < inputFile[i].files.length; j++ ){
                    //console.log(inputFile[i].files[j]); // 파일명 출력
                    $('.excellistbox').append('<div class="excelfiles" style="z-index:999; margin-top:2px;">' + inputFile[i].files[j].name + '<!--span style="border:1px solid #000; margin-left:10px; color:#ff0000; index:9999;" onclick="exceldel(this)" class="exceldel">&nbsp;X&nbsp;</span--><input type="hidden" value="'+i+'"></div>');
                }
            }
        }
        $('.excelcnt').text($('.excelfiles').length);
        $('.dragmark').hide();
    }

    function faxsend(){
        var faxinputchk = 0;
        var faxinput = $('iframe[name="print1"]').contents().find('.inputtxt1');
        $.each(faxinput,function(i){
            if(faxinput.eq(i).val()==''){
                faxinputchk=1;
            }
        });
        if(faxinputchk==0){
            var faxtxt = $('.on').children('span').eq(0).text();
            Swal.fire({
                title: '팩스전송 파일 선택',
                inputPlaceholder: '팩스수신번호',
                showCancelButton: true,
                confirmButtonText: '파일 보내기',
                cancelButtonColor: '#d33',
                cancelButtonText: '취소',
                html:
                    '<form class="flexcolumn faxfilef" action="/faxfileup" enctype="multipart/form-data" method="post" style="display: flex; justify-content:center; align-items:center;"><label class="faxbtn flexcolumn" for="attachment">파일선택</label><input type="hidden" name="filename2" value="number"><input type="hidden" name="filename1" value="'+company+'" id="'+company+'" multiple/>' +
                    ''+
                    '<div class="flex" id="ex9">'+
                        '<div class="excellistbox">'+
                            '<input class="btn-file d-none" type="file" style="display:none;" name="attachment" id="attachment" onchange="fileUpload(this)" multiple>'+
                            '<div class="dragmark"><span>파일 드래그 업로드</span><span class="material-icons">upload</span>'+
                            '</div>'+
                        '</div>'+
                    '</div>'+
                    '<div style="font-weight: bold;">업로드 파일 개수 : <span class="excelcnt">0</span>개</div>'+
                    '<!--button type="submit" class="btn">저장하기</button--></form>',
                didOpen: () => {
                    var sec9 = document.querySelector('#ex9');
                    var btnUpload = sec9.querySelector('.dragmark');
                    var inputFile = sec9.querySelector('input[type="file"]');
                    var uploadBox = sec9.querySelector('.excellistbox');
                    
                    uploadBox.addEventListener('dragenter', function (e) {
                        //console.log('dragenter');
                    });

                    uploadBox.addEventListener('dragover', function (e) {
                        e.preventDefault();
                        var vaild = e.dataTransfer.types.indexOf('Files') >= 0;
                        if (!vaild) {
                            this.style.backgroundColor = 'red';
                        }
                        else {
                            this.style.backgroundColor = 'green';
                        }
                    });

                    uploadBox.addEventListener('dragleave', function (e) {
                        //console.log('dragleave');
                        this.style.backgroundColor = 'white';
                    });
                    
                    uploadBox.addEventListener('drop', function (e) {
                        var data = '';
                        data = e.dataTransfer;
                        e.preventDefault();
                        //console.log('drop');
                        this.style.backgroundColor = 'white';
                        console.dir(e.dataTransfer);
                        //파일이 있는 경우 text 교체
                        //$('.btn-file').text(data.files[0] != null ? data.files[0].name : 'Drag&Drop');
                        //* Drag&Drop 된 파일을 input file의 내용으로 교체
                        $('.btn-file')[0].files = data.files;
                        /*
                        $.each(e.dataTransfer.files, function (i) {
                            data = e.dataTransfer.files[i];
                            //readExcel(data, $('.name').val(), $('.name').val(), $('.number').val(), $('.sex').val(), $('.address1').val(), $('.guardname').val(), $('.guardtarget').val(), $('.phone1').val(), $('.center').val(), $('.manager').val());
                            $('.excellistbox').append('<div class="excelfiles" style="z-index:999; margin-top:2px;">' + e.dataTransfer.files[i].name + '<!--span style="border:1px solid #000; margin-left:10px; color:#ff0000; index:9999;" onclick="exceldel(this)" class="exceldel">&nbsp;X&nbsp;</span--><input type="hidden" value="'+i+'"></div>');
                        });
                        */
                        $('.excelcnt').text($('.excelfiles').length);
                        $('.dragmark').hide();
                        console.dir(data);
                    });
                    },
                }).then((result) => {
                    if (result.isConfirmed) {
                        if(document.querySelector("input[type=file]").value!=''){
                            document.querySelector("input[type=file]").value = "";
                            var form = $('.faxfilef')[0];
                            var formData = new FormData(form);
                            for (var i = 0; i < filesarr.length; i++) {
                                // 삭제되지 않은 파일만 폼데이터에 담기
                                if (!filesarr[i].is_delete) {
                                    formData.append("attachment", filesarr[i],i);
                                }
                            }
                            $.ajax({
                                url : '/faxfileup',
                                type : 'POST',
                                dataType: 'json',
                                data : formData,
                                contentType : false,
                                processData : false,
                                async:false,
                                success: function (result) {
                                    
                                }     
                            });
                            fax1(2,filesarr);
                            //$('.faxfilef').submit();
                        }else{
                            Swal.fire({
                                icon: 'warning',
                                title: '파일이 없습니다',
                                allowOutsideClick: false,
                            });
                        }
                        
                    }
                });
        }else{
            Swal.fire({
                icon: 'warning',
                title: '미입력칸이 존재합니다',
                allowOutsideClick: false,
            });
        }

    }

    $(document).ready(function () {
        $('.clientupbtn').addClass('doff');
        if(Mobile()==true){
            $('.mobile').css("display","none");
            $('.pc').css("display","");
        }else{
            $('.pc').css("display","none");
            $('.mobile').css("display","");
        }
        $.datepicker.setDefaults({
            dateFormat: 'yy-mm-dd',
            prevText: '이전 달',
            nextText: '다음 달',
            monthNames: ['1월', '2월', '3월', '4월', '5월', '6월', '7월', '8월', '9월', '10월', '11월', '12월'],
            monthNamesShort: ['1월', '2월', '3월', '4월', '5월', '6월', '7월', '8월', '9월', '10월', '11월', '12월'],
            dayNames: ['일', '월', '화', '수', '목', '금', '토'],
            dayNamesShort: ['일', '월', '화', '수', '목', '금', '토'],
            dayNamesMin: ['일', '월', '화', '수', '목', '금', '토'],
            showMonthAfterYear: true,
            yearSuffix: '년'
        });
        $( "#datepicker, #datepicker2" ).datepicker({
            changeMonth: true,
            changeYear: true
        });

        $( "#datepicker,#datepicker2" ).datepicker( "option", "showAnim", "slide" );

        var tr_length = $('.table tr td').length;
        var tab_td = $('.table tr td');//tb 테이블의 td들 불러오기
        for (var i = 0; i < tr_length; i++) {
            var td2 = tab_td.eq(i).text();
            /*
            if(td2=="일반") $(".table tr td:eq("+i+")").parent().addClass('success');
            if(td2=="의료급여") $(".table tr td:eq("+i+")").parent().addClass('info');
            if(td2=="감경") $(".table tr td:eq("+i+")").parent().addClass('warning');
            if(td2=="기초") $(".table tr td:eq("+i+")").parent().addClass('danger');
            */
            
        }
        var tr_length = $('.table tr td').length;
        var tab_td = $('.table tr td');//tb 테이블의 td들 불러오기
        
        $(tab_td).click(function(){
            if(($(this).parent().hasClass('tablemenu')!=1&&$(this).hasClass('chkbox')!=true&&$(this).hasClass('copyclip')!=true)){
                // $('.clientmodify').attr('src',"//localhost:802/ordermodify/1/<%=username%>/"+$(this).parent().children('td:eq(3)').text()+"/"+$(this).parent().prev().val());
                window.frames['clientmodify'].src="//localhost:802/ordermodify/1/<%=username%>/"+$(this).parent().children('td:eq(3)').text()+"/"+$(this).parent().prev().val();
                window.frames['clientmodify'].location.reload();
                var targeted_popup_class = $('[data-popup-open2]').attr('data-popup-open2');
                $('[data-popup="' + targeted_popup_class + '"]').fadeIn(250);
                window.frames['clientmodify'].focus();
                //e.preventDefault();
            }
        });
                
        $(tab_td).hover(function(){
            if($(this).parent().hasClass('tablemenu')!=1)$(this).parent().css({'border':'2px solid #000000',"cursor":"pointer","opacity":"0.5"});
        }, function() {
            if($(this).parent().hasClass('tablemenu')!=1)$(this).parent().css({'border':'1px solid #bebebe',"opacity":"1"});
        });
        for (var i = 0; i < tr_length; i++) {
            var td2 = tab_td.eq(i);
        }
        
        $(".table").hide();
        $(".table").fadeIn(500);
        var pagen='<%=page%>';
        $(".pagingnum").eq(pagen-1).css("background","#000000");

        //----- OPEN
        $('[data-popup-open]').on('click', function(e) {
            var targeted_popup_class = jQuery(this).attr('data-popup-open');
            $('[data-popup="' + targeted_popup_class + '"]').fadeIn(350);

            e.preventDefault();
        });

        //----- CLOSE
        $('[data-popup-close]').on('click', function(e) {
            if("<%=company%>"!='(수)ADCO'){
                if(document.querySelector('.pagination .active a')){
                    document.querySelector('.pagination .active a').click();
                }
                
            }
            
            if(window.frames[$(this).prev().attr("id")].socket_end) window.frames[$(this).prev().attr("id")].socket_end();
            window.frames[$(this).prev().attr("id")].src="";
            var targeted_popup_class = $(this).attr('data-popup-close');
            $('[data-popup="' + targeted_popup_class + '"]').fadeOut(350);

            e.preventDefault();
        });
        let lastDate = new Date(dateInputd(0,0).split('-')[0], dateInputm(0,0).split('-')[1], 0);
        var rentmoneycal = lastDate.getDate()    
        var startdt = dateInputd(0,0).split('-')[0]+'-'+dateInputm(0,0).split('-')[1]+'-01';
        //var enddt = dateInputd(0,0).split('-')[0]+'-'+dateInputm(0,0).split('-')[1]+'-'+rentmoneycal;
        var enddt = chan_val;

        if(member_target=="영업"){
            $(".delrow").hide();
            orderlookup(1,uid,startdt,enddt,query,contract,delivery,product,centername,"<%=membername%>,",phone,bcode,printchk,confirm1,confirm2,deliverycar,contents_size,buyrentview,memo);
        }else{
            contents_size= 10;
            console.log("ordercon:",contents_size)
            orderlookup(1,uid,startdt,enddt,query,contract,delivery,product,centername,manager,phone,bcode,printchk,confirm1,confirm2,deliverycar,10,buyrentview,memo);
        }

        $( '.searchdetail' ).hide();
        $('.date1').val('<%=datetarget%>');
        $('.date2').val('<%=datetargete%>');
        $(".search-form").attr("action", "//localhost:802/order/1/"+uid+"/2020-01-01/"+chan_val);

        if(gongchk=='ok')$('.menu1').last().children('input').prop('checked',false);
        if(deliverychk=='ok')$('.menu1').eq(0).children('input').prop('checked',false);
        if(deliveryend=='ok')$('.menu1').eq(2).children('input').prop('checked',false);
        if(deliveryending=='ok')$('.menu1').eq(1).children('input').prop('checked',false);
        if(bchk2=='ok')$('.menu1').eq(3).children('input').prop('checked',false);

        //말줄임
        const boxTit = Array.from(document.querySelectorAll('.deliverytxt'));  
        const box = [];
        const textSlice = function(tits, lengths){
            tits.forEach((el, idx) => {
                const tix = el.textContent;
                const memberPart = tix.slice(0, lengths);
                const t = memberPart.concat('...');
                box.push(t);

                tits[idx].innerHTML = box[idx];
            });
        };
        textSlice(boxTit, 10);
        cmtview().then(res=>{
            $(".memotxt").each(function(){
                var length = 20; //표시할 글자수 정하기
                $(this).each(function(){
                    if( $(this).text().length >= length ){
                        $(this).text( $(this).text().substr(0,length)+'...') 
                        //지정할 글자수 이후 표시할 텍스트
                    }
                });
            });
        });

        $('.statustab td').click(function(){
            $(this).removeClass('statusoff');
            $(this).addClass('statuson');
            $('.statustab td').not($(this)).removeClass('statuson');
            if($(this).hasClass('ok')){
                orderlookup(1,uid,$('#datepicker').val(),$('#datepicker2').val(),'',contract,delivery,product,centername,manager,phone,bcode,printchk,1,0,deliverycar,contents_size,buyrentview,memo);
            }else if($(this).hasClass('not')){
                orderlookup(1,uid,$('#datepicker').val(),$('#datepicker2').val(),'',contract,delivery,product,centername,manager,phone,bcode,printchk,0,0,deliverycar,contents_size,buyrentview,memo);
            }else if($(this).hasClass('go')){
                orderlookup(1,uid,$('#datepicker').val(),$('#datepicker2').val(),'',contract,delivery,product,centername,manager,phone,bcode,printchk,1,1,deliverycar,contents_size,buyrentview,memo);
            }else if($(this).hasClass('all')){
                orderlookup(1,uid,$('#datepicker').val(),$('#datepicker2').val(),'',contract,delivery,product,centername,manager,phone,bcode,printchk,'all','',deliverycar,contents_size,buyrentview,memo);
            }else if($(this).hasClass('rel')){
                orderlookup(1,uid,$('#datepicker').val(),$('#datepicker2').val(),'',contract,delivery,product,centername,manager,phone,bcode,printchk,'rel','',deliverycar,contents_size,buyrentview,memo);
            }else if($(this).hasClass('as')){
                orderlookup(1,uid,$('#datepicker').val(),$('#datepicker2').val(),'',contract,delivery,product,centername,manager,phone,bcode,printchk,'as','',deliverycar,contents_size,buyrentview,memo);
            }

        })
    });

    function guide_exit(){
        location.reload();
    }

    function guide_toggle_on(x,y){
        guide_interval = setInterval(function() {
            x.fadeTo(500, 0.2,function(){
                $(x).css({"opacity":1});
            }).fadeTo(500, 1);
        }, 1000);
    }

    async function guide_toggle_off(guide_interval){
        await clearInterval(guide_interval);
    }

    function video_sign_url_get(video_name){
        $('.order_video').remove();
        let str = `
            <video class="order_video ${video_name}" width="1250px" height="800px" controls>
        `;
        fetch('/S3GetVideo?directory=OrderVideo&bucketname=hanq&name='+video_name+'&type=webm') // 서버에서 서명된 URL을 가져오는 엔드포인트로 수정해야 합니다.
        .then(response => response.text())
        .then(url => {
            console.log(url)
            str+=`<source id='Order_video1' class="Order_video1" src="${url}" type="video/webm">`;
            str+=`
                </video>
            `;
            $('.video_area').append(str);
        })
        .catch(error => console.error('Error fetching signed URL:', error));
    }

    function guide_on_click(obj,video_name){
        $(obj).addClass("guide_on");
        $('.guide_swal_button').not($(obj)).removeClass("guide_on");
        video_sign_url_get(video_name);
    }

    function guide_show(){
        Swal.fire({
            width:"90%",
            icon: 'info',
            title: '화면 학습 선택',
            html: `
            <div class="guide_swal" style="flex-direction:column;">
            <!--div class="guide_swal_button" onclick="guide_on_orderup()">1.주문서입력</div>
            <div class="guide_swal_button" onclick="guide_on_ordermodify(1)">2.주문서 수정</div>
            <div class="guide_swal_button" onclick="guide_on_ordermodify(2)">3.계약서출력</div>
            <div class="guide_swal_button" onclick="guide_on_ordermodify(3)">4.판매계약하기</div>
            <div class="guide_swal_button" onclick="guide_on_ordermodify(6)">5.대여계약하기</div-->
                <div style="display:flex; justify-content:space-around; width:100%;">
                    <div class="guide_swal_button guide_on" onclick="guide_on_click(this,'Order_video1')" style="font-size:18px;">1.주문 및 발주 설명</div>
                    <div class="guide_swal_button" onclick="guide_on_click(this,'Order_video2')" style="font-size:18px;">2.수급자 검색</div>
                    <div class="guide_swal_button" onclick="guide_on_click(this,'Order_video3')" style="font-size:18px;">3.날짜검색</div>
                    <div class="guide_swal_button" onclick="guide_on_click(this,'Order_video4')" style="font-size:18px;">4.상세검색</div>
                    <div class="guide_swal_button" onclick="guide_on_click(this,'Order_video5')" style="font-size:18px;">5.신규판매계약</div>
                    <div class="guide_swal_button" onclick="guide_on_click(this,'Order_video6')" style="font-size:18px;">6.신규대여계약</div>
                    <div class="guide_swal_button" onclick="guide_on_click(this,'Order_video7')" style="font-size:18px;">7.취소계약</div>
                    <div class="guide_swal_button" onclick="guide_on_click(this,'Order_video8')" style="font-size:18px;">8.계약서 출력</div>
                    <div class="guide_swal_button" onclick="guide_on_click(this,'Order_video9')" style="font-size:18px;">9.A/S 접수</div>
                    <div class="guide_swal_button" onclick="guide_on_click(this,'Order_video10')" style="font-size:18px;">10.반품주문</div>
                    <div class="guide_swal_button" onclick="guide_on_click(this,'Order_video11')" style="font-size:18px;">11.추가급여신청</div>
                </div>
                <br/>
                <div style="display:flex; justify-content:space-around; width:100%;">
                    
                    
                    <div class="guide_swal_button" onclick="guide_on_click(this,'Order_video12')" style="font-size:18px;">12.주문서<br/>소독업체/대대여업체 지정</div>
                    <div class="guide_swal_button" onclick="guide_on_click(this,'Order_video13')" style="font-size:18px;">13.주문서 메모 작성</div>
                    <div class="guide_swal_button" onclick="guide_on_click(this,'Order_video14')" style="font-size:18px;">14.엑셀변환<br/>(설치/관리/본인부담금대장)</div>
                    <div class="guide_swal_button" onclick="guide_on_click(this,'Order_video15')" style="font-size:18px;">15.공단계약여부 설명</div>
                    <div class="guide_swal_button" onclick="guide_on_click(this,'Order_video16')" style="font-size:18px;">16.미확정/확정/출고 탭 설명</div>
                    <div class="guide_swal_button" onclick="guide_on_click(this,'Order_video17')" style="font-size:18px;">17.주문/발주서 내용 복사</div>
                    <div class="guide_swal_button" onclick="guide_on_click(this,'Order_video18')" style="font-size:18px;">18.주문서 삭제</div>
                </div>
            </div>
            <br/>
            <div class="video_area" style="height:900px;">
                
            </div>

            `,
            showConfirmButton:false,
            didOpen:()=>{
                video_sign_url_get("Order_video1");
            }
        });
    }

    function guide_on_ordermodify(x){
        Swal.close();
        $('body').append("<div class='guide_exit' onclick='guide_exit()'>종료</div>");
        if($('.ordertr').length>0){
            guide_chk = x;
            var targeted_guide_class = $('[data-guide-open]').attr('data-guide-open');
            $('[data-guide="' + targeted_guide_class + '"]').fadeIn(350);
            $('.ordertable').css({"position":"relative","z-index":"9999999"});
            let text = "수정할 주문서를 클릭해주세요.";
            if(x==2){
                text = "계약서를 출력할 주문서를 클릭해주세요.";
            }else if(x==3){
                text = "공단 판매계약할 주문서를 클릭해주세요.";
            }else if(x==6){
                text = "공단 대여계약할 주문서를 클릭해주세요.";
            }
            $('body').append("<div class='guide_txt' style='top:20%'><div class='guide_txt_inner'><div>"+text+"</div></div></div>");
        }else{
            if(x==1){
                Swal.fire(
                    '주문서를 입력해주세요.',
                    '주문서를 수정할 주문내역이 없습니다.',
                    'warning'
                );
            }else if(x==2){
                
                Swal.fire(
                    '주문서를 입력해주세요.',
                    '계약서를 출력할 주문내역이 없습니다.',
                    'warning'
                );
            }else if(x==3){
                
                Swal.fire(
                    '주문서를 입력해주세요.',
                    '판매계약할 주문서가 없습니다.',
                    'warning'
                );
            }else if(x==6){
                
                Swal.fire(
                    '주문서를 입력해주세요.',
                    '대여계약할 주문서가 없습니다.',
                    'warning'
                );
            }
            
        }
        
    }

    function guide_on_ordermodify_1(){
        $('.popup2-close').hide();
        $('.guide_txt').remove();
        $('.ordertable').css({"position":"relative","z-index":""});
        let targeted_guide_class =  $('[data-guide-open]').attr('data-guide-open');
        $('[data-guide="' + targeted_guide_class + '"]').fadeOut(350);
        $('body').append("<div class='guide_txt' style='top:15%'><div class='guide_txt_inner'><div>주문서에서 정보 수정시 수급자정보가 동시 수정됩니다.</div><div class='guide_next' onclick='guide_on_ordermodify_2()'>다음></div></div></div>");
        
        let targeted_guide_class2 = window.frames['clientmodify'].$('[data-guide-open]').attr('data-guide-open');
        window.frames['clientmodify'].$('[data-guide="' + targeted_guide_class2 + '"]').fadeIn(350);
        window.frames['clientmodify'].$('.statetable').css({"position":"relative","z-index":"9999999","background":"#fff"});
    }

    function guide_on_ordermodify_2(){
        $('.guide_txt').remove();
        window.frames['clientmodify'].scrollTo(0,200); 
        window.frames['clientmodify'].$('.statetable').css({"position":"relative","z-index":""});
        window.frames['clientmodify'].$('.reqeustmemo').parent('div').parent('td').css({"position":"relative","z-index":"9999999","background":"#fff"});
        window.frames['clientmodify'].$('.reqeustmemo').parent('div').parent('td').prev().css({"position":"relative","z-index":"9999999"});

        window.frames['clientmodify'].$('.cmtboxtd').prev().css({"position":"relative","z-index":"9999999"});
        window.frames['clientmodify'].$('.cmtboxtd').css({"position":"relative","z-index":"9999999","background":"#fff"});
        $('body').append("<div class='guide_txt' style='top:30%'><div class='guide_txt_inner'><div>주문서에 메모를 등록할수있습니다.</div><div>댓글형식으로 등록되며 담당자명, 시간, 내용이 표시됩니다.</div><div>*메모를 입력해주세요</div><div style='font-size:25px;'></div></div></div>");
 
    }

    function guide_on_ordermodify_3(){
        $('.guide_txt').remove();
        window.frames['clientmodify'].scrollTo(0,200); 
        window.frames['clientmodify'].$('.statetable').css({"position":"relative","z-index":""});
        window.frames['clientmodify'].$('.reqeustmemo').parent('div').parent('td').css({"position":"relative","z-index":"","background":"#fff"});
        window.frames['clientmodify'].$('.reqeustmemo').parent('div').parent('td').prev().css({"position":"relative","z-index":""});
        window.frames['clientmodify'].$('.cmtboxtd').prev().css({"position":"relative","z-index":""});
        window.frames['clientmodify'].$('.cmtboxtd').css({"position":"relative","z-index":"","background":"#fff"});
        window.frames['clientmodify'].$('.fixcmt').eq(window.frames['clientmodify'].$('.fixcmt').length-1).next().css({"position":"relative","z-index":"9999999","background":"#fff"});
        guide_toggle_on(window.frames['clientmodify'].$('.fixcmt').eq(window.frames['clientmodify'].$('.fixcmt').length-1).next());
        $('body').append("<div class='guide_txt' style='top:30%'><div class='guide_txt_inner'><div>'고정'을 클릭해 급여제공기록지의</div><div>배송시 요청사항에 기입할수있습니다.</div><div style='font-size:25px;'></div><div class='guide_next' onclick='guide_on_ordermodify_4()'>다음></div></div></div>");
    }


    function guide_on_ordermodify_4(){
        $('.guide_txt').remove();
        window.frames['clientmodify'].$('.fixcmt').eq(window.frames['clientmodify'].$('.fixcmt').length-1).next().css({"position":"relative","z-index":""});
        window.frames['clientmodify'].scrollTo(0,0); 
        window.frames['clientmodify'].$('.bcodeinput').css({"position":"relative","z-index":"9999999","background":"#fff"});
        guide_toggle_off(guide_interval);
        $('body').append("<div class='guide_txt' style='top:15%'><div class='guide_txt_inner'><div>품목의 바코드를 입력/수정 할수있습니다.</div><div style='font-size:25px;'></div><div class='guide_next' onclick='guide_on_ordermodify_5()'>다음></div></div></div>");
    
    }

    function guide_on_ordermodify_5(){
        $('.guide_txt').remove();
        window.frames['clientmodify'].$('.bcodeinput').css({"position":"relative","z-index":""});
        window.frames['clientmodify'].$('.bcodechk').css({"position":"relative","z-index":"9999999","background":"#fff"});
        guide_toggle_on(window.frames['clientmodify'].$('.bcodechk'));
        $('body').append("<div class='guide_txt' style='top:50%'><div class='guide_txt_inner'><div>'바코드검사' 버튼을 클릭해 입력한 바코드를 검사할수있습니다.</div><div>(정상바코드, 판매된 바코드 등)</div><div style='font-size:25px;'>'바코드검사를 진행해주세요'</div></div></div>");
    
    }

    function guide_on_ordermodify_6(){
        $('.guide_txt').remove();
        window.frames['clientmodify'].$('.bcodechk').css({"position":"relative","z-index":""});
        guide_toggle_off(guide_interval);
        let targeted_guide_class =  window.frames['clientmodify'].$('[data-guide-open]').attr('data-guide-open');
        window.frames['clientmodify'].$('[data-guide="' + targeted_guide_class + '"]').fadeOut(350);
        $('body').append("<div class='guide_txt' style='top:20%'><div class='guide_txt_inner'><div>바코드 검사 결과가 출력됩니다.</div><div>확인버튼을 클릭해주세요</div></div></div>");
    
    }

    function guide_on_ordermodify_7(){
        $('.guide_txt').remove();
        let targeted_guide_class =  window.frames['clientmodify'].$('[data-guide-open]').attr('data-guide-open');
        window.frames['clientmodify'].$('[data-guide="' + targeted_guide_class + '"]').fadeIn(350);
        window.frames['clientmodify'].$('.footer').css({"z-index":"9999999","background":"#fff"});
        window.frames['clientmodify'].$('.footerbutton1').css({"opacity":"0"});
        window.frames['clientmodify'].$('.product_return_btn, .confirm1btn, .confirm2btn, .confirm3btn, .confirm4btn').css({"opacity":"0"});
        guide_toggle_on(window.frames['clientmodify'].$('#submit'));
        window.frames['clientmodify'].$('#submit').css({"z-index":"9999999"});
        $('body').append("<div class='guide_txt' style='top:50%'><div class='guide_txt_inner'><div>내용 수정 완료 후 '주문서수정' 버튼을 클릭해주세요</div></div></div>");
    }

    function guide_on_ordermodify_8(){
        $('.popup2-close').show();
        guide_chk=0;
        $('.guide_txt').remove();
        guide_toggle_off(guide_interval);
        let targeted_guide_class =  window.frames['clientmodify'].$('[data-guide-open]').attr('data-guide-open');
        window.frames['clientmodify'].$('[data-guide="' + targeted_guide_class + '"]').fadeOut(350);
        window.frames['clientmodify'].$('.footer').css({"z-index":""});
        window.frames['clientmodify'].$('.footerbutton1').css({"opacity":"1"});
        window.frames['clientmodify'].$('.product_return_btn, .confirm1btn, .confirm2btn, .confirm3btn, .confirm4btn').css({"opacity":"1"});
        window.frames['clientmodify'].$('#submit').css({"z-index":""});
    }



    function guide_on_ordermodify_1_2(){
        $('.popup2-close').hide();
        $('.guide_txt').remove();
        $('.ordertable').css({"position":"relative","z-index":""});
        let targeted_guide_class =  $('[data-guide-open]').attr('data-guide-open');
        $('[data-guide="' + targeted_guide_class + '"]').fadeOut(350);
        let targeted_guide_class2 =  window.frames['clientmodify'].$('[data-guide-open]').attr('data-guide-open');
        window.frames['clientmodify'].$('[data-guide="' + targeted_guide_class2 + '"]').fadeIn(350);
        window.frames['clientmodify'].$('.footer').css({"z-index":"9999999","background":"#fff"});
        guide_toggle_on(window.frames['clientmodify'].$('.print1').parent('div'));
        window.frames['clientmodify'].$('.footerbutton1').not($('.print1').parent('div')).css({"opacity":"0"});
        window.frames['clientmodify'].$('.confirm2btn').parent('div').css({"opacity":"0"});
        
        window.frames['clientmodify'].$('.print1').parent('div').css({"z-index":"9999999","background":"#fff"});
        
        $('body').append("<div class='guide_txt' style='top:50%'><div class='guide_txt_inner'><div>'계약서출력' 버튼을 클릭해주세요</div></div></div>");
    
    }

    function guide_on_ordermodify_1_3(){
        $('.guide_txt').remove();
        window.frames['clientmodify'].$('.popup4-close').hide();
        let targeted_guide_class =  window.frames['clientmodify'].$('[data-guide-open]').attr('data-guide-open');
        window.frames['clientmodify'].$('[data-guide="' + targeted_guide_class + '"]').fadeOut(350);
        let targeted_guide_class2 =  window.frames['clientmodify'].$('[data-guide-open2]').attr('data-guide-open2');
        window.frames['clientmodify'].$('[data-guide2="' + targeted_guide_class2 + '"]').fadeIn(350);
        window.frames['clientmodify'].$('.footer').css({"z-index":"","background":"#fff"});
        guide_toggle_off(guide_interval);
        window.frames['clientmodify'].$('.footerbutton1').not($('.print1').parent('div')).css({"opacity":"1"});
        window.frames['clientmodify'].$('.confirm2btn').parent('div').css({"opacity":"1"});
        window.frames['clientmodify'].$('.print1').parent('div').css({"z-index":""});
        window.frames['clientmodify'].$('.arrow').css({"z-index":"9999999"});
        guide_toggle_on(window.frames['clientmodify'].$('.arrow'));
        $('body').append("<div class='guide_txt' style='top:10%'><div class='guide_txt_inner'><div>주문서에 입력된 내역으로 복지용구 계약서가 자동생성됩니다.</div><div>화살표 버튼을 클릭해 계약서를 확인할수있습니다.</div><div class='guide_next' onclick='guide_on_ordermodify_1_4()'>다음></div></div></div>");
    }


    function guide_on_ordermodify_1_4(){
        $('.guide_txt').remove();
        guide_toggle_off(guide_interval);
        window.frames['clientmodify'].$('.buybtn').parent('div').css({"opacity":0});
        window.frames['clientmodify'].$('.print1footer').css({"z-index":"9999999","background":"#fff"});
        guide_toggle_on(window.frames['clientmodify'].$('.print1footer').children('div').eq(1).children('div').eq(2).add(window.frames['clientmodify'].$('.print1footer').children('div').eq(1).children('div').eq(3)));
        //guide_toggle_on(window.frames['clientmodify'].$('.print1footer').children('div').eq(1).children('div').eq(3));
        window.frames['clientmodify'].$('.print1footer').children('div').eq(1).children('div').not(window.frames['clientmodify'].$('.print1footer').children('div').eq(1).children('div').eq(2)).not(window.frames['clientmodify'].$('.print1footer').children('div').eq(1).children('div').eq(3)).css({"opacity":"0"});
        $('body').append("<div class='guide_txt' style='top:10%'><div class='guide_txt_inner'><div>팝업창 하단에서 '전체프린트','한장프린트'</div><div>기능을 사용할수있습니다.</div><div>'전체프린트'는 제공되는 계약서 전체를 출력합니다.</div><div>'한장프린트'는 현재 선택한 계약서만 출력합니다.</div><div class='guide_next' onclick='guide_on_ordermodify_1_5()'>종료</div></div></div>");
    }

    function guide_on_ordermodify_1_5(){
        guide_chk=0;
        $('.popup2-close').show();
        window.frames['clientmodify'].$('.popup4-close').show();
        $('.guide_txt').remove();
        window.frames['clientmodify'].$('.buybtn').parent('div').css({"opacity":1});
        let targeted_guide_class =  window.frames['clientmodify'].$('[data-guide-open2]').attr('data-guide-open2');
        window.frames['clientmodify'].$('[data-guide2="' + targeted_guide_class + '"]').fadeOut(350);
        guide_toggle_off(guide_interval);
        window.frames['clientmodify'].$('.print1footer').children('div').eq(1).children('div').not(window.frames['clientmodify'].$('.print1footer').children('div').eq(1).children('div').eq(2)).not(window.frames['clientmodify'].$('.print1footer').children('div').eq(1).children('div').eq(3)).css({"opacity":"1"});
    }

    function guide_on_ordermodify_2_2(){
        $('.popup2-close').hide();
        $('.guide_txt').remove();
        $('.ordertable').css({"position":"relative","z-index":""});
        let targeted_guide_class =  $('[data-guide-open]').attr('data-guide-open');
        $('[data-guide="' + targeted_guide_class + '"]').fadeOut(350);
        let targeted_guide_class2 =  window.frames['clientmodify'].$('[data-guide-open]').attr('data-guide-open');
        window.frames['clientmodify'].$('[data-guide="' + targeted_guide_class2 + '"]').fadeIn(350);
        window.frames['clientmodify'].$('.footer').css({"z-index":"9999999","background":"#fff"});
        guide_toggle_on(window.frames['clientmodify'].$('.footerbutton1').eq(0));
        window.frames['clientmodify'].$('.footerbutton1').not(window.frames['clientmodify'].$('.footerbutton1').eq(0)).css({"opacity":"0"});
        window.frames['clientmodify'].$('.confirm2btn').parent('div').css({"opacity":"0"});
        
        
        $('body').append("<div class='guide_txt' style='top:50%'><div class='guide_txt_inner'><div>'공단계약하기' 버튼을 클릭해주세요</div></div></div>");
    }

    function guide_on_ordermodify_2_3(){
        $('.popup2-close').show();
        guide_chk=0;
        $('.guide_txt').remove();
        var targeted_guide_class = $('[data-guide-open]').attr('data-guide-open');
        $('[data-guide="' + targeted_guide_class + '"]').fadeOut(350);
        $('.ordertable').css({"position":"","z-index":""});
    }

    function guide_on_ordermodify_2_4(){
        $('.guide_txt').remove();
        guide_toggle_off(guide_interval);
        let targeted_guide_class2 =  window.frames['clientmodify'].$('[data-guide-open]').attr('data-guide-open');
        window.frames['clientmodify'].$('[data-guide="' + targeted_guide_class2 + '"]').fadeOut(350);
        window.frames['clientmodify'].$('.footer').css({"z-index":""});
        window.frames['clientmodify'].$('.footerbutton1').not(window.frames['clientmodify'].$('.footerbutton1').eq(0)).css({"opacity":"1"});
        window.frames['clientmodify'].$('.confirm2btn').parent('div').css({"opacity":"1"});
        $('body').append("<div class='guide_txt' style='top:20%'><div class='guide_txt_inner'><div>계약할 품목의 바코드와 계약일자를 확인해주세요</div><div class='guide_next' onclick='guide_on_ordermodify_2_5()'>다음></div></div></div>");
    }

    function guide_on_ordermodify_2_5(){
        $('.guide_txt').remove();
        window.frames['clientmodify'].Swal.enableButtons();
        guide_toggle_on(window.frames['clientmodify'].$('.swal2-confirm'));
        $('body').append("<div class='guide_txt' style='top:20%'><div class='guide_txt_inner'><div>'계약' 버튼을 클릭해주세요</div></div></div>");
    }

    function guide_on_ordermodify_2_6(){
        $('.guide_txt').remove();
        guide_toggle_off(guide_interval);
        $('body').append("<div class='guide_txt' style='top:20%'><div class='guide_txt_inner'><div>공단계약진행중입니다</div><div>계약 결과 응답을 기다리시면 됩니다.</div></div></div>");
    }

    function guide_on_ordermodify_3_1(){
        $('.popup2-close').hide();
        $('.guide_txt').remove();
        $('.ordertable').css({"position":"relative","z-index":""});
        let targeted_guide_class =  $('[data-guide-open]').attr('data-guide-open');
        $('[data-guide="' + targeted_guide_class + '"]').fadeOut(350);
        let targeted_guide_class2 =  window.frames['clientmodify'].$('[data-guide-open]').attr('data-guide-open');
        window.frames['clientmodify'].$('[data-guide="' + targeted_guide_class2 + '"]').fadeIn(350);
        window.frames['clientmodify'].$('.footer').css({"z-index":"9999999","background":"#fff"});
        window.frames['clientmodify'].$('.footerbutton1').not(window.frames['clientmodify'].$('.footerbutton1').eq(0)).css({"opacity":"0"});
        window.frames['clientmodify'].$('.confirm2btn').parent('div').css({"opacity":"0"});
        guide_toggle_on(window.frames['clientmodify'].$('.footerbutton1').eq(0));
        
        $('body').append("<div class='guide_txt' style='top:50%'><div class='guide_txt_inner'><div>'공단계약하기' 버튼을 클릭해주세요</div></div></div>");
    }


    function guide_on_ordermodify_3_2(){
        $('.guide_txt').remove();
        guide_toggle_off(guide_interval);
        let targeted_guide_class2 =  window.frames['clientmodify'].$('[data-guide-open]').attr('data-guide-open');
        window.frames['clientmodify'].$('[data-guide="' + targeted_guide_class2 + '"]').fadeOut(350);
        window.frames['clientmodify'].$('.footer').css({"z-index":""});
        window.frames['clientmodify'].$('.footerbutton1').not(window.frames['clientmodify'].$('.footerbutton1').eq(0)).css({"opacity":"1"});
        window.frames['clientmodify'].$('.confirm2btn').parent('div').css({"opacity":"1"});
        $('body').append("<div class='guide_txt' style='top:20%'><div class='guide_txt_inner'><div>대여주문서는 대여주문서로 이동해야합니다.</div><div>'대여계약이동▶' 버튼을 클릭해주세요</div></div></div>");
    }

    function guide_on_ordermodify_3_3(){
        $('.guide_txt').remove();
        let targeted_guide_class2 =  window.frames['clientmodify'].$('[data-guide-open]').attr('data-guide-open');
        window.frames['clientmodify'].$('[data-guide="' + targeted_guide_class2 + '"]').fadeIn(350);
        window.frames['clientmodify'].$('.maincontainer-3').children('table').eq(0).css({"z-index":"9999999","background":"#fff"});
        
        $('body').append("<div class='guide_txt' style='top:15%'><div class='guide_txt_inner'><div>대여주문서에선 수급자의 현재 대여 내역을 확인할수있습니다.</div><div class='guide_next' onclick='guide_on_ordermodify_3_4()'>다음></div></div></div>");
    }



    function guide_on_ordermodify_3_4(){
        $('.guide_txt').remove();
        window.frames['clientmodify'].$('.maincontainer-3').children('table').eq(0).css({"z-index":"","background":"#fff"});
        window.frames['clientmodify'].$('.maincontainer-3').children('table').eq(2).css({"z-index":"9999999","background":"#fff"});
        $('body').append("<div class='guide_txt' style='top:15%'><div class='guide_txt_inner'><div>대여계약 가능 적용구간은</div><div>품목별 계약가능일과 내구연한만료일이 포함되어 표시됩니다.</div><div class='guide_next' onclick='guide_on_ordermodify_3_5()'>다음></div></div></div>");
    }

    function guide_on_ordermodify_3_5(){
        $('.guide_txt').remove();
        window.frames['clientmodify'].$('.maincontainer-3').children('table').eq(0).css({"z-index":"9999999","background":"#fff"});
        window.frames['clientmodify'].$('.maincontainer-3').children('table').eq(2).css({"z-index":"9999999","background":"#fff"});
        window.frames['clientmodify'].$('.rentdatebutton').css({"z-index":"9999999","background":"#fff"});
        guide_toggle_on(window.frames['clientmodify'].$('.rentdatebutton'));
        $('body').append("<div class='guide_txt' style='top:10%'><div class='guide_txt_inner'><div>계약종료일을 직접 입력하시거나</div><div>'적용' 버튼을 클릭해 적용구간 단위로 종료일을 지정할수있습니다.</div><div>'계약종료일을 지정해주세요.'</div><div class='guide_next' onclick='guide_on_ordermodify_3_6()'>다음></div></div></div>");
    }

    function guide_on_ordermodify_3_6(){
        $('.guide_txt').remove();
        window.frames['clientmodify'].$('.maincontainer-3').children('table').eq(0).css({"z-index":"","background":"#fff"});
        window.frames['clientmodify'].$('.maincontainer-3').children('table').eq(2).css({"z-index":"","background":"#fff"});
        window.frames['clientmodify'].$('.rentdatebutton').css({"z-index":"","background":"#fff"});
        guide_toggle_off(guide_interval);
        let targeted_guide_class =  $('[data-guide-open]').attr('data-guide-open');
        $('[data-guide="' + targeted_guide_class + '"]').fadeOut(350);
        let targeted_guide_class2 =  window.frames['clientmodify'].$('[data-guide-open]').attr('data-guide-open');
        window.frames['clientmodify'].$('[data-guide="' + targeted_guide_class2 + '"]').fadeIn(350);
        window.frames['clientmodify'].$('.footer').css({"z-index":"9999999","background":"#fff"});
        window.frames['clientmodify'].$('.footerbutton1').not(window.frames['clientmodify'].$('.footerbutton1').eq(0)).css({"opacity":"0"});
        window.frames['clientmodify'].$('.back,.backcancle').css({"opacity":"0"});
        guide_toggle_on(window.frames['clientmodify'].$('.footerbutton1').eq(0));
        $('body').append("<div class='guide_txt' style='top:50%'><div class='guide_txt_inner'><div>'공단계약하기' 버튼을 클릭해주세요</div></div></div>");
    }

    function guide_on_ordermodify_3_7(){
        $('.guide_txt').remove();
        guide_toggle_off(guide_interval);
        let targeted_guide_class2 =  window.frames['clientmodify'].$('[data-guide-open]').attr('data-guide-open');
        window.frames['clientmodify'].$('[data-guide="' + targeted_guide_class2 + '"]').fadeOut(350);
        window.frames['clientmodify'].$('.footer').css({"z-index":""});
        window.frames['clientmodify'].$('.footerbutton1').not(window.frames['clientmodify'].$('.footerbutton1').eq(0)).css({"opacity":"1"});
        window.frames['clientmodify'].$('.back,.backcancle').css({"opacity":"1"});
        $('body').append("<div class='guide_txt' style='top:10%'><div class='guide_txt_inner'><div>계약할 품목의 바코드와 계약일자 확인후</div><div>소독내역을 입력해주세요.</div><div style='font-size:25px;'>*마지막 입력값으로 자동저장됩니다.</div><div></div><div class='guide_next' onclick='guide_on_ordermodify_3_8()'>다음></div></div></div>");
    }

    function guide_on_ordermodify_3_8(){
        $('.guide_txt').remove();
        window.frames['clientmodify'].Swal.enableButtons();
        guide_toggle_on(window.frames['clientmodify'].$('.swal2-confirm'));
        $('body').append("<div class='guide_txt' style='top:20%'><div class='guide_txt_inner'><div>'계약' 버튼을 클릭해주세요</div></div></div>");
    }

    function guide_on_ordermodify_3_9(){
        $('.guide_txt').remove();
        guide_toggle_off(guide_interval);
        $('body').append("<div class='guide_txt' style='top:20%'><div class='guide_txt_inner'><div>공단계약진행중입니다</div><div>계약 결과 응답을 기다리시면 됩니다.</div></div></div>");
    }


    



    function guide_on_orderup(){
        Swal.close();
        guide_chk = 1;
        var targeted_guide_class = $('[data-guide-open]').attr('data-guide-open');
        $('[data-guide="' + targeted_guide_class + '"]').fadeIn(350);
        $('.clientup').children('span').eq(0).css({"position":"relative","z-index":"9999999"});
        guide_toggle_on($('.clientup').children('span').eq(0));
        $('body').append("<div class='guide_exit' onclick='guide_exit()'>종료</div>");
        $('body').append("<div class='guide_txt' style='top:40%'><div class='guide_txt_inner'><div>'주문서입력' 버튼을 클릭해주세요.</div></div></div>");
    }

    function guide_on_orderup_1(){
        $('.popup-close').hide();
        $('.guide_txt').remove();
        $('.clientup').children('span').eq(0).css({"position":"relative","z-index":"0"});
        guide_toggle_off(guide_interval);
        var targeted_guide_class =  $('[data-guide-open]').attr('data-guide-open');
        $('[data-guide="' + targeted_guide_class + '"]').fadeOut(350);
        $('body').append("<div class='guide_txt' style='top:40%'><div class='guide_txt_inner'><div>'수급자불러오기' 버튼을 클릭해주세요.</div></div></div>");
        document.getElementById('clientup').onload = async function() {
          var targeted_guide_class = window.frames['clientup'].$('[data-guide-open]').attr('data-guide-open');
          window.frames['clientup'].$('[data-guide="' + targeted_guide_class + '"]').fadeIn(350);
          window.frames['clientup'].$('.lastlookup').css({"position":"relative","z-index":"9999999"});
          guide_toggle_on(window.frames['clientup'].$('.lastlookup'));
        }
    }

    function guide_on_orderup_2(){
        window.frames['clientup'].$('.popup-close3').hide();
        $('.guide_txt').remove();
        window.frames['clientup'].$('.lastlookup').css({"position":"relative","z-index":"0"});
        guide_toggle_off(guide_interval);
        $('body').append("<div class='guide_txt' style='top:20%'><div class='guide_txt_inner'><div>주문서를 입력할 수급자를 선택해주세요</div></div></div>");
        var targeted_guide_class = window.frames['clientup'].$('[data-guide-open]').attr('data-guide-open');
        window.frames['clientup'].$('[data-guide="' + targeted_guide_class + '"]').fadeOut(350);    
    }

    function guide_on_orderup_3(){
        $('.guide_txt').remove();
        window.frames['clientup'].$('.nowdate_div, .nextdate_div').css({"position":"relative","z-index":"9999999","background":"#fff"});
        $('body').append("<div class='guide_txt' style='top:40%'><div class='guide_txt_inner'><div>선택한 수급자의 현재 적용구간,</div><div>다음 적용구간 정보가 제공됩니다.</div><div class='guide_next' onclick='guide_on_orderup_4()'>다음></div></div></div>");
        var targeted_guide_class = window.frames['clientup'].$('[data-guide-open]').attr('data-guide-open');
        window.frames['clientup'].$('[data-guide="' + targeted_guide_class + '"]').fadeIn(350);    
    }

    function guide_on_orderup_4(){
        $('.guide_txt').remove();
        window.frames['clientup'].$('.lastlookupdiv, .nowdate_div, .nextdate_div').css({"position":"relative","z-index":"0"});

        window.frames['clientup'].$('.statetable').css({"position":"relative","z-index":"9999999","background":"#fff"});
        $('body').append("<div class='guide_txt' style='top:40%'><div class='guide_txt_inner'><div>수급자 등록시 입력한 정보가</div><div>자동기입됩니다.</div><div style='font-size:25px;'>*주문서에서 정보 수정시 수급자정보가 동시 수정됩니다.</div><div class='guide_next' onclick='guide_on_orderup_5()'>다음></div></div></div>");
 
    }

    function guide_on_orderup_5(){
        $('.guide_txt').remove();
        window.frames['clientup'].$('.statetable').css({"position":"relative","z-index":""});
        window.frames['clientup'].$('.deliverymanager').parent('td').css({"position":"relative","z-index":"9999999","background":"#fff"});
        window.frames['clientup'].$('.deliverymanager').parent('td').prev().css({"position":"relative","z-index":"9999999"});
        $('body').append("<div class='guide_txt' style='top:40%'><div class='guide_txt_inner'><div>배송방법은 물류,택배,직접전달이 있으며</div><div>'물류'는 배송관리에 등록됩니다.</div><div>'직접전달'은 배송상태가 배송완료로 처리됩니다.</div><div style='font-size:25px;'>*기본값은 '물류' 입니다.</div><div class='guide_next' onclick='guide_on_orderup_6()'>다음></div></div></div>");
 
        window.frames['clientup'].scrollTo(0,200); 
    }

    function guide_on_orderup_6(){
        $('.guide_txt').remove();
        window.frames['clientup'].$('.deliverymanager').parent('td').css({"position":"relative","z-index":"0","background":"#fff"});
        window.frames['clientup'].$('.deliverymanager').parent('td').prev().css({"position":"relative","z-index":"0"});
        window.frames['clientup'].$('.releasenum').parent('td').css({"position":"relative","z-index":"9999999","background":"#fff"});
        window.frames['clientup'].$('.releasenum').parent('td').prev().css({"position":"relative","z-index":"9999999"});
        $('body').append("<div class='guide_txt' style='top:40%'><div class='guide_txt_inner'><div>출고요청은 공유업체 등록시 사용가능합니다.</div><div class='guide_next' onclick='guide_on_orderup_7()'>다음></div></div></div>");
   
        window.frames['clientup'].scrollTo(0,200); 
    }

    function guide_on_orderup_7(){
        $('.guide_txt').remove();
        window.frames['clientup'].$('.releasenum').parent('td').css({"position":"relative","z-index":"0","background":"#fff"});
        window.frames['clientup'].$('.releasenum').parent('td').prev().css({"position":"relative","z-index":"0"});
        window.frames['clientup'].$('.deliverytime,.deliverytime2').parent('td').css({"position":"relative","z-index":"9999999","background":"#fff"});
        window.frames['clientup'].$('.deliverytime,.deliverytime2').parent('td').prev().css({"position":"relative","z-index":"9999999"});
        
        $('body').append("<div class='guide_txt' style='top:40%'><div class='guide_txt_inner'><div>배송요청일/시 지정이 가능합니다.</div><div>배송요청한 날짜와 시간(오전/오후)를 지정할수있습니다.</div><div class='guide_next' onclick='guide_on_orderup_8()'>다음></div></div></div>");
  
        window.frames['clientup'].scrollTo(0,200); 
    }

    function guide_on_orderup_8(){
        $('.guide_txt').remove();
        window.frames['clientup'].$('.deliverytime,.deliverytime2').parent('td').css({"position":"relative","z-index":"0","background":"#fff"});
        window.frames['clientup'].$('.deliverytime,.deliverytime2').parent('td').prev().css({"position":"relative","z-index":"0"});
        window.frames['clientup'].$('.reqeustmemo').parent('td').css({"position":"relative","z-index":"9999999","background":"#fff"});
        window.frames['clientup'].$('.reqeustmemo').parent('td').prev().css({"position":"relative","z-index":"9999999"});
        $('body').append("<div class='guide_txt' style='top:40%'><div class='guide_txt_inner'><div>각 주문서마다 댓글형식의 메모를 등록할수있습니다.</div><div class='guide_next' onclick='guide_on_orderup_9()'>다음></div></div></div>");
 
        window.frames['clientup'].scrollTo(0,200); 
    }

    function guide_on_orderup_9(){
        $('.guide_txt').remove();
        window.frames['clientup'].$('.reqeustmemo').parent('td').css({"position":"relative","z-index":"0","background":"#fff"});
        window.frames['clientup'].$('.reqeustmemo').parent('td').prev().css({"position":"relative","z-index":"0"});
        window.frames['clientup'].$('.addbox,.addboxt').css({"position":"relative","z-index":"9999999"});
        window.frames['clientup'].$('.addboxt').css({"position":"relative","z-index":"9999999","background":"#fff"});
        guide_toggle_on(window.frames['clientup'].$('.addbox'));
        $('body').append("<div class='guide_txt' style='top:40%'><div class='guide_txt_inner'><div>주문서 기본정보를 확인했다면 품목을 추가해야합니다.</div><div>'품목 추가하기' 버튼을 클릭해주세요.</div></div></div>");
    }

    function guide_on_orderup_10(){
        window.frames['clientup'].$('.popup2-close3').hide();
        $('.guide_txt').remove();
        guide_toggle_off(guide_interval);
        var targeted_guide_class = window.frames['clientup'].$('[data-guide-open]').attr('data-guide-open');
        window.frames['clientup'].$('[data-guide="' + targeted_guide_class + '"]').fadeOut(350);
        window.frames['clientup'].$('.addbox,.addboxt').css({"position":"relative","z-index":"0"});
        window.frames['clientup'].$('.addboxt').css({"position":"relative","z-index":"0","background":"#fff"});
        $('body').append("<div class='guide_txt' style='top:75%'><div class='guide_txt_inner'><div>주문하실 품목을 검색하고 선택해주세요.</div><div>품목 클릭마다 주문서에 품목이 추가됩니다.</div><div class='guide_next' onclick='guide_on_orderup_12()'>다음></div></div></div>");
    }

    function guide_on_orderup_12(){
        if(window.frames['clientup'].$('.removebtn').length>0){
            $('.guide_txt').remove();
            let targeted_popup_class1 = window.frames['clientup'].$('[data-popup-close2]').attr('data-popup-close2');
            window.frames['clientup'].$('[data-popup="' + targeted_popup_class1 + '"]').fadeOut(350);
            var targeted_guide_class = window.frames['clientup'].$('[data-guide-open]').attr('data-guide-open');
            window.frames['clientup'].$('[data-guide="' + targeted_guide_class + '"]').fadeIn(350);   
            window.frames['clientup'].scrollTo(0,0); 
            window.frames['clientup'].$('.productload').parent("table").css({"position":"relative","z-index":"9999999","background":"#fff"});
            $('body').append("<div class='guide_txt' style='top:60%'><div class='guide_txt_inner'><div>선택한 품목 목록이 해당 위치에 표시됩니다.</div><div class='guide_next' onclick='guide_on_orderup_13()'>다음></div></div></div>");
        }else{

        }
    }

    function guide_on_orderup_13(){
        $('.guide_txt').remove();
        window.frames['clientup'].$('.productload').parent("table").css({"position":"relative","z-index":""});
        window.frames['clientup'].$('.bcode').css({"position":"relative","z-index":"9999999","background":"#fff"});
        $('body').append("<div class='guide_txt' style='top:60%'><div class='guide_txt_inner'><div>기존에 재고를 등록했다면 바코드를 선택해줍니다.</div><div class='guide_next' onclick='guide_on_orderup_14()'>다음></div></div></div>");
    }

    function guide_on_orderup_14(){
        $('.guide_txt').remove();
        window.frames['clientup'].$('.bcode').css({"position":"relative","z-index":"","background":"#fff"});
        window.frames['clientup'].$('.removebtn').css({"position":"relative","z-index":"9999999","background":"#fff"});
        guide_toggle_on(window.frames['clientup'].$('.removebtn'));
        $('body').append("<div class='guide_txt' style='top:60%'><div class='guide_txt_inner'><div>아이콘 클릭시 해당 품목이 주문서에서 삭제됩니다.</div><div class='guide_next' onclick='guide_on_orderup_15()'>다음></div></div></div>");
    }

    function guide_on_orderup_15(){
        $('.guide_txt').remove();
        guide_toggle_off(guide_interval);
        window.frames['clientup'].$('.removebtn').css({"position":"relative","z-index":"","background":"#fff"});
        window.frames['clientup'].$('.test').children('input').css({"position":"relative","z-index":"9999999","background":"#fff"});
        $('body').append("<div class='guide_txt' style='top:60%'><div class='guide_txt_inner'><div>품목별 사이즈,색상 등 비고란 작성이 가능합니다.</div><div class='guide_next' onclick='guide_on_orderup_16()'>다음></div></div></div>");
    }

    function guide_on_orderup_16(){
        $('.guide_txt').remove();
        window.frames['clientup'].$('.test').children('input').css({"position":"relative","z-index":"","background":"#fff"});
        window.frames['clientup'].$('.minibuttonui').parent('td').css({"position":"relative","z-index":"9999999","background":"#fff"});
        $('body').append("<div class='guide_txt' style='top:60%'><div class='guide_txt_inner'><div>'-', '+' 버튼을 클릭하여 수량 조정이 가능합니다.</div><div class='guide_next' onclick='guide_on_orderup_17()'>다음></div></div></div>");
    }

    function guide_on_orderup_17(){
        $('.guide_txt').remove();
        window.frames['clientup'].$('.minibuttonui').parent('td').css({"position":"relative","z-index":""});
        window.frames['clientup'].$('#submit').css({"position":"relative","z-index":"9999999"});
        guide_toggle_on(window.frames['clientup'].$('#submit'));
        window.frames['clientup'].$('.maincontainer-3').append("<div class='guide_txt2' style=''></div>");
        $('body').append("<div class='guide_txt' style='top:25%'><div class='guide_txt_inner'><div>'주문하기' 버튼을 클릭하여 주문등록이 가능합니다.</div><div class='guide_next' onclick='guide_on_orderup_18()'>다음></div></div></div>");
    }

    function guide_on_orderup_18(){
        $('.guide_txt').remove();
        guide_toggle_off(guide_interval);
        window.frames['clientup'].$('#submit').css({"position":"relative","z-index":""});
        window.frames['clientup'].$('#submit2').css({"position":"relative","z-index":"9999999"});
        guide_toggle_on(window.frames['clientup'].$('#submit2'));
        $('body').append("<div class='guide_txt' style='top:25%'><div class='guide_txt_inner'><div>'확정주문하기' 버튼을 클릭하여 주문서 확정상태로</div><div>주문이 등록됩니다.</div><div class='guide_next' onclick='guide_on_orderup_19()'>다음></div></div></div>");
    }

    function guide_on_orderup_19(){
        guide_chk = 0;
        $('.guide_txt').remove();
        window.frames['clientup'].$('.guide_txt2').remove();
        guide_toggle_off(guide_interval);
        window.frames['clientup'].$('#submit2').css({"position":"relative","z-index":""});
        window.frames['clientup'].$('#submit').css({"position":"relative","z-index":"9999999"});
        guide_toggle_on(window.frames['clientup'].$('#submit'));
        $('body').append("<div class='guide_txt' style='top:25%'><div class='guide_txt_inner'><div>'주문하기' 버튼을 클릭해주세요.</div></div></div>");
    }

    function option_click(x){
        $(x).addClass('option_on');
        $('.sms_search_option_btn').not($(x)).removeClass('option_on');
    }

    async function sms_history_show(type){
        return axios({
            method:'post',
            url:'/OrderSmsHistoryShow',
            data:{
                company:"<%=company%>",
                type:type
            }
        }).then(res=>{
            const data = res.data;
            return data;
        });
    }

    function tab_click(x){
        $('.sms_display').show();
        $(x).addClass('tab_on');
        $('.sms_tab_menu').not($(x)).removeClass('tab_on');
        if($(x).hasClass('doc')){
            $('.sms_tr').remove();
            
            sms_history_show('basic').then(res=>{
                if(res.code==200){
                    let str = '';
                    let img_url = `/OrderSignImg?name=wait`;
                    let img_tag = '';
                    res.data.forEach(function(obj,index){
                        let doc_arr = [];
                        let order_type = [];
                        obj.doc.split(',').forEach(function(doc_obj,doc_index){
                            if(doc_obj==0){
                                doc_arr.push(`급여제공기록지`);
                            }else if(doc_obj==1){
                                doc_arr.push(`복지용구공급계약서`);
                            }if(doc_obj==2){
                                doc_arr.push(`제품설치대장`);
                            }if(doc_obj==3){
                                doc_arr.push(`개인정보 수집 및 활용동의서`);
                            }if(doc_obj==4){
                                doc_arr.push(`급여비용명세서`);
                            }
                        });
                        if(obj.open!=''){
                            console.log(obj.name,obj.open.split(' ')[0]);
                            img_url = `/OrderSignImg?name=${obj.name}&number=${obj.number}&company=${obj.company}&date=${obj.open.split(' ')[0]}&time=${new Date().getTime()}`;
                            img_tag = `<image src="${img_url}" class="ordersignimg" onerror="this.onerror=null; this.src='/OrderSignImg?name=wait'; this.style.width = '20%';">`;
                        }else{
                            img_url = `/OrderSignImg?name=wait`;
                            img_tag = `<image src="${img_url}" class="ordersignimg" onerror="this.onerror=null; this.src='/OrderSignImg?name=wait'; this.style.width = '20%';">`;
                        }
                        if(obj.rentproduct==''){
                            order_type = '판매';
                        }else{
                            order_type = '대여';
                        }
                        
                        str += `<tr class="sms_tr" data-key="${obj.orderkey}"><td>${obj.date.split(' ')[0]}</td><td>${obj.name}</td><td>${obj.number}</td><td>${order_type}</td><td>${doc_arr}</td><td>${obj.phonereq}</td><td>${obj.phoneres}</td><td>${img_tag}</td><td>${obj.orderkey}</td></tr>`;
                    });
                    $('.sms_table_tbody').append(str);
                    let tab_td = $('.sms_table_tbody tr td');
                    $(tab_td).click(function(){
                        if(!$(this).parent().hasClass('tablemenu')){
                            $('.clientmodify').attr('src',"//localhost:802/ordermodify/1/"+uid+"/"+$(this).parent().children('td:eq(2)').text()+"/"+$(this).parent().attr('data-key')+"?relid="+uid);
                            window.frames['clientmodify'].src="//localhost:802/ordermodify/1/"+uid+"/"+$(this).parent().children('td:eq(2)').text()+"/"+$(this).parent().attr('data-key')+"?relid="+uid;
                            let targeted_popup_class = $('[data-popup-open2]').attr('data-popup-open2');
                            $('[data-popup="' + targeted_popup_class + '"]').fadeIn(250);
                            document.getElementById('clientmodify').onload = function() {
                                $('.clientmodify').contents().find('.reloading').css({'display':'none'});
                            }
                        }
                    });
                }
            });
        }
    }

    function sms_send_history(){
        Swal.fire({
        icon: 'info',
        title: '문자발신내역',
        width:'90%',
        html:`
        <div class="flexcolumn sms_area" style="height:600px;">
            <div class="flex">
                <div class="sms_tab_menu all" onclick="tab_click(this);" style="display:none;">전체</div>
                <div class="sms_tab_menu basic" onclick="tab_click(this);" style="display:none;">카카오톡/문자</div>
                <div class="sms_tab_menu alert" onclick="tab_click(this);" style="display:none;">알림톡</div>
                <div class="sms_tab_menu doc tab_on" onclick="tab_click(this);">계약서</div>
            </div>
            <!--div class="flex sms_search_area">
                <div class="sms_search_option">
                    <div class="sms_search_option_btn option_on" onclick="option_click(this);" data-key="0">성함/인정번호</div>
                    &nbsp;&nbsp;&nbsp;
                    <div class="sms_search_option_btn" onclick="option_click(this);" data-key="1">수신번호</div>
                    &nbsp;&nbsp;&nbsp;
                </div>
                <div><input type="text" class="sms_search_input" placeholer="성함, 인정번호 검색" onkeyup="enterkey(this)"></div>
                &nbsp;&nbsp;<div><div class="sms_search_btn flex" style="width:80px;" onclick="sms_history_get($('.sms_search_input').val())">검색</div></div>
                &nbsp;&nbsp;&nbsp;&nbsp;<div class="sms_search_ctn_area">검색수&nbsp;:&nbsp;<div class="sms_search_cnt">0</div>명</div>
            </div-->
            <table class="sms_table sms_display">
            <thead>
                <tr class="tablemenu">
                <th>일자</th>
                <th>성함</th>
                <th>인정번호</th>
                <th>구분</th>
                <th>계약서</th>
                <th>발신번호</th>
                <th>수신번호</th>
                <th>서명</th>
                <th>주문서번호</th>
                </tr>
            </thead>
            <tbody class="sms_table_tbody" onscroll="checkScroll()">
            </tbody>
            </table>
        </div>
        `,
        allowOutsideClick: false,
        showCancelButton: true,
        showConfirmButton: false,
        cancelButtonColor: '#d33',
        confirmButtonText: '확인',
        cancelButtonText: '닫기',
        didOpen: ()=>{
            tab_click($('.sms_tab_menu').eq(3));
        }
        }).then(function(result){
            if(result.isConfirmed){
            
            }else if(result.dismiss == 'cancel'){
                
            }
        });
    }

    async function sendfax_get_url(){
        return axios({
            method:'post',
            url:'/SendFaxGetUrl',
            data:{
                companynumber:"<%=bankinfo[0].companynum.replace(/[^0-9]/g,'')%>",
                popbillid:"<%=bankinfo[0].popbillid%>"
            }
        }).then(res=>{
            const data = res.data;
            if(data){
                return data
            }
        });
    }

    function get_fax_history(){
        sendfax_get_url().then(res=>{
            window.open(res.data.result, "_blank");

        });
    }

    function order_excel_batch_read_file() {
        // 파일 입력을 위한 input 엘리먼트 생성
        const input = document.createElement('input');
        input.type = 'file';
        input.accept = '.xlsx, .xls';
        input.multiple = true; // 다중 파일 선택 가능
        
        input.onchange = async function(e) {
            const files = e.target.files;
            if (!files.length) return;

            try {
                // 로딩 표시
                Swal.fire({
                    title: '엑셀 파일 처리중...',
                    text: '잠시만 기다려주세요.',
                    allowOutsideClick: false,
                    didOpen: () => {
                        Swal.showLoading();
                    }
                });

                const results = [];
                let data_obj = {};
                for (let i = 0; i < files.length; i++) {
                    const file = files[i];
                    const data = await readExcelFile(file);
                    console.log(data);
                    data.forEach(function(obj,index){
                        obj['rows'] = index+2;
                        if(data_obj[obj.주문일자+"|"+obj.수급자성함+"|"+obj.인정번호+"|"+obj.배송주소]){
                            data_obj[obj.주문일자+"|"+obj.수급자성함+"|"+obj.인정번호+"|"+obj.배송주소].push(obj);
                        }else{
                            data_obj[obj.주문일자+"|"+obj.수급자성함+"|"+obj.인정번호+"|"+obj.배송주소] = [obj];
                        }
                    });
                    console.log(data_obj)
                    results.push({
                        filename: file.name,
                        data: data
                    });
                }

                // 서버로 데이터 전송
                const response = await axios.post('/BatchProcessExcel', {
                    data: data_obj,
                    company:"<%=company%>"
                }).then(res=>{
                    console.log(res.data)
                    let not_client_str = '';
                    let not_rows_str = '';
                    res.data.not_client_data.forEach(function(obj,index){
                        not_client_str += obj.split("|")[0]+" "+obj.split("|")[1]+" "+obj.split("|")[2]+"<br>";
                    });
                    res.data.not_rows_data.forEach(function(obj,index){
                        not_rows_str += ""+obj+"<br/>";
                    });
                    Swal.fire({
                        title: '처리 완료',
                        html: `
                            <div>
                                
                                <p style="font-weight:bold;">미등록 수급자: ${not_client_str}</p>
                                <p style="font-weight:bold;">미등록 행 번호: <br/>${not_rows_str}</p>
                            </div>
                        `,
                        icon: 'success',
                        width:"50%"
                    });
                });
                

            } catch (error) {
                console.error('Error processing files:', error);
                Swal.fire({
                    title: '오류 발생',
                    text: '파일 처리 중 오류가 발생했습니다.',
                    icon: 'error'
                });
            }
        };

        // 파일 선택 다이얼로그 표시
        input.click();
    }

    // 엑셀 파일 읽기 함수
    async function readExcelFile(file) {
        return new Promise((resolve, reject) => {
            const reader = new FileReader();
            
            reader.onload = function(e) {
                try {
                    const data = e.target.result;
                    const workbook = XLSX.read(data, { type: 'binary' });
                    const sheetName = workbook.SheetNames[0];
                    const worksheet = workbook.Sheets[sheetName];
                    const jsonData = XLSX.utils.sheet_to_json(worksheet);
                    
                    resolve(jsonData);
                } catch (error) {
                    reject(error);
                }
            };

            reader.onerror = function(error) {
                reject(error);
            };

            reader.readAsBinaryString(file);
        });
    }

    // 엑셀 데이터 유효성 검사
    function validateExcelData(data) {
        const requiredColumns = ['주문일자', '수급자성함', '인정번호', '품목코드', '수량', '배송주소', '상세주소', '연락처1', '연락처2', '보호자성함']; // 필요한 컬럼명 지정
        
        return data.every(row => {
            return requiredColumns.every(column => {
                return row.hasOwnProperty(column) && row[column] !== undefined;
            });
        });
    }

    // 진행 상태 업데이트 함수
    function updateProgress(current, total) {
        const progress = (current / total) * 100;
        Swal.update({
            text: `처리중... ${Math.round(progress)}%`
        });
    }


    function order_excel_batch(){
        Swal.fire({
            icon: 'info',
            title: '주문서엑셀등록',
            width:'40%',
            html: `<div style="display:flex; flex-direction:column; gap:10px; justify-content:flex-start; align-items:flex-start; font-weight:bold;">
                <div style="font-weight:bold;">* 주문서엑셀등록은 주문서 엑셀 파일을 업로드하여 주문서를 일괄입력하는 기능입니다.</div>
                <div style="font-weight:bold;">* 엑셀 양식 파일을 다운로드하여 사용할 수 있습니다.</div>
                <div style="font-weight:bold;">* 사업소에 등록되어있는 수급자만 주문서가 입력됩니다.</div>
                <div style="font-weight:bold;">* 구입제품만 등록할 수 있습니다.</div>
                </div>
            <div class="flex" style="margin:10px 0px;">
                <div class="order_excel_batch_btn" onclick="order_excel_batch_download('주문및발주일괄등록','/주문및발주일괄등록.xlsx')">엑셀양식 다운로드</div>
                <div class="order_excel_batch_btn" onclick="order_excel_batch_read_file()">주문서엑셀등록</div>
            </div>`,
            // confirmButtonText: '확인',
            cancelButtonText: '닫기',
            allowOutsideClick: false,
            showCancelButton: true,
            showConfirmButton: false,
            cancelButtonColor: '#d33',
        })
    }

    function order_excel_batch_download(filename,filepath){
        var element = document.createElement('a');
        element.setAttribute('href', filepath);
        element.setAttribute('download', filename);
        document.body.appendChild(element);
        element.click();
    }

    function lookup_claim_alert(sdate,edate){
        const today = new Date();
        const firstDay = new Date(today.getFullYear(), today.getMonth(), 1);
        const lastDay = new Date(today.getFullYear(), today.getMonth() + 1, 0);
        
        // YYYY-MM-DD 형식으로 변환
        const formatDate = (date) => {
            const year = date.getFullYear();
            const month = String(date.getMonth() + 1).padStart(2, '0');
            const day = String(date.getDate()).padStart(2, '0');
            return `${year}-${month}-${day}`;
        };
        if(!sdate){
            sdate = formatDate(firstDay).replace(/-/g,'');
        }
        if(!edate){
            edate = formatDate(lastDay).replace(/-/g,'');
        }
        // sdate와 edate를 Date 객체로 변환
        const startDate = new Date(sdate.slice(0,4), parseInt(sdate.slice(4,6))-1);
        const endDate = new Date(edate.slice(0,4), parseInt(edate.slice(4,6))-1);
        
        // 결과 배열 초기화
        let claim_alert_date = [];
        
        // 현재 날짜를 시작일로 설정
        let currentDate = new Date(startDate);
        
        // 종료일까지 반복하면서 각 월을 배열에 추가
        while (currentDate <= endDate) {
            const year = currentDate.getFullYear();
            const month = String(currentDate.getMonth() + 1).padStart(2, '0');
            claim_alert_date.push(year + month);
            
            // 다음 달로 이동
            currentDate.setMonth(currentDate.getMonth() + 1);
        }
        // 최대 조회기간 1년 체크
        const yearDiff = endDate.getFullYear() - startDate.getFullYear();
        const monthDiff = endDate.getMonth() - startDate.getMonth();
        const totalMonthDiff = yearDiff * 12 + monthDiff;

        if (totalMonthDiff > 12) {
            Swal.fire({
                title: '알림',
                text: '최대 조회기간은 1년입니다.',
                icon: 'warning',
                confirmButtonText: '확인'
            });
            return;
        }
        // sdate와 edate를 숫자로 변환하여 비교
        const startNum = parseInt(sdate);
        const endNum = parseInt(edate);
        
        if(startNum > endNum) {
            Swal.fire({
                title: '알림',
                text: '종료일이 시작일보다 빠를 수 없습니다.',
                icon: 'warning', 
                confirmButtonText: '확인'
            });
            return;
        }
        console.log(claim_alert_date)
        axios.post('/RedisGetClaimAlert',{
            company:"<%=company%>",
            claim_alert_date:claim_alert_date
        }).then(res=>{
            console.log(res.data)
            if(res.data.fail.length>0){
                for(let i=0;i<res.data.fail.length;i++){
                    socket.emit('go_lookup_claim_alert_req',{
                        name:uid,
                        company:"<%=company%>",
                        date:res.data.fail[i]
                    });
                }
            }
            /*res.data 예시
            code:200
            hgetall:Array(13)
            0:
            data:{BDAY: "19421008", QLF_CHWIDUK_DT: "20241027", CHG_AF_QLF_TYPE: "상실", FNM: "김순식"}
            key:"ClaimAlert:20241121:(수)복지용구의료기3:L2007137253"

            1:
            data :{CHG_BF_QLF_TYPE: "일반", BDAY: "19331224", QLF_CHWIDUK_DT: "20241108", CHG_AF_QLF_TYPE: "상실", FNM: "백달심"}
            key:"ClaimAlert:20241122:(수)복지용구의료기3:L1624001486"
            */
            Swal.fire({
                title:"자격변동",
                html:`
                    <div style="margin-bottom:10px; display:flex; align-items:center; justify-content:center;">
                        <select id="claim_alert_start_year" style="padding:5px; border:1px solid #ddd; border-radius:5px; margin-right:5px;">
                            <% for(let y=new Date().getFullYear(); y>=2020; y--) { %>
                                <option value="<%=y%>"><%=y%>년</option>
                            <% } %>
                        </select>
                        <select id="claim_alert_start_month" style="padding:5px; border:1px solid #ddd; border-radius:5px;">
                            <% for(let m=1; m<=12; m++) { %>
                                <option value="<%=String(m).padStart(2,'0')%>"><%=m%>월</option>
                            <% } %>
                        </select>
                        <span style="margin:0 10px; font-weight:bold;">~</span>
                        <select id="claim_alert_end_year" style="padding:5px; border:1px solid #ddd; border-radius:5px; margin-right:5px;">
                            <% for(let y=new Date().getFullYear(); y>=2020; y--) { %>
                                <option value="<%=y%>"><%=y%>년</option>
                            <% } %>
                        </select>
                        <select id="claim_alert_end_month" style="padding:5px; border:1px solid #ddd; border-radius:5px;">
                            <% for(let m=1; m<=12; m++) { %>
                                <option value="<%=String(m).padStart(2,'0')%>"><%=m%>월</option>
                            <% } %>
                        </select>
                        <button onclick="lookup_claim_alert($('#claim_alert_start_year').val()+$('#claim_alert_start_month').val(),$('#claim_alert_end_year').val()+$('#claim_alert_end_month').val())" style="padding:5px 10px; margin-left:10px; background:#4CAF50; color:white; border:none; border-radius:5px; cursor:pointer;">조회</button>
                    </div>
                    <div style="position: relative;">
                        <table style="margin:0 auto; border-collapse:collapse; width:100%; text-align:center;">
                            <thead style="position: sticky; top: 0; background: #f5f5f5; z-index: 1;">
                                <tr>
                                    <th style="width:100px; border:1px solid #ddd; font-weight:bold; height:30px; text-align:center;">수급자</th>
                                    <th style="width:120px; border:1px solid #ddd; font-weight:bold; height:30px; text-align:center;">인정번호</th>
                                    <th style="width:100px; border:1px solid #ddd; font-weight:bold; height:30px; text-align:center;">이전자격</th>
                                    <th style="width:100px; border:1px solid #ddd; font-weight:bold; height:30px; text-align:center;">변동자격</th>
                                    <th style="width:100px; border:1px solid #ddd; font-weight:bold; height:30px; text-align:center;">변동일자</th>
                                    <th style="width:10px; height:30px;"></th>
                                </tr>
                            </thead>
                        </table>
                        <div style="max-height: 500px; overflow-y: auto;">
                            <table style="margin:0 auto; border-collapse:collapse; width:100%; text-align:center;">
                                <tbody>
                                    ${res.data.hgetall.map(obj => `<tr>
                                        <td style="width:100px; border:1px solid #ddd; height:30px;">${obj.data.FNM}</td>
                                        <td style="width:120px; border:1px solid #ddd; height:30px;">${obj.key.split(":")[3]}</td>
                                        <td style="width:100px; border:1px solid #ddd; height:30px;">${!obj.data.CHG_BF_QLF_TYPE?"감경":obj.data.CHG_BF_QLF_TYPE}</td>
                                        <td style="width:100px; border:1px solid #ddd; height:30px; ${obj.data.CHG_AF_QLF_TYPE === '상실' ? 'color:red;' : ''}">${!obj.data.CHG_AF_QLF_TYPE ? "감경" : obj.data.CHG_AF_QLF_TYPE}</td>
                                        <td style="width:100px; border:1px solid #ddd; height:30px;">${obj.data.QLF_CHWIDUK_DT}</td>
                                    </tr>`).join('')}
                                </tbody>
                            </table>
                        </div>
                    </div>
                `,
                icon:"info",
                width:"50%",
                showConfirmButton:false,
                cancelButtonText:"닫기",
                cancelButtonColor:"#d33",
                showCancelButton:true,
                didOpen:()=>{
                    $("#claim_alert_start_year").val(sdate.substring(0,4));
                    $("#claim_alert_start_month").val(sdate.substring(4,6));
                    $("#claim_alert_end_year").val(edate.substring(0,4));
                    $("#claim_alert_end_month").val(edate.substring(4,6));
                }
            })
        });
    }

    function scrollToFeeChangeSection() {
        Swal.fire({
            title: '수가변경 품목 계약 안내',
            icon: 'info',
            html: `
                <div style="text-align: left; padding: 10px; line-height: 1.6; font-size: 16px;">
                    <p><strong>■ '한방에 큐' 메뉴로 이동해주세요</strong></p>
                    <p><strong>■ 일괄취소계약 진행 안내</strong></p>
                    <p>• 선택일괄취소계약 진행 시 계약종료일이 자동으로 <strong style="color: #ff4500;">2025-04-30</strong>로 설정됩니다.</p>
                    <p>• 취소된 계약은 4월 연장내역에 표시되며, 이후 재계약이 필요합니다.</p>
                    <br>
                    <p><strong>■ 재계약 방법</strong></p>
                    <p>• <strong>선택일괄연장</strong> 기능을 통해 일괄적으로 계약연장 진행</p>
                    <p>• 또는 개별 품목별로 연장 진행 가능</p>
                    <br>
                    <p><strong>■ 참고사항</strong></p>
                    <p style="color: #ff4500; font-weight: bold;">• 일괄취소계약 진행 시 공단창 반응이 없으시면 프로그램 재실행 업데이트 진행 하시면됩니다.</p>
                    <p style="color: #ff4500; font-weight: bold;">• 일괄연장 진행 시 수급자 현재 적용구간까지 연장으로 권장합니다.</p>
                    <p style="font-weight: bold;">• 당일 취소 후 당일 계약연장 시 '동일품목 계약건 알림'이 발생할 수 있습니다.<br/>
                        <strong>24시간 경과 후</strong> 재계약을 진행하시기 바랍니다</p>
                </div>
            `,
            confirmButtonText: '확인',
            confirmButtonColor: '#3085d6',
            width: '800px'
        });
    
    }
</script>

<body>
    <!--div class="wrapper">
        <ul class="bg-bubbles">
          <li></li>
          <li></li>
          <li></li>
          <li></li>
          <li></li>
          <li></li>
          <li></li>
          <li></li>
          <li></li>
          <li></li>
        </ul>
</div-->
    <!-- <div class="topline mobile"></div> -->
    <div class="pc" style="display:none;">
        <%- include('mobilemenu') %>
    </div>
    <a style="display:none;" class="btn" data-popup-open="popup-1" href="#">Open Popup #1</a>
    <a style="display:none;" class="btn" data-popup-open2="popup-2" href="#">Open Popup #1</a>
    <div class="maincontainer">
        <div class="guide_show mobile" onclick="guide_show()">화면 학습 하기</div>
        <div class="fee_change_notice" onclick="scrollToFeeChangeSection()" style="position: absolute; top: 40px; left: 250px; background-color: #333; color: white; padding: 10px 15px; border-radius: 5px; cursor: pointer; font-weight: bold; box-shadow: 0 2px 5px rgba(0,0,0,0.2);" onmouseover="this.style.backgroundColor='#555'; this.style.transform='scale(1.05)';" onmouseout="this.style.backgroundColor='#333'; this.style.transform='scale(1)';">
            수가변경품목 일괄취소계약안내 <span style="background-color: #ff4500; color: white; padding: 2px 5px; border-radius: 3px; font-size: 12px; margin-left: 5px;">확인</span>
        </div>
        <h1 class="title"><span class="material-icons">shopping_cart_checkout</span>&nbsp;&nbsp;&nbsp;&nbsp;<%= title %></h1>
    
        <div>
            <div class="search-form">
                <input type="text" class="search-bar" name="query" onkeyup="enterkey(this)" placeholder=" 검색어를 입력하세요.">
                <input type="button" class="btnlock search-button material-icons" value="search" onclick="orderlookup(1,uid,$('#datepicker').val(),$('#datepicker2').val(),$(this).prev().val(),contract,delivery,product,centername,manager,phone,bcode,printchk,confirm1,confirm2,deliverycar,contents_size,buyrentview,memo);"><input type="button" class="search-button material-icons search-detail-button" value="manage_search" onclick="detailsearch()">
            </div>
            <div class="filterarr"></div>
            <div class="searchdetail" style="display:none;">
                <div>
                    <table>
                        <tr>
                            <td class="flexbetween"><span class="material-icons">watch_later</span>검색일자</td><td><input type="date"></td><td>~</td><td><input type="date"></td>
                        </tr>
                        <tr>
                            <td class="flexbetween"><span class="material-icons">people_alt</span>수급자</td><td><input type="text"></td>
                        </tr>
                        <tr>
                            <td class="flexbetween"><span class="material-icons">category</span>품목</td><td><input type="text"></td>
                        </tr>
                        <tr>
                            <td class="flexbetween"><span class="material-icons">phone_in_talk</span>담당자</td><td><input type="text"></td>
                        </tr>
                        <tr>
                            <td class="flexbetween"><span class="material-icons">elderly_woman</span>센터명</td><td><input type="text"></td>
                        </tr>
                    </table>
                    <div class="flex">
                        <span>상세 검색하기</span>
                    </div>
                </div>
            </div>
        </div>

        <table class="topmenu">
            <tr class="topcls">
                <td class="clientup">
                    <span class="clientupbtn" onclick="orderup()">주문서입력</span>
                    <input class="date1 datepickerall" type="text" id="datepicker" autocomplete='off' value="2022-01-01">
                    ~
                    <input class="date2 datepickerall" type="text" id="datepicker2" autocomplete='off'>
                    <span class="clientupbtn" onclick="datesearch();">날짜조회</span>&nbsp;
                    <span class="clientupbtn mobile" onclick="datesearch('dday',this);">당일</span>&nbsp;
                    <span class="clientupbtn mobile" onclick="datesearch('yday',this);">전일</span>&nbsp;
                    <span class="clientupbtn mobile" onclick="datesearch('dmon',this);">당월</span>&nbsp;
                    <span class="clientupbtn mobile" onclick="datesearch('ymon',this);">전월</span>&nbsp;
                    <span class="clientupbtn mobile" onclick="datesearch('all',this);">전체</span>
                    <span class="orderexcel mobile" style="display:none;" onclick="excel_change_swal(contract,delivery,product,centername,manager,phone,bcode,printchk,confirm1,confirm2,deliverycar,memo);"><img src="/img/excelico.png">엑셀변환</span>
                    <span class="sms_send_history mobile" onclick="sms_send_history();">문자발송내역</span>
                    <span class="fax_send_history mobile" onclick="get_fax_history();">팩스발송내역</span>
                    <span class="order_excel_batch mobile" onclick="order_excel_batch();">주문서엑셀등록</span>
                    <span class="order_claim_alert mobile" onclick="lookup_claim_alert();">자격변동</span>
                </td>
                <td></td>
                
                <td class="mobile"><span class="material-icons" style="color:#e2a219">star</span>:<span>부분<br/>계약완료</span>&nbsp;<span class="material-icons" style="color:#00923d">change_history</span>:<span>취소<br/>계약완료</span>&nbsp;<span class="material-icons" style="color:#00923d">done</span>:<span>공단<br/>계약완료</span>&nbsp;<span class="material-icons" style="color:#ff0000">clear</span>:<span>공단<br/>미계약</span>&nbsp;<!--span class="material-icons" style="color:#000">horizontal_rule</span>:<span>비급여</span--></td>
            </tr>
        </table>

        <table class="statustabtable">
            <tbody>
                <tr class="statustab">
                    <td class="statuson all">전체</td><td class="not">미확정</td><td class="ok">확정</td><td class="go">출고</td><td class="as">A/S</td><td class="rel">요청</td>
                </tr>
            </tbody>
        </table>

        <!--div class="flexstart topmenu2">
            <div>선택일괄계약</div><div>선택일괄계약서출력</div>
        </div-->
        
        <table class="table ordertable">
            <tr class="tablemenu orderpagingtr" id="orderpagingtr">
                <td class="orderpaging" colspan="21">
                    
                </td>
            </tr>
            <tr class="center tablemenu borderblack sort_tr">
                <td class="order_chkbox"><input type="checkbox" class="listcheckbox allchk" onclick="allchk(this)"></td>
                <td class="datetd tr_date sort_date">일자</td>
                <td class="mname sort_name">수급자성함</td>
                <td>인정번호</td>
                <td width="90px;" class="mobile">생년월일</td>
                <td class="mobile">대상</td>
                <!--td class="mobile">등급</td>
                <td class="mobile">본인</br>부담율</td-->
                <td>품목명</td>
                <td width="50px;" class="sort_cnt">품목수량</td>
                <td class="deliverytxtm mobile" style="width:150px;">배송주소</td>
                <td width="100px;" class="mobile">보호자성함</td>
                <td class="mobile">구분</td>
                <td class="mobile">연락처</td>
                <td class="mobile tr_centername">센터명</td>
                <td width="80px;" class="mobile tr_manager">담당자</td>
                <td width="120px;" class="mobile">메모</td>
                <td width="70px;" class="mobile tr_delivery">배송방법</td>
                <td class="mobile tr_status">배송상태</td>
                <td width="50px;" class="contd">공단계약</td>
                <td width="30px;" class="contd">인쇄</td>
                <td width="30px;" class="contd">문자</td>
                <td width="30px;" class="mobile"></td>
            </tr>
           
        </table>

        <table class="topmenu">
            <tr>
                <td><span class="delrow" onclick="deleterow();">주문서 삭제</span></td>
                <td style="display:none;">관리중인 수급자:&nbsp;&nbsp;<span>명</span>&nbsp;<span>일반: 명</span>&nbsp;<span>감경: 명</span>&nbsp;<span>의료급여: 명</span>&nbsp;<span>기초: 명</span></td>
            </tr>
        </table>

        <div class="footer">
            <div style="display:none;" class="footerbutton1 flex"><span onclick="">계약서 출력</span><span class="material-icons">print</span></div>
        </div>

        <div class="popup" data-popup="popup-1">
            <div class="popup-inner">
                <iframe name="clientup" id="clientup" src="//localhost:802/orderup/1/<%=username%>" frameborder="0"></iframe>
                <a class="popup-close" data-popup-close="popup-1" href="#">x</a>
            </div>
        </div>

        <div class="popup2" id="popup2" data-popup="popup-2">
            <div class="popup2-inner">
                <iframe id='clientmodify' class='clientmodify' name="clientmodify" src="" frameborder="0"></iframe>
                <a class="popup2-close" data-popup-close="popup-2" href="#">x</a>
            </div>
        </div>

        <a style="display:none;" class="btn" data-guide-open="guide-1" href="#">Open guide #1</a>

        <div class="guide" data-guide="guide-1">
            <div class="guide-inner" style="display:none;">
                <a class="guide-close" data-guide-close="guide-1" href="#">x</a>
            </div>
        </div>
        <!-- <table id="excelbody" class="excelbody" style="position:fixed; bottom:99999999px;">

        </table> -->
        <div class="mobile">
            <%- include('channeltalk') %>
          </div>
        <div class="pc">
            <%- include('mobilefoot') %>
        </div>
    </div>
    <div style="height:700px; position:absolute; top:-1500px;">
        <iframe id="print_paymentfile" class="print3 iprint ion" name="print3" src="//localhost:802/paymentfile" frameborder="0" style="position:absolute; width:912px; height:700px; left:0px; background:#fff;" ></iframe>
        <iframe id="print_installbuyfile" class="print3 iprint ion" name="print3" src="//localhost:802/buy3" frameborder="0" style="position:absolute; width:912px; height:700px; left:0px; background:#fff;" ></iframe>
        <iframe id="print_rentfile" class="print1 iprint ion" name="print1" src="//localhost:802/rent2" frameborder="0" style="position:absolute; width:912px; height:700px; left:0px; background:#fff;" ></iframe>
        <iframe id="print_privacyfile" class="print3 iprint ion" name="print3" src="//localhost:802/privacyfile" frameborder="0" style="position:absolute; width:912px; height:700px; left:0px; background:#fff;" ></iframe>
        <iframe id="print_buyrentfile" class="print2 iprint ion" name="print2" src="//localhost:802/buy2" frameborder="0" style="position:absolute; width:912px; height:700px; left:0px; background:#fff;" ></iframe>
        <iframe id="print_buyfile" class="print1 iprint ion" name="print1" src="//localhost:802/test3" frameborder="0" style="position:absolute; width:912px; height:700px; left:0px; background:#fff;" ></iframe>
        <iframe id="print_rentfile" class="print1 iprint ion" name="print1" src="//localhost:802/rentnew" frameborder="0" style="position:absolute; width:912px; height:700px; left:0px; background:#fff;" ></iframe>

    </div>
    <div style="height:700px; position:absolute; top:-1500px;">
        <iframe id="print_zero1" class="iprint_zero ion" name="print3" src="//localhost:802/zero" frameborder="0" style="position:absolute; width:912px; height:700px; left:0px; background:#fff;" ></iframe>
        <iframe id="print_zero2" class="iprint_zero ion" name="print3" src="//localhost:802/zero2" frameborder="0" style="position:absolute; width:912px; height:700px; left:0px; background:#fff;" ></iframe>

    </div>
    <div style="height:700px; position:absolute; top:-1500px;">
        <iframe id="print_receipt1" class="iprint_receipt ion" name="print3" src="//localhost:802/receiptfile" frameborder="0" style="position:absolute; width:912px; height:700px; left:0px; background:#fff;" ></iframe>
    </div>
</body>

<script>
    function enterkey(x) {
        if (window.event.keyCode == 13) {
            //orderlookup(1,uid,'2020-01-01',chan_val,$(x).val(),'','','','','','','','');
            orderlookup(1,uid,$('#datepicker').val(),$('#datepicker2').val(),$(x).val(),contract,delivery,product,centername,manager,phone,bcode,printchk,confirm1,confirm2,deliverycar,contents_size,buyrentview,memo);
        }
    }

    function order_supply_func_callback(res){
        console.log("res",res)
        console.log(document.querySelector('.clientmodify').contentDocument.querySelector('.lastlookupdiv').textContent);
        document.querySelector('.clientmodify').contentWindow.order_supply_func_callback(res);
    }

    function order_supply_func(checked_order_tr_obj_arr,client_status_obj,src_type){
        order_supply(checked_order_tr_obj_arr,client_status_obj,order_supply_func_callback,src_type);
    }

    function order_supply_confirm_callback(){
        document.querySelector('.clientmodify').contentWindow.order_supply_confirm_callback(200);
    }

    function order_supply_confirm_func(src_key,type,option_data){
        order_supply_confirm(src_key,order_supply_confirm_callback,type,option_data);
    }
</script>

</html>